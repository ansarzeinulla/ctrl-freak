{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport cx from 'clsx';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useAppShellContext } from '../AppShell.context.mjs';\nimport classes from '../AppShell.module.css.mjs';\nconst AppShellHeader = factory((_props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    withBorder,\n    zIndex,\n    mod,\n    ...others\n  } = useProps(\"AppShellHeader\", null, _props);\n  const ctx = useAppShellContext();\n  if (ctx.disabled) {\n    return null;\n  }\n  return /* @__PURE__ */jsx(Box, {\n    component: \"header\",\n    ref,\n    mod: [{\n      \"with-border\": withBorder ?? ctx.withBorder\n    }, mod],\n    ...ctx.getStyles(\"header\", {\n      className: cx({\n        [RemoveScroll.classNames.zeroRight]: ctx.offsetScrollbars\n      }, className),\n      classNames,\n      styles,\n      style\n    }),\n    ...others,\n    __vars: {\n      \"--app-shell-header-z-index\": (zIndex ?? ctx.zIndex)?.toString()\n    }\n  });\n});\nAppShellHeader.classes = classes;\nAppShellHeader.displayName = \"@mantine/core/AppShellHeader\";\nexport { AppShellHeader };","map":{"version":3,"names":["AppShellHeader","factory","_props","ref","classNames","className","style","styles","unstyled","vars","withBorder","zIndex","mod","others","useProps","ctx","useAppShellContext","disabled","jsx","Box","component","getStyles","cx","RemoveScroll","zeroRight","offsetScrollbars","__vars","toString","classes","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/AppShell/AppShellHeader/AppShellHeader.tsx"],"sourcesContent":["import cx from 'clsx';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n} from '../../../core';\nimport { useAppShellContext } from '../AppShell.context';\nimport type { AppShellCompoundProps } from '../AppShell.types';\nimport classes from '../AppShell.module.css';\n\nexport type AppShellHeaderStylesNames = 'header';\n\nexport interface AppShellHeaderProps\n  extends BoxProps,\n    AppShellCompoundProps,\n    StylesApiProps<AppShellHeaderFactory>,\n    ElementProps<'header'> {}\n\nexport type AppShellHeaderFactory = Factory<{\n  props: AppShellHeaderProps;\n  ref: HTMLElement;\n  stylesNames: AppShellHeaderStylesNames;\n}>;\n\nexport const AppShellHeader = factory<AppShellHeaderFactory>((_props, ref) => {\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    withBorder,\n    zIndex,\n    mod,\n    ...others\n  } = useProps('AppShellHeader', null, _props);\n\n  const ctx = useAppShellContext();\n\n  if (ctx.disabled) {\n    return null;\n  }\n\n  return (\n    <Box\n      component=\"header\"\n      ref={ref}\n      mod={[{ 'with-border': withBorder ?? ctx.withBorder }, mod]}\n      {...ctx.getStyles('header', {\n        className: cx({ [RemoveScroll.classNames.zeroRight]: ctx.offsetScrollbars }, className),\n        classNames,\n        styles,\n        style,\n      })}\n      {...others}\n      __vars={{ '--app-shell-header-z-index': (zIndex ?? ctx.zIndex)?.toString() }}\n    />\n  );\n});\n\nAppShellHeader.classes = classes;\nAppShellHeader.displayName = '@mantine/core/AppShellHeader';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AA6BO,MAAMA,cAAA,GAAiBC,OAAA,CAA+B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAC5E,MAAM;IACJC,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,UAAA;IACAC,MAAA;IACAC,GAAA;IACA,GAAGC;EAAA,CACL,GAAIC,QAAA,CAAS,kBAAkB,MAAMZ,MAAM;EAE3C,MAAMa,GAAA,GAAMC,kBAAA,EAAmB;EAE/B,IAAID,GAAA,CAAIE,QAAA,EAAU;IAChB,OAAO;EACT;EAEA,sBACEC,GAAA,CAACC,GAAA;IACCC,SAAA,EAAU;IACVjB,GAAA;IACAS,GAAA,EAAK,CAAC;MAAE,eAAeF,UAAA,IAAcK,GAAA,CAAIL;IAAA,GAAcE,GAAG;IACzD,GAAGG,GAAA,CAAIM,SAAA,CAAU,UAAU;MAC1BhB,SAAA,EAAWiB,EAAA,CAAG;QAAE,CAACC,YAAA,CAAanB,UAAA,CAAWoB,SAAS,GAAGT,GAAA,CAAIU;MAAA,CAAiB,EAAGpB,SAAS;MACtFD,UAAA;MACAG,MAAA;MACAD;IAAA,CACD;IACA,GAAGO,MAAA;IACJa,MAAA,EAAQ;MAAE,+BAA+Bf,MAAA,IAAUI,GAAA,CAAIJ,MAAA,GAASgB,QAAA;IAAS;EAAE,EAC7E;AAEJ,CAAC;AAED3B,cAAA,CAAe4B,OAAA,GAAUA,OAAA;AACzB5B,cAAA,CAAe6B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}