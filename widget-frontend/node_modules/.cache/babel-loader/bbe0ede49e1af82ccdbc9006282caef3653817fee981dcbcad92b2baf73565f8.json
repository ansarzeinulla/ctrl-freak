{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"color\", \"autoContrast\", \"scrollSpyOptions\", \"initialData\", \"getControlProps\", \"minDepthToOffset\", \"depthOffset\", \"variant\", \"radius\", \"reinitializeRef\", \"attributes\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { useId, useScrollSpy, assignRef } from '@mantine/hooks';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius, getFontSize } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.mjs';\nimport classes from './TableOfContents.module.css.mjs';\nconst defaultProps = {\n  getControlProps: _ref => {\n    let {\n      data\n    } = _ref;\n    return {\n      children: data.value\n    };\n  }\n};\nconst varsResolver = createVarsResolver((theme, _ref2) => {\n  let {\n    color,\n    size,\n    variant,\n    autoContrast,\n    depthOffset,\n    radius\n  } = _ref2;\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    variant: variant || \"filled\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--toc-bg\": variant !== \"none\" ? colors.background : void 0,\n      \"--toc-color\": variant !== \"none\" ? colors.color : void 0,\n      \"--toc-size\": getFontSize(size),\n      \"--toc-depth-offset\": rem(depthOffset),\n      \"--toc-radius\": getRadius(radius)\n    }\n  };\n});\nconst TableOfContents = factory((_props, ref) => {\n  const props = useProps(\"TableOfContents\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      color,\n      autoContrast,\n      scrollSpyOptions,\n      initialData,\n      getControlProps,\n      minDepthToOffset,\n      depthOffset,\n      variant,\n      radius,\n      reinitializeRef,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"TableOfContents\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const idBase = useId();\n  const spy = useScrollSpy(scrollSpyOptions);\n  assignRef(reinitializeRef, spy.reinitialize);\n  const headingsData = spy.initialized ? spy.data : initialData || [];\n  const controls = headingsData.map((data, index) => {\n    const controlProps = getControlProps === null || getControlProps === void 0 ? void 0 : getControlProps({\n      active: index === spy.active,\n      data: _objectSpread(_objectSpread({}, data), {}, {\n        getNode: data.getNode || (() => {})\n      })\n    });\n    return /* @__PURE__ */jsx(UnstyledButton, _objectSpread(_objectSpread({\n      __vars: {\n        \"--depth-offset\": \"\".concat(data.depth - (minDepthToOffset || 1))\n      },\n      \"data-active\": index === spy.active || void 0,\n      variant\n    }, controlProps), getStyles(\"control\", {\n      className: controlProps === null || controlProps === void 0 ? void 0 : controlProps.className,\n      style: controlProps === null || controlProps === void 0 ? void 0 : controlProps.style\n    })), data.id || \"\".concat(idBase, \"-\").concat(index));\n  });\n  return /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread(_objectSpread({\n    ref,\n    variant\n  }, getStyles(\"root\")), others), {}, {\n    children: controls\n  }));\n});\nTableOfContents.displayName = \"@mantine/core/TableOfContents\";\nTableOfContents.classes = classes;\nexport { TableOfContents };","map":{"version":3,"names":["defaultProps","getControlProps","_ref","data","children","value","varsResolver","createVarsResolver","theme","_ref2","color","size","variant","autoContrast","depthOffset","radius","colors","variantColorResolver","primaryColor","root","background","getFontSize","rem","getRadius","TableOfContents","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","scrollSpyOptions","initialData","minDepthToOffset","reinitializeRef","attributes","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","idBase","useId","spy","useScrollSpy","assignRef","reinitialize","headingsData","initialized","controls","map","index","controlProps","active","_objectSpread","getNode","jsx","UnstyledButton","__vars","concat","depth","id","Box","displayName"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/TableOfContents/TableOfContents.tsx"],"sourcesContent":["import {\n  assignRef,\n  useId,\n  useScrollSpy,\n  UseScrollSpyHeadingData,\n  UseScrollSpyOptions,\n} from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  getRadius,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { UnstyledButton, UnstyledButtonProps } from '../UnstyledButton';\nimport classes from './TableOfContents.module.css';\n\nexport type TableOfContentsStylesNames = 'root' | 'control';\nexport type TableOfContentsVariant = 'filled' | 'light' | 'none';\nexport type TableOfContentsCssVariables = {\n  root: '--toc-bg' | '--toc-color' | '--toc-size' | '--toc-depth-offset' | '--toc-radius';\n};\n\nexport interface InitialTableOfContentsData {\n  /** Heading depth, 1-6 */\n  depth: number;\n\n  /** Heading text content value */\n  value: string;\n\n  /** Heading id, must be unique, used as `key` */\n  id?: string;\n}\n\nexport interface TableOfContentsGetControlPropsPayload {\n  /** True if the associated heading is currently the best match in the viewport */\n  active: boolean;\n\n  /** Data passed down from `use-scroll-spy` hook: depth, id, value */\n  data: UseScrollSpyHeadingData;\n}\n\nexport interface TableOfContentsProps\n  extends BoxProps,\n    StylesApiProps<TableOfContentsFactory>,\n    ElementProps<'div'> {\n  /** Key of `theme.colors` or any valid CSS color value @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Controls font-size and padding of all elements @default `'md'` */\n  size?: MantineSize | (string & {}) | number;\n\n  /** If set, adjusts text color based on background color for `filled` variant */\n  autoContrast?: boolean;\n\n  /** Options passed down to `use-scroll-spy` hook */\n  scrollSpyOptions?: UseScrollSpyOptions;\n\n  /** Data used to render content until actual values are retrieved from the DOM */\n  initialData?: InitialTableOfContentsData[];\n\n  /** A function to pass props down to controls, accepts values from `use-scroll-spy` hook as an argument and active state. */\n  getControlProps?: (\n    payload: TableOfContentsGetControlPropsPayload\n  ) => UnstyledButtonProps & ElementProps<'button'> & Record<`data-${string}`, any>;\n\n  /** Minimum `depth` value that requires offset, `1` by default */\n  minDepthToOffset?: number;\n\n  /** Controls padding on the left side of control, multiplied by (`depth` - `minDepthToOffset`), `20px` by default  */\n  depthOffset?: number | string;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`@default `theme.defaultRadius` */\n  radius?: MantineRadius;\n\n  /** A function to reinitialize headings from `use-scroll-spy` hook */\n  reinitializeRef?: React.RefObject<() => void>;\n}\n\nexport type TableOfContentsFactory = Factory<{\n  props: TableOfContentsProps;\n  ref: HTMLDivElement;\n  stylesNames: TableOfContentsStylesNames;\n  vars: TableOfContentsCssVariables;\n  variant: TableOfContentsVariant;\n}>;\n\nconst defaultProps = {\n  getControlProps: ({ data }) => ({\n    children: data.value,\n  }),\n} satisfies Partial<TableOfContentsProps>;\n\nconst varsResolver = createVarsResolver<TableOfContentsFactory>(\n  (theme, { color, size, variant, autoContrast, depthOffset, radius }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--toc-bg': variant !== 'none' ? colors.background : undefined,\n        '--toc-color': variant !== 'none' ? colors.color : undefined,\n        '--toc-size': getFontSize(size),\n        '--toc-depth-offset': rem(depthOffset),\n        '--toc-radius': getRadius(radius),\n      },\n    };\n  }\n);\n\nexport const TableOfContents = factory<TableOfContentsFactory>((_props, ref) => {\n  const props = useProps('TableOfContents', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    autoContrast,\n    scrollSpyOptions,\n    initialData,\n    getControlProps,\n    minDepthToOffset,\n    depthOffset,\n    variant,\n    radius,\n    reinitializeRef,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableOfContentsFactory>({\n    name: 'TableOfContents',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const idBase = useId();\n  const spy = useScrollSpy(scrollSpyOptions);\n\n  assignRef(reinitializeRef, spy.reinitialize);\n\n  const headingsData = (\n    spy.initialized ? spy.data : initialData || []\n  ) as UseScrollSpyHeadingData[];\n\n  const controls = headingsData.map((data, index) => {\n    const controlProps = getControlProps?.({\n      active: index === spy.active,\n      data: {\n        ...data,\n        getNode: data.getNode || (() => {}),\n      },\n    });\n\n    return (\n      <UnstyledButton\n        key={data.id || `${idBase}-${index}`}\n        __vars={{ '--depth-offset': `${data.depth - (minDepthToOffset || 1)}` }}\n        data-active={index === spy.active || undefined}\n        variant={variant}\n        {...controlProps}\n        {...getStyles('control', {\n          className: controlProps?.className,\n          style: controlProps?.style,\n        })}\n      />\n    );\n  });\n\n  return (\n    <Box ref={ref} variant={variant} {...getStyles('root')} {...others}>\n      {controls}\n    </Box>\n  );\n});\n\nTableOfContents.displayName = '@mantine/core/TableOfContents';\nTableOfContents.classes = classes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}