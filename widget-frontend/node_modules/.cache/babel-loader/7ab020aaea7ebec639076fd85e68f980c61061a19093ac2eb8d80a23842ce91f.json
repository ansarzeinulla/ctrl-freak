{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nfunction useUncontrolled(_ref) {\n  let {\n    value,\n    defaultValue,\n    finalValue,\n    onChange = () => {}\n  } = _ref;\n  const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue !== void 0 ? defaultValue : finalValue);\n  const handleUncontrolledChange = function (val) {\n    setUncontrolledValue(val);\n    for (var _len = arguments.length, payload = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      payload[_key - 1] = arguments[_key];\n    }\n    onChange === null || onChange === void 0 || onChange(val, ...payload);\n  };\n  if (value !== void 0) {\n    return [value, onChange, true];\n  }\n  return [uncontrolledValue, handleUncontrolledChange, false];\n}\nexport { useUncontrolled };","map":{"version":3,"names":["useUncontrolled","_ref","value","defaultValue","finalValue","onChange","uncontrolledValue","setUncontrolledValue","useState","handleUncontrolledChange","val","_len","arguments","length","payload","Array","_key"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/hooks/src/use-uncontrolled/use-uncontrolled.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport interface UseUncontrolledOptions<T> {\n  /** Value for controlled state */\n  value?: T;\n\n  /** Initial value for uncontrolled state */\n  defaultValue?: T;\n\n  /** Final value for uncontrolled state when value and defaultValue are not provided */\n  finalValue?: T;\n\n  /** Controlled state onChange handler */\n  onChange?: (value: T, ...payload: any[]) => void;\n}\n\nexport type UseUncontrolledReturnValue<T> = [\n  /** Current value */\n  T,\n\n  /** Handler to update the state, passes `value` and `payload` to `onChange` */\n  (value: T, ...payload: any[]) => void,\n\n  /** True if the state is controlled, false if uncontrolled */\n  boolean,\n];\n\nexport function useUncontrolled<T>({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {},\n}: UseUncontrolledOptions<T>): UseUncontrolledReturnValue<T> {\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    defaultValue !== undefined ? defaultValue : finalValue\n  );\n\n  const handleUncontrolledChange = (val: T, ...payload: any[]) => {\n    setUncontrolledValue(val);\n    onChange?.(val, ...payload);\n  };\n\n  if (value !== undefined) {\n    return [value as T, onChange, true];\n  }\n\n  return [uncontrolledValue as T, handleUncontrolledChange, false];\n}\n"],"mappings":";;;AA2BO,SAASA,gBAAAC,IAAA,EAK6C;EAAA,IAL1B;IACjCC,KAAA;IACAC,YAAA;IACAC,UAAA;IACAC,QAAA,GAAWA,CAAA,KAAM,CAAC;EACpB,IAAAJ,IAAA;EACE,MAAM,CAACK,iBAAA,EAAmBC,oBAAoB,IAAIC,QAAA,CAChDL,YAAA,KAAiB,SAAYA,YAAA,GAAeC,UAAA,CAC9C;EAEA,MAAMK,wBAAA,GAA2B,SAAAA,CAACC,GAAA,EAA8B;IAC9DH,oBAAA,CAAqBG,GAAG;IAAA,SAAAC,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADmBC,OAAA,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,OAAA,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAE3CX,QAAA,aAAAA,QAAA,eAAAA,QAAA,CAAWK,GAAA,EAAK,GAAGI,OAAO;EAC5B;EAEA,IAAIZ,KAAA,KAAU,QAAW;IACvB,OAAO,CAACA,KAAA,EAAYG,QAAA,EAAU,IAAI;EACpC;EAEA,OAAO,CAACC,iBAAA,EAAwBG,wBAAA,EAA0B,KAAK;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}