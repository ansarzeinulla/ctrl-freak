{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"color\", \"label\", \"offLabel\", \"onLabel\", \"id\", \"size\", \"radius\", \"wrapperProps\", \"thumbIcon\", \"checked\", \"defaultChecked\", \"onChange\", \"labelPosition\", \"description\", \"error\", \"disabled\", \"variant\", \"rootRef\", \"mod\", \"withThumbIndicator\", \"attributes\"];\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { extractStyleProps } from '../../core/Box/style-props/extract-style-props/extract-style-props.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InlineInput, InlineInputClasses } from '../../utils/InlineInput/InlineInput.mjs';\nimport { useSwitchGroupContext } from './SwitchGroup.context.mjs';\nimport { SwitchGroup } from './SwitchGroup/SwitchGroup.mjs';\nimport classes from './Switch.module.css.mjs';\nconst defaultProps = {\n  labelPosition: \"right\",\n  withThumbIndicator: true\n};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    radius,\n    color,\n    size\n  } = _ref;\n  return {\n    root: {\n      \"--switch-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--switch-height\": getSize(size, \"switch-height\"),\n      \"--switch-width\": getSize(size, \"switch-width\"),\n      \"--switch-thumb-size\": getSize(size, \"switch-thumb-size\"),\n      \"--switch-label-font-size\": getSize(size, \"switch-label-font-size\"),\n      \"--switch-track-label-padding\": getSize(size, \"switch-track-label-padding\"),\n      \"--switch-color\": color ? getThemeColor(color, theme) : void 0\n    }\n  };\n});\nconst Switch = factory((_props, ref) => {\n  var _contextProps$checked;\n  const props = useProps(\"Switch\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      color,\n      label,\n      offLabel,\n      onLabel,\n      id,\n      size,\n      radius,\n      wrapperProps,\n      thumbIcon,\n      checked,\n      defaultChecked,\n      onChange,\n      labelPosition,\n      description,\n      error,\n      disabled,\n      variant,\n      rootRef,\n      mod,\n      withThumbIndicator,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const ctx = useSwitchGroupContext();\n  const _size = size || (ctx === null || ctx === void 0 ? void 0 : ctx.size);\n  const getStyles = useStyles({\n    name: \"Switch\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const {\n    styleProps,\n    rest\n  } = extractStyleProps(others);\n  const uuid = useId(id);\n  const contextProps = ctx ? {\n    checked: ctx.value.includes(rest.value),\n    onChange: ctx.onChange\n  } : {};\n  const [_checked, handleChange] = useUncontrolled({\n    value: (_contextProps$checked = contextProps.checked) !== null && _contextProps$checked !== void 0 ? _contextProps$checked : checked,\n    defaultValue: defaultChecked,\n    finalValue: false\n  });\n  return /* @__PURE__ */jsxs(InlineInput, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, getStyles(\"root\")), {}, {\n    __staticSelector: \"Switch\",\n    __stylesApiProps: props,\n    id: uuid,\n    size: _size,\n    labelPosition,\n    label,\n    description,\n    error,\n    disabled,\n    bodyElement: \"label\",\n    labelElement: \"span\",\n    classNames,\n    styles,\n    unstyled,\n    \"data-checked\": contextProps.checked || checked || void 0,\n    variant,\n    ref: rootRef,\n    mod\n  }, styleProps), wrapperProps), {}, {\n    children: [/* @__PURE__ */jsx(\"input\", _objectSpread(_objectSpread({}, rest), {}, {\n      disabled,\n      checked: _checked,\n      \"data-checked\": contextProps.checked || checked || void 0,\n      onChange: event => {\n        var _contextProps$onChang;\n        ctx ? (_contextProps$onChang = contextProps.onChange) === null || _contextProps$onChang === void 0 ? void 0 : _contextProps$onChang.call(contextProps, event) : onChange === null || onChange === void 0 ? void 0 : onChange(event);\n        handleChange(event.currentTarget.checked);\n      },\n      id: uuid,\n      ref,\n      type: \"checkbox\",\n      role: \"switch\"\n    }, getStyles(\"input\"))), /* @__PURE__ */jsxs(Box, _objectSpread(_objectSpread({\n      \"aria-hidden\": \"true\",\n      component: \"span\",\n      mod: {\n        error,\n        \"label-position\": labelPosition,\n        \"without-labels\": !onLabel && !offLabel\n      }\n    }, getStyles(\"track\")), {}, {\n      children: [/* @__PURE__ */jsx(Box, _objectSpread(_objectSpread({\n        component: \"span\",\n        mod: {\n          \"reduce-motion\": true,\n          \"with-thumb-indicator\": withThumbIndicator && !thumbIcon\n        }\n      }, getStyles(\"thumb\")), {}, {\n        children: thumbIcon\n      })), /* @__PURE__ */jsx(\"span\", _objectSpread(_objectSpread({}, getStyles(\"trackLabel\")), {}, {\n        children: _checked ? onLabel : offLabel\n      }))]\n    }))]\n  }));\n});\nSwitch.classes = _objectSpread(_objectSpread({}, classes), InlineInputClasses);\nSwitch.displayName = \"@mantine/core/Switch\";\nSwitch.Group = SwitchGroup;\nexport { Switch };","map":{"version":3,"names":["defaultProps","labelPosition","withThumbIndicator","varsResolver","createVarsResolver","theme","_ref","radius","color","size","root","getRadius","getSize","getThemeColor","Switch","factory","_props","ref","_contextProps$checked","props","useProps","classNames","className","style","styles","unstyled","vars","label","offLabel","onLabel","id","wrapperProps","thumbIcon","checked","defaultChecked","onChange","description","error","disabled","variant","rootRef","mod","attributes","others","_objectWithoutProperties","_excluded","ctx","useSwitchGroupContext","_size","getStyles","useStyles","name","classes","styleProps","rest","extractStyleProps","uuid","useId","contextProps","value","includes","_checked","handleChange","useUncontrolled","defaultValue","finalValue","jsxs","InlineInput","_objectSpread","__staticSelector","__stylesApiProps","bodyElement","labelElement","children","jsx","event","_contextProps$onChang","call","currentTarget","type","role","Box","component","InlineInputClasses","displayName","Group","SwitchGroup"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Switch/Switch.tsx"],"sourcesContent":["import { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  DataAttributes,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InlineInput, InlineInputClasses, InlineInputStylesNames } from '../../utils/InlineInput';\nimport { useSwitchGroupContext } from './SwitchGroup.context';\nimport { SwitchGroup } from './SwitchGroup/SwitchGroup';\nimport classes from './Switch.module.css';\n\nexport type SwitchStylesNames =\n  | 'root'\n  | 'track'\n  | 'trackLabel'\n  | 'thumb'\n  | 'input'\n  | InlineInputStylesNames;\n\nexport type SwitchCssVariables = {\n  root:\n    | '--switch-radius'\n    | '--switch-height'\n    | '--switch-width'\n    | '--switch-thumb-size'\n    | '--switch-label-font-size'\n    | '--switch-track-label-padding'\n    | '--switch-color';\n};\n\nexport interface SwitchProps\n  extends BoxProps,\n    StylesApiProps<SwitchFactory>,\n    ElementProps<'input', 'size' | 'children'> {\n  /** Id used to bind input and label, if not passed, unique id will be generated instead */\n  id?: string;\n\n  /** Content of the `label` associated with the radio */\n  label?: React.ReactNode;\n\n  /** Inner label when the `Switch` is in unchecked state */\n  offLabel?: React.ReactNode;\n\n  /** Inner label when the `Switch` is in checked state */\n  onLabel?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color to set input color in checked state @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Controls size of all elements */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius,` @default `'xl'` */\n  radius?: MantineRadius;\n\n  /** Props passed down to the root element */\n  wrapperProps?: React.ComponentPropsWithoutRef<'div'> & DataAttributes;\n\n  /** Icon inside the thumb of the switch */\n  thumbIcon?: React.ReactNode;\n\n  /** Position of the label relative to the input @default `'right'` */\n  labelPosition?: 'left' | 'right';\n\n  /** Description displayed below the label */\n  description?: React.ReactNode;\n\n  /** Error displayed below the label */\n  error?: React.ReactNode;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** If set, the indicator will be displayed inside thumb @default `true` */\n  withThumbIndicator?: boolean;\n}\n\nexport type SwitchFactory = Factory<{\n  props: SwitchProps;\n  ref: HTMLInputElement;\n  stylesNames: SwitchStylesNames;\n  vars: SwitchCssVariables;\n  staticComponents: {\n    Group: typeof SwitchGroup;\n  };\n}>;\n\nconst defaultProps = {\n  labelPosition: 'right',\n  withThumbIndicator: true,\n} satisfies Partial<SwitchProps>;\n\nconst varsResolver = createVarsResolver<SwitchFactory>((theme, { radius, color, size }) => ({\n  root: {\n    '--switch-radius': radius === undefined ? undefined : getRadius(radius),\n    '--switch-height': getSize(size, 'switch-height'),\n    '--switch-width': getSize(size, 'switch-width'),\n    '--switch-thumb-size': getSize(size, 'switch-thumb-size'),\n    '--switch-label-font-size': getSize(size, 'switch-label-font-size'),\n    '--switch-track-label-padding': getSize(size, 'switch-track-label-padding'),\n    '--switch-color': color ? getThemeColor(color, theme) : undefined,\n  },\n}));\n\nexport const Switch = factory<SwitchFactory>((_props, ref) => {\n  const props = useProps('Switch', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    label,\n    offLabel,\n    onLabel,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    thumbIcon,\n    checked,\n    defaultChecked,\n    onChange,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    rootRef,\n    mod,\n    withThumbIndicator,\n    attributes,\n    ...others\n  } = props;\n\n  const ctx = useSwitchGroupContext();\n  const _size = size || ctx?.size;\n\n  const getStyles = useStyles<SwitchFactory>({\n    name: 'Switch',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value.includes(rest.value as string),\n        onChange: ctx.onChange,\n      }\n    : {};\n\n  const [_checked, handleChange] = useUncontrolled({\n    value: contextProps.checked ?? checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n  });\n\n  return (\n    <InlineInput\n      {...getStyles('root')}\n      __staticSelector=\"Switch\"\n      __stylesApiProps={props}\n      id={uuid}\n      size={_size}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      bodyElement=\"label\"\n      labelElement=\"span\"\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || checked || undefined}\n      variant={variant}\n      ref={rootRef}\n      mod={mod}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <input\n        {...rest}\n        disabled={disabled}\n        checked={_checked}\n        data-checked={contextProps.checked || checked || undefined}\n        onChange={(event) => {\n          ctx ? contextProps.onChange?.(event) : onChange?.(event);\n          handleChange(event.currentTarget.checked);\n        }}\n        id={uuid}\n        ref={ref}\n        type=\"checkbox\"\n        role=\"switch\"\n        {...getStyles('input')}\n      />\n\n      <Box\n        aria-hidden=\"true\"\n        component=\"span\"\n        mod={{ error, 'label-position': labelPosition, 'without-labels': !onLabel && !offLabel }}\n        {...getStyles('track')}\n      >\n        <Box\n          component=\"span\"\n          mod={{ 'reduce-motion': true, 'with-thumb-indicator': withThumbIndicator && !thumbIcon }}\n          {...getStyles('thumb')}\n        >\n          {thumbIcon}\n        </Box>\n        <span {...getStyles('trackLabel')}>{_checked ? onLabel : offLabel}</span>\n      </Box>\n    </InlineInput>\n  );\n});\n\nSwitch.classes = { ...classes, ...InlineInputClasses };\nSwitch.displayName = '@mantine/core/Switch';\nSwitch.Group = SwitchGroup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}