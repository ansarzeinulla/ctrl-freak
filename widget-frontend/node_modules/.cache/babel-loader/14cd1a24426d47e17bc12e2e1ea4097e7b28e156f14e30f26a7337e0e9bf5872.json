{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useRef, useEffect } from 'react';\nimport { useId } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport { getRadius, getSize } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { parseThemeColor } from '../../core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport { getAutoContrastValue } from '../../core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { extractStyleProps } from '../../core/Box/style-props/extract-style-props/extract-style-props.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InlineInput, InlineInputClasses } from '../../utils/InlineInput/InlineInput.mjs';\nimport { CheckboxCard } from './CheckboxCard/CheckboxCard.mjs';\nimport { useCheckboxGroupContext } from './CheckboxGroup.context.mjs';\nimport { CheckboxGroup } from './CheckboxGroup/CheckboxGroup.mjs';\nimport { CheckboxIndicator } from './CheckboxIndicator/CheckboxIndicator.mjs';\nimport { CheckboxIcon } from './CheckIcon.mjs';\nimport classes from './Checkbox.module.css.mjs';\nconst defaultProps = {\n  labelPosition: \"right\",\n  icon: CheckboxIcon,\n  variant: \"filled\"\n};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  size,\n  iconColor,\n  variant,\n  autoContrast\n}) => {\n  const parsedColor = parseThemeColor({\n    color: color || theme.primaryColor,\n    theme\n  });\n  const outlineColor = parsedColor.isThemeColor && parsedColor.shade === void 0 ? `var(--mantine-color-${parsedColor.color}-outline)` : parsedColor.color;\n  return {\n    root: {\n      \"--checkbox-size\": getSize(size, \"checkbox-size\"),\n      \"--checkbox-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--checkbox-color\": variant === \"outline\" ? outlineColor : getThemeColor(color, theme),\n      \"--checkbox-icon-color\": iconColor ? getThemeColor(iconColor, theme) : getAutoContrastValue(autoContrast, theme) ? getContrastColor({\n        color,\n        theme,\n        autoContrast\n      }) : void 0\n    }\n  };\n});\nconst Checkbox = factory((_props, forwardedRef) => {\n  const props = useProps(\"Checkbox\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    label,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    checked,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    indeterminate,\n    icon: Icon,\n    rootRef,\n    iconColor,\n    onChange,\n    autoContrast,\n    mod,\n    attributes,\n    ...others\n  } = props;\n  const ctx = useCheckboxGroupContext();\n  const _size = size || ctx?.size;\n  const getStyles = useStyles({\n    name: \"Checkbox\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const {\n    styleProps,\n    rest\n  } = extractStyleProps(others);\n  const uuid = useId(id);\n  const contextProps = ctx ? {\n    checked: ctx.value.includes(rest.value),\n    onChange: event => {\n      ctx.onChange(event);\n      onChange?.(event);\n    }\n  } : {};\n  const fallbackRef = useRef(null);\n  const ref = forwardedRef || fallbackRef;\n  useEffect(() => {\n    if (ref && \"current\" in ref && ref.current) {\n      ref.current.indeterminate = indeterminate || false;\n      if (indeterminate) {\n        ref.current.setAttribute(\"data-indeterminate\", \"\");\n      } else {\n        ref.current.removeAttribute(\"data-indeterminate\");\n      }\n    }\n  }, [indeterminate, ref]);\n  return /* @__PURE__ */jsx(InlineInput, {\n    ...getStyles(\"root\"),\n    __staticSelector: \"Checkbox\",\n    __stylesApiProps: props,\n    id: uuid,\n    size: _size,\n    labelPosition,\n    label,\n    description,\n    error,\n    disabled,\n    classNames,\n    styles,\n    unstyled,\n    \"data-checked\": contextProps.checked || checked || void 0,\n    variant,\n    ref: rootRef,\n    mod,\n    ...styleProps,\n    ...wrapperProps,\n    children: /* @__PURE__ */jsxs(Box, {\n      ...getStyles(\"inner\"),\n      mod: {\n        \"data-label-position\": labelPosition\n      },\n      children: [/* @__PURE__ */jsx(Box, {\n        component: \"input\",\n        id: uuid,\n        ref,\n        checked,\n        disabled,\n        mod: {\n          error: !!error\n        },\n        ...getStyles(\"input\", {\n          focusable: true,\n          variant\n        }),\n        onChange,\n        ...rest,\n        ...contextProps,\n        type: \"checkbox\"\n      }), /* @__PURE__ */jsx(Icon, {\n        indeterminate,\n        ...getStyles(\"icon\")\n      })]\n    })\n  });\n});\nCheckbox.classes = {\n  ...classes,\n  ...InlineInputClasses\n};\nCheckbox.displayName = \"@mantine/core/Checkbox\";\nCheckbox.Group = CheckboxGroup;\nCheckbox.Indicator = CheckboxIndicator;\nCheckbox.Card = CheckboxCard;\nexport { Checkbox };","map":{"version":3,"names":["defaultProps","labelPosition","icon","CheckboxIcon","variant","varsResolver","createVarsResolver","theme","radius","color","size","iconColor","autoContrast","parsedColor","parseThemeColor","primaryColor","outlineColor","isThemeColor","shade","root","getSize","getRadius","getThemeColor","getAutoContrastValue","getContrastColor","Checkbox","factory","_props","forwardedRef","props","useProps","classNames","className","style","styles","unstyled","vars","label","id","wrapperProps","checked","description","error","disabled","indeterminate","Icon","rootRef","onChange","mod","attributes","others","ctx","useCheckboxGroupContext","_size","getStyles","useStyles","name","classes","styleProps","rest","extractStyleProps","uuid","useId","contextProps","value","includes","event","fallbackRef","useRef","ref","useEffect","current","setAttribute","removeAttribute","jsx","InlineInput","__staticSelector","__stylesApiProps","children","jsxs","Box","component","focusable","type","InlineInputClasses","displayName","Group","CheckboxGroup","Indicator","CheckboxIndicator","Card","CheckboxCard"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Checkbox/Checkbox.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  DataAttributes,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  parseThemeColor,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InlineInput, InlineInputClasses, InlineInputStylesNames } from '../../utils/InlineInput';\nimport { CheckboxCard } from './CheckboxCard/CheckboxCard';\nimport { useCheckboxGroupContext } from './CheckboxGroup.context';\nimport { CheckboxGroup } from './CheckboxGroup/CheckboxGroup';\nimport { CheckboxIndicator } from './CheckboxIndicator/CheckboxIndicator';\nimport { CheckboxIcon } from './CheckIcon';\nimport classes from './Checkbox.module.css';\n\nexport type CheckboxVariant = 'filled' | 'outline';\nexport type CheckboxStylesNames = 'icon' | 'inner' | 'input' | InlineInputStylesNames;\nexport type CheckboxCssVariables = {\n  root: '--checkbox-size' | '--checkbox-radius' | '--checkbox-color' | '--checkbox-icon-color';\n};\n\nexport interface CheckboxProps\n  extends BoxProps,\n    StylesApiProps<CheckboxFactory>,\n    ElementProps<'input', 'size' | 'children'> {\n  /** Unique input id */\n  id?: string;\n\n  /** `label` associated with the checkbox */\n  label?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color to set input background color in checked state @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Controls size of the component @default `'sm'` */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius` @default `theme.defaultRadius` */\n  radius?: MantineRadius;\n\n  /** Props passed down to the root element */\n  wrapperProps?: React.ComponentPropsWithoutRef<'div'> & DataAttributes;\n\n  /** Position of the label relative to the input @default `'right'` */\n  labelPosition?: 'left' | 'right';\n\n  /** Description displayed below the label */\n  description?: React.ReactNode;\n\n  /** Error message displayed below the label */\n  error?: React.ReactNode;\n\n  /** Indeterminate state of the checkbox. If set, `checked` prop is ignored. */\n  indeterminate?: boolean;\n\n  /** Icon displayed when checkbox is in checked or indeterminate state */\n  icon?: React.FC<{ indeterminate: boolean | undefined; className: string }>;\n\n  /** Root element ref */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** Key of `theme.colors` or any valid CSS color to set icon color. By default, depends on `theme.autoContrast`. */\n  iconColor?: MantineColor;\n\n  /** If set, adjusts text color based on background color for `filled` variant */\n  autoContrast?: boolean;\n}\n\nexport type CheckboxFactory = Factory<{\n  props: CheckboxProps;\n  ref: HTMLInputElement;\n  stylesNames: CheckboxStylesNames;\n  vars: CheckboxCssVariables;\n  variant: CheckboxVariant;\n  staticComponents: {\n    Group: typeof CheckboxGroup;\n    Indicator: typeof CheckboxIndicator;\n    Card: typeof CheckboxCard;\n  };\n}>;\n\nconst defaultProps = {\n  labelPosition: 'right',\n  icon: CheckboxIcon,\n  variant: 'filled',\n} satisfies Partial<CheckboxProps>;\n\nconst varsResolver = createVarsResolver<CheckboxFactory>(\n  (theme, { radius, color, size, iconColor, variant, autoContrast }) => {\n    const parsedColor = parseThemeColor({ color: color || theme.primaryColor, theme });\n    const outlineColor =\n      parsedColor.isThemeColor && parsedColor.shade === undefined\n        ? `var(--mantine-color-${parsedColor.color}-outline)`\n        : parsedColor.color;\n\n    return {\n      root: {\n        '--checkbox-size': getSize(size, 'checkbox-size'),\n        '--checkbox-radius': radius === undefined ? undefined : getRadius(radius),\n        '--checkbox-color': variant === 'outline' ? outlineColor : getThemeColor(color, theme),\n        '--checkbox-icon-color': iconColor\n          ? getThemeColor(iconColor, theme)\n          : getAutoContrastValue(autoContrast, theme)\n            ? getContrastColor({ color, theme, autoContrast })\n            : undefined,\n      },\n    };\n  }\n);\n\nexport const Checkbox = factory<CheckboxFactory>((_props, forwardedRef) => {\n  const props = useProps('Checkbox', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    label,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    checked,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    indeterminate,\n    icon: Icon,\n    rootRef,\n    iconColor,\n    onChange,\n    autoContrast,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const ctx = useCheckboxGroupContext();\n  const _size = size || ctx?.size;\n\n  const getStyles = useStyles<CheckboxFactory>({\n    name: 'Checkbox',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value.includes(rest.value as string),\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          ctx.onChange(event);\n          onChange?.(event);\n        },\n      }\n    : {};\n\n  const fallbackRef = useRef<HTMLInputElement>(null);\n  const ref = forwardedRef || fallbackRef;\n\n  useEffect(() => {\n    if (ref && 'current' in ref && ref.current) {\n      ref.current.indeterminate = indeterminate || false;\n\n      if (indeterminate) {\n        ref.current.setAttribute('data-indeterminate', '');\n      } else {\n        ref.current.removeAttribute('data-indeterminate');\n      }\n    }\n  }, [indeterminate, ref]);\n\n  return (\n    <InlineInput\n      {...getStyles('root')}\n      __staticSelector=\"Checkbox\"\n      __stylesApiProps={props}\n      id={uuid}\n      size={_size}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || checked || undefined}\n      variant={variant}\n      ref={rootRef}\n      mod={mod}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <Box {...getStyles('inner')} mod={{ 'data-label-position': labelPosition }}>\n        <Box\n          component=\"input\"\n          id={uuid}\n          ref={ref}\n          checked={checked}\n          disabled={disabled}\n          mod={{ error: !!error }}\n          {...getStyles('input', { focusable: true, variant })}\n          onChange={onChange}\n          {...rest}\n          {...contextProps}\n          type=\"checkbox\"\n        />\n\n        <Icon indeterminate={indeterminate} {...getStyles('icon')} />\n      </Box>\n    </InlineInput>\n  );\n});\n\nCheckbox.classes = { ...classes, ...InlineInputClasses };\nCheckbox.displayName = '@mantine/core/Checkbox';\nCheckbox.Group = CheckboxGroup;\nCheckbox.Indicator = CheckboxIndicator;\nCheckbox.Card = CheckboxCard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}