{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useEffect, useCallback } from 'react';\nfunction useDebouncedState(defaultValue, wait, options = {\n  leading: false\n}) {\n  const [value, setValue] = useState(defaultValue);\n  const timeoutRef = useRef(null);\n  const leadingRef = useRef(true);\n  const clearTimeout = () => window.clearTimeout(timeoutRef.current);\n  useEffect(() => clearTimeout, []);\n  const debouncedSetValue = useCallback(newValue => {\n    clearTimeout();\n    if (leadingRef.current && options.leading) {\n      setValue(newValue);\n    } else {\n      timeoutRef.current = window.setTimeout(() => {\n        leadingRef.current = true;\n        setValue(newValue);\n      }, wait);\n    }\n    leadingRef.current = false;\n  }, [options.leading]);\n  return [value, debouncedSetValue];\n}\nexport { useDebouncedState };","map":{"version":3,"names":["useDebouncedState","defaultValue","wait","options","leading","value","setValue","useState","timeoutRef","useRef","leadingRef","clearTimeout","window","current","useEffect","debouncedSetValue","useCallback","newValue","setTimeout"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-debounced-state/use-debounced-state.ts"],"sourcesContent":["import { SetStateAction, useCallback, useEffect, useRef, useState } from 'react';\n\nexport interface UseDebouncedStateOptions {\n  leading?: boolean;\n}\n\nexport type UseDebouncedStateReturnValue<T> = [T, (newValue: SetStateAction<T>) => void];\n\nexport function useDebouncedState<T = any>(\n  defaultValue: T,\n  wait: number,\n  options: UseDebouncedStateOptions = { leading: false }\n): UseDebouncedStateReturnValue<T> {\n  const [value, setValue] = useState(defaultValue);\n  const timeoutRef = useRef<number | null>(null);\n  const leadingRef = useRef(true);\n\n  const clearTimeout = () => window.clearTimeout(timeoutRef.current!);\n  useEffect(() => clearTimeout, []);\n\n  const debouncedSetValue = useCallback(\n    (newValue: SetStateAction<T>) => {\n      clearTimeout();\n      if (leadingRef.current && options.leading) {\n        setValue(newValue);\n      } else {\n        timeoutRef.current = window.setTimeout(() => {\n          leadingRef.current = true;\n          setValue(newValue);\n        }, wait);\n      }\n      leadingRef.current = false;\n    },\n    [options.leading]\n  );\n\n  return [value, debouncedSetValue] as const;\n}\n"],"mappings":";;;AAQO,SAASA,kBACdC,YAAA,EACAC,IAAA,EACAC,OAAA,GAAoC;EAAEC,OAAA,EAAS;AAAA,CAAM,EACpB;EACjC,MAAM,CAACC,KAAA,EAAOC,QAAQ,IAAIC,QAAA,CAASN,YAAY;EAC/C,MAAMO,UAAA,GAAaC,MAAA,CAAsB,IAAI;EAC7C,MAAMC,UAAA,GAAaD,MAAA,CAAO,IAAI;EAE9B,MAAME,YAAA,GAAeA,CAAA,KAAMC,MAAA,CAAOD,YAAA,CAAaH,UAAA,CAAWK,OAAQ;EAClEC,SAAA,CAAU,MAAMH,YAAA,EAAc,EAAE;EAEhC,MAAMI,iBAAA,GAAoBC,WAAA,CACvBC,QAAA,IAAgC;IAC/BN,YAAA,EAAa;IACb,IAAID,UAAA,CAAWG,OAAA,IAAWV,OAAA,CAAQC,OAAA,EAAS;MACzCE,QAAA,CAASW,QAAQ;IACnB,OAAO;MACLT,UAAA,CAAWK,OAAA,GAAUD,MAAA,CAAOM,UAAA,CAAW,MAAM;QAC3CR,UAAA,CAAWG,OAAA,GAAU;QACrBP,QAAA,CAASW,QAAQ;MACnB,GAAGf,IAAI;IACT;IACAQ,UAAA,CAAWG,OAAA,GAAU;EACvB,GACA,CAACV,OAAA,CAAQC,OAAO,EAClB;EAEA,OAAO,CAACC,KAAA,EAAOU,iBAAiB;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}