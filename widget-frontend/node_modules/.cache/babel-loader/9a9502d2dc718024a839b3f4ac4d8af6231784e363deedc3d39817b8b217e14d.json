{"ast":null,"code":"'use client';\n\nimport { useState, useCallback } from 'react';\nfunction useDisclosure() {\n  let initialState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const [opened, setOpened] = useState(initialState);\n  const open = useCallback(() => {\n    setOpened(isOpened => {\n      if (!isOpened) {\n        var _options$onOpen;\n        (_options$onOpen = options.onOpen) === null || _options$onOpen === void 0 || _options$onOpen.call(options);\n        return true;\n      }\n      return isOpened;\n    });\n  }, [options.onOpen]);\n  const close = useCallback(() => {\n    setOpened(isOpened => {\n      if (isOpened) {\n        var _options$onClose;\n        (_options$onClose = options.onClose) === null || _options$onClose === void 0 || _options$onClose.call(options);\n        return false;\n      }\n      return isOpened;\n    });\n  }, [options.onClose]);\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n  return [opened, {\n    open,\n    close,\n    toggle\n  }];\n}\nexport { useDisclosure };","map":{"version":3,"names":["useDisclosure","initialState","arguments","length","undefined","options","opened","setOpened","useState","open","useCallback","isOpened","_options$onOpen","onOpen","call","close","_options$onClose","onClose","toggle"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/hooks/src/use-disclosure/use-disclosure.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\n\nexport interface UseDisclosureOptions {\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport interface UseDisclosureHandlers {\n  open: () => void;\n  close: () => void;\n  toggle: () => void;\n}\n\nexport type UseDisclosureReturnValue = [boolean, UseDisclosureHandlers];\n\nexport function useDisclosure(\n  initialState = false,\n  options: UseDisclosureOptions = {}\n): UseDisclosureReturnValue {\n  const [opened, setOpened] = useState(initialState);\n\n  const open = useCallback(() => {\n    setOpened((isOpened) => {\n      if (!isOpened) {\n        options.onOpen?.();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [options.onOpen]);\n\n  const close = useCallback(() => {\n    setOpened((isOpened) => {\n      if (isOpened) {\n        options.onClose?.();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [options.onClose]);\n\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n\n  return [opened, { open, close, toggle }];\n}\n"],"mappings":";;;AAeO,SAASA,cAAA,EAGY;EAAA,IAF1BC,YAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAe;EAAA,IACfG,OAAA,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAgC,EAAC;EAEjC,MAAM,CAACI,MAAA,EAAQC,SAAS,IAAIC,QAAA,CAASP,YAAY;EAEjD,MAAMQ,IAAA,GAAOC,WAAA,CAAY,MAAM;IAC7BH,SAAA,CAAWI,QAAA,IAAa;MACtB,IAAI,CAACA,QAAA,EAAU;QAAA,IAAAC,eAAA;QACb,CAAAA,eAAA,GAAAP,OAAA,CAAQQ,MAAA,cAAAD,eAAA,eAARA,eAAA,CAAAE,IAAA,CAAAT,OAAQ,CAAS;QACjB,OAAO;MACT;MACA,OAAOM,QAAA;IACT,CAAC;EACH,GAAG,CAACN,OAAA,CAAQQ,MAAM,CAAC;EAEnB,MAAME,KAAA,GAAQL,WAAA,CAAY,MAAM;IAC9BH,SAAA,CAAWI,QAAA,IAAa;MACtB,IAAIA,QAAA,EAAU;QAAA,IAAAK,gBAAA;QACZ,CAAAA,gBAAA,GAAAX,OAAA,CAAQY,OAAA,cAAAD,gBAAA,eAARA,gBAAA,CAAAF,IAAA,CAAAT,OAAQ,CAAU;QAClB,OAAO;MACT;MACA,OAAOM,QAAA;IACT,CAAC;EACH,GAAG,CAACN,OAAA,CAAQY,OAAO,CAAC;EAEpB,MAAMC,MAAA,GAASR,WAAA,CAAY,MAAM;IAC/BJ,MAAA,GAASS,KAAA,KAAUN,IAAA,EAAK;EAC1B,GAAG,CAACM,KAAA,EAAON,IAAA,EAAMH,MAAM,CAAC;EAExB,OAAO,CAACA,MAAA,EAAQ;IAAEG,IAAA;IAAMM,KAAA;IAAOG;EAAA,CAAQ;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}