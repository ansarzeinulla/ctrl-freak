{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, cloneElement } from 'react';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport { createEventHandler } from '../../../core/utils/create-event-handler/create-event-handler.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useMenuContext } from '../Menu.context.mjs';\nconst defaultProps = {\n  refProp: \"ref\"\n};\nconst MenuTarget = forwardRef((props, ref) => {\n  const {\n    children,\n    refProp,\n    ...others\n  } = useProps(\"MenuTarget\", defaultProps, props);\n  if (!isElement(children)) {\n    throw new Error(\"Menu.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  const ctx = useMenuContext();\n  const _childrenProps = children.props;\n  const onClick = createEventHandler(_childrenProps.onClick, () => {\n    if (ctx.trigger === \"click\") {\n      ctx.toggleDropdown();\n    } else if (ctx.trigger === \"click-hover\") {\n      ctx.setOpenedViaClick(true);\n      if (!ctx.opened) {\n        ctx.openDropdown();\n      }\n    }\n  });\n  const onMouseEnter = createEventHandler(_childrenProps.onMouseEnter, () => (ctx.trigger === \"hover\" || ctx.trigger === \"click-hover\") && ctx.openDropdown());\n  const onMouseLeave = createEventHandler(_childrenProps.onMouseLeave, () => {\n    if (ctx.trigger === \"hover\") {\n      ctx.closeDropdown();\n    } else if (ctx.trigger === \"click-hover\" && !ctx.openedViaClick) {\n      ctx.closeDropdown();\n    }\n  });\n  return /* @__PURE__ */jsx(Popover.Target, {\n    refProp,\n    popupType: \"menu\",\n    ref,\n    ...others,\n    children: cloneElement(children, {\n      onClick,\n      onMouseEnter,\n      onMouseLeave,\n      \"data-expanded\": ctx.opened ? true : void 0\n    })\n  });\n});\nMenuTarget.displayName = \"@mantine/core/MenuTarget\";\nexport { MenuTarget };","map":{"version":3,"names":["defaultProps","refProp","MenuTarget","forwardRef","props","ref","children","others","useProps","isElement","Error","ctx","useMenuContext","_childrenProps","onClick","createEventHandler","trigger","toggleDropdown","setOpenedViaClick","opened","openDropdown","onMouseEnter","onMouseLeave","closeDropdown","openedViaClick","jsx","Popover","Target","popupType","cloneElement","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Menu/MenuTarget/MenuTarget.tsx"],"sourcesContent":["import { cloneElement, forwardRef } from 'react';\nimport { createEventHandler, isElement, useProps } from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useMenuContext } from '../Menu.context';\n\nexport interface MenuTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop used to get element ref @default `'ref'` */\n  refProp?: string;\n}\n\nconst defaultProps = {\n  refProp: 'ref',\n} satisfies Partial<MenuTargetProps>;\n\nexport const MenuTarget = forwardRef<HTMLElement, MenuTargetProps>((props, ref) => {\n  const { children, refProp, ...others } = useProps('MenuTarget', defaultProps, props);\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Menu.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useMenuContext();\n  const _childrenProps = children.props as any;\n\n  const onClick = createEventHandler(_childrenProps.onClick, () => {\n    if (ctx.trigger === 'click') {\n      ctx.toggleDropdown();\n    } else if (ctx.trigger === 'click-hover') {\n      ctx.setOpenedViaClick(true);\n      if (!ctx.opened) {\n        ctx.openDropdown();\n      }\n    }\n  });\n\n  const onMouseEnter = createEventHandler(\n    _childrenProps.onMouseEnter,\n    () => (ctx.trigger === 'hover' || ctx.trigger === 'click-hover') && ctx.openDropdown()\n  );\n\n  const onMouseLeave = createEventHandler(_childrenProps.onMouseLeave, () => {\n    if (ctx.trigger === 'hover') {\n      ctx.closeDropdown();\n    } else if (ctx.trigger === 'click-hover' && !ctx.openedViaClick) {\n      ctx.closeDropdown();\n    }\n  });\n\n  return (\n    <Popover.Target refProp={refProp} popupType=\"menu\" ref={ref} {...others}>\n      {cloneElement(children, {\n        onClick,\n        onMouseEnter,\n        onMouseLeave,\n        'data-expanded': ctx.opened ? true : undefined,\n      } as any)}\n    </Popover.Target>\n  );\n});\n\nMenuTarget.displayName = '@mantine/core/MenuTarget';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAaA,MAAMA,YAAA,GAAe;EACnBC,OAAA,EAAS;AACX;AAEO,MAAMC,UAAA,GAAaC,UAAA,CAAyC,CAACC,KAAA,EAAOC,GAAA,KAAQ;EACjF,MAAM;IAAEC,QAAA;IAAUL,OAAA;IAAS,GAAGM;EAAA,CAAO,GAAIC,QAAA,CAAS,cAAcR,YAAA,EAAcI,KAAK;EAEnF,IAAI,CAACK,SAAA,CAAUH,QAAQ,GAAG;IACxB,MAAM,IAAII,KAAA,CACR,gKACF;EACF;EAEA,MAAMC,GAAA,GAAMC,cAAA,EAAe;EAC3B,MAAMC,cAAA,GAAiBP,QAAA,CAASF,KAAA;EAEhC,MAAMU,OAAA,GAAUC,kBAAA,CAAmBF,cAAA,CAAeC,OAAA,EAAS,MAAM;IAC/D,IAAIH,GAAA,CAAIK,OAAA,KAAY,SAAS;MAC3BL,GAAA,CAAIM,cAAA,EAAe;IACrB,WAAWN,GAAA,CAAIK,OAAA,KAAY,eAAe;MACxCL,GAAA,CAAIO,iBAAA,CAAkB,IAAI;MAC1B,IAAI,CAACP,GAAA,CAAIQ,MAAA,EAAQ;QACfR,GAAA,CAAIS,YAAA,EAAa;MACnB;IACF;EACF,CAAC;EAED,MAAMC,YAAA,GAAeN,kBAAA,CACnBF,cAAA,CAAeQ,YAAA,EACf,OAAOV,GAAA,CAAIK,OAAA,KAAY,WAAWL,GAAA,CAAIK,OAAA,KAAY,kBAAkBL,GAAA,CAAIS,YAAA,EAAa,CACvF;EAEA,MAAME,YAAA,GAAeP,kBAAA,CAAmBF,cAAA,CAAeS,YAAA,EAAc,MAAM;IACzE,IAAIX,GAAA,CAAIK,OAAA,KAAY,SAAS;MAC3BL,GAAA,CAAIY,aAAA,EAAc;IACpB,WAAWZ,GAAA,CAAIK,OAAA,KAAY,iBAAiB,CAACL,GAAA,CAAIa,cAAA,EAAgB;MAC/Db,GAAA,CAAIY,aAAA,EAAc;IACpB;EACF,CAAC;EAED,sBACEE,GAAA,CAACC,OAAA,CAAQC,MAAA,EAAR;IAAe1B,OAAA;IAAkB2B,SAAA,EAAU;IAAOvB,GAAA;IAAW,GAAGE,MAAA;IAC9DD,QAAA,EAAAuB,YAAA,CAAavB,QAAA,EAAU;MACtBQ,OAAA;MACAO,YAAA;MACAC,YAAA;MACA,iBAAiBX,GAAA,CAAIQ,MAAA,GAAS,OAAO;IAAA,CAC/B;EAAA,CACV;AAEJ,CAAC;AAEDjB,UAAA,CAAW4B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}