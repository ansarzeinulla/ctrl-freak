{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"onChange\", \"children\", \"multiple\", \"accept\", \"name\", \"form\", \"resetRef\", \"disabled\", \"capture\", \"inputProps\"];\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { forwardRef, useRef } from 'react';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst defaultProps = {\n  multiple: false\n};\nconst FileButton = forwardRef((props, ref) => {\n  const _useProps = useProps(\"FileButton\", defaultProps, props),\n    {\n      onChange,\n      children,\n      multiple,\n      accept,\n      name,\n      form,\n      resetRef,\n      disabled,\n      capture,\n      inputProps\n    } = _useProps,\n    others = _objectWithoutProperties(_useProps, _excluded);\n  const inputRef = useRef(null);\n  const onClick = () => {\n    var _inputRef$current;\n    !disabled && ((_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.click());\n  };\n  const handleChange = event => {\n    if (event.currentTarget.files === null) {\n      return onChange(multiple ? [] : null);\n    }\n    if (multiple) {\n      onChange(Array.from(event.currentTarget.files));\n    } else {\n      onChange(event.currentTarget.files[0] || null);\n    }\n  };\n  const reset = () => {\n    if (inputRef.current) {\n      inputRef.current.value = \"\";\n    }\n  };\n  assignRef(resetRef, reset);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(\"input\", _objectSpread({\n      style: {\n        display: \"none\"\n      },\n      type: \"file\",\n      accept,\n      multiple,\n      onChange: handleChange,\n      ref: useMergedRef(ref, inputRef),\n      name,\n      form,\n      capture\n    }, inputProps)), children(_objectSpread({\n      onClick\n    }, others))]\n  });\n});\nFileButton.displayName = \"@mantine/core/FileButton\";\nexport { FileButton };","map":{"version":3,"names":["defaultProps","multiple","FileButton","forwardRef","props","ref","_useProps","useProps","onChange","children","accept","name","form","resetRef","disabled","capture","inputProps","others","_objectWithoutProperties","_excluded","inputRef","useRef","onClick","_inputRef$current","current","click","handleChange","event","currentTarget","files","Array","from","reset","value","assignRef","jsxs","Fragment","jsx","_objectSpread","style","display","type","useMergedRef","displayName"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/FileButton/FileButton.tsx"],"sourcesContent":["import { forwardRef, useRef } from 'react';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nimport { useProps } from '../../core';\n\nexport interface FileButtonProps<Multiple extends boolean = false> {\n  /** Called when files are picked */\n  onChange: (payload: Multiple extends true ? File[] : File | null) => void;\n\n  /** Function that receives button props and returns react node that should be rendered */\n  children: (props: { onClick: () => void }) => React.ReactNode;\n\n  /** If set, user can pick more than one file */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, `\"image/png,image/jpeg\"` */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Reference of the function that should be called when value changes to null or empty array */\n  resetRef?: React.ForwardedRef<() => void>;\n\n  /** Disables file picker */\n  disabled?: boolean;\n\n  /** Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute. */\n  capture?: boolean | 'user' | 'environment';\n\n  /** Passes down props to the input element used to capture files */\n  inputProps?: React.ComponentPropsWithoutRef<'input'>;\n}\n\nconst defaultProps = {\n  multiple: false,\n} satisfies Partial<FileButtonProps>;\n\ntype FileButtonComponent = (<Multiple extends boolean = false>(\n  props: FileButtonProps<Multiple>\n) => React.ReactElement) & { displayName?: string };\n\nexport const FileButton: FileButtonComponent = forwardRef<HTMLInputElement, FileButtonProps>(\n  (props, ref) => {\n    const {\n      onChange,\n      children,\n      multiple,\n      accept,\n      name,\n      form,\n      resetRef,\n      disabled,\n      capture,\n      inputProps,\n      ...others\n    } = useProps('FileButton', defaultProps, props);\n\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const onClick = () => {\n      !disabled && inputRef.current?.click();\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (event.currentTarget.files === null) {\n        return onChange(multiple ? ([] as any) : null);\n      }\n\n      if (multiple) {\n        onChange(Array.from(event.currentTarget.files) as any);\n      } else {\n        onChange(event.currentTarget.files[0] || null);\n      }\n    };\n\n    const reset = () => {\n      if (inputRef.current) {\n        inputRef.current.value = '';\n      }\n    };\n\n    assignRef(resetRef, reset);\n\n    return (\n      <>\n        <input\n          style={{ display: 'none' }}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n          onChange={handleChange}\n          ref={useMergedRef(ref, inputRef)}\n          name={name}\n          form={form}\n          capture={capture}\n          {...inputProps}\n        />\n\n        {children({ onClick, ...others })}\n      </>\n    );\n  }\n) as any;\n\nFileButton.displayName = '@mantine/core/FileButton';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAoCA,MAAMA,YAAA,GAAe;EACnBC,QAAA,EAAU;AACZ;AAMO,MAAMC,UAAA,GAAkCC,UAAA,CAC7C,CAACC,KAAA,EAAOC,GAAA,KAAQ;EACd,MAAAC,SAAA,GAYIC,QAAA,CAAS,cAAcP,YAAA,EAAcI,KAAK;IAZxC;MACJI,QAAA;MACAC,QAAA;MACAR,QAAA;MACAS,MAAA;MACAC,IAAA;MACAC,IAAA;MACAC,QAAA;MACAC,QAAA;MACAC,OAAA;MACAC;IACG,CACL,GAAAV,SAAA;IADKW,MAAA,GAAAC,wBAAA,CAAAZ,SAAA,EAAAa,SAAA;EAGL,MAAMC,QAAA,GAAWC,MAAA,CAAyB,IAAI;EAE9C,MAAMC,OAAA,GAAUA,CAAA,KAAM;IAAA,IAAAC,iBAAA;IACpB,CAACT,QAAA,MAAAS,iBAAA,GAAYH,QAAA,CAASI,OAAA,cAAAD,iBAAA,uBAATA,iBAAA,CAAkBE,KAAA,EAAM;EACvC;EAEA,MAAMC,YAAA,GAAgBC,KAAA,IAA+C;IACnE,IAAIA,KAAA,CAAMC,aAAA,CAAcC,KAAA,KAAU,MAAM;MACtC,OAAOrB,QAAA,CAASP,QAAA,GAAY,EAAC,GAAY,IAAI;IAC/C;IAEA,IAAIA,QAAA,EAAU;MACZO,QAAA,CAASsB,KAAA,CAAMC,IAAA,CAAKJ,KAAA,CAAMC,aAAA,CAAcC,KAAK,CAAQ;IACvD,OAAO;MACLrB,QAAA,CAASmB,KAAA,CAAMC,aAAA,CAAcC,KAAA,CAAM,CAAC,KAAK,IAAI;IAC/C;EACF;EAEA,MAAMG,KAAA,GAAQA,CAAA,KAAM;IAClB,IAAIZ,QAAA,CAASI,OAAA,EAAS;MACpBJ,QAAA,CAASI,OAAA,CAAQS,KAAA,GAAQ;IAC3B;EACF;EAEAC,SAAA,CAAUrB,QAAA,EAAUmB,KAAK;EAEzB,sBACEG,IAAA,CAAAC,QAAA;IACE3B,QAAA,kBAAA4B,GAAA,CAAC,SAAAC,aAAA;MACCC,KAAA,EAAO;QAAEC,OAAA,EAAS;MAAA,CAAO;MACzBC,IAAA,EAAK;MACL/B,MAAA;MACAT,QAAA;MACAO,QAAA,EAAUkB,YAAA;MACVrB,GAAA,EAAKqC,YAAA,CAAarC,GAAA,EAAKe,QAAQ;MAC/BT,IAAA;MACAC,IAAA;MACAG;IAAA,GACIC,UAAA,EACN,EAECP,QAAA,CAAA6B,aAAA;MAAWhB;IAAA,GAAYL,MAAA,CAAQ;EAAA,CAClC;AAEJ,CACF;AAEAf,UAAA,CAAWyC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}