{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"children\", \"icon\", \"iconSize\", \"cite\", \"attributes\"];\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { parseThemeColor } from '../../core/MantineProvider/color-functions/parse-theme-color/parse-theme-color.mjs';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { rgba } from '../../core/MantineProvider/color-functions/rgba/rgba.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Blockquote.module.css.mjs';\nconst defaultProps = {\n  iconSize: 48\n};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    color,\n    iconSize,\n    radius\n  } = _ref;\n  const darkParsed = parseThemeColor({\n    color: color || theme.primaryColor,\n    theme,\n    colorScheme: \"dark\"\n  });\n  const lightParsed = parseThemeColor({\n    color: color || theme.primaryColor,\n    theme,\n    colorScheme: \"light\"\n  });\n  return {\n    root: {\n      \"--bq-bg-light\": rgba(lightParsed.value, 0.07),\n      \"--bq-bg-dark\": rgba(darkParsed.value, 0.06),\n      \"--bq-bd\": getThemeColor(color, theme),\n      \"--bq-icon-size\": rem(iconSize),\n      \"--bq-radius\": getRadius(radius)\n    }\n  };\n});\nconst Blockquote = factory((_props, ref) => {\n  const props = useProps(\"Blockquote\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      children,\n      icon,\n      iconSize,\n      cite,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"Blockquote\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsxs(Box, _objectSpread(_objectSpread(_objectSpread({\n    component: \"blockquote\",\n    ref\n  }, getStyles(\"root\")), others), {}, {\n    children: [icon && /* @__PURE__ */jsx(\"span\", _objectSpread(_objectSpread({}, getStyles(\"icon\")), {}, {\n      children: icon\n    })), children, cite && /* @__PURE__ */jsx(\"cite\", _objectSpread(_objectSpread({}, getStyles(\"cite\")), {}, {\n      children: cite\n    }))]\n  }));\n});\nBlockquote.classes = classes;\nBlockquote.displayName = \"@mantine/core/Blockquote\";\nexport { Blockquote };","map":{"version":3,"names":["defaultProps","iconSize","varsResolver","createVarsResolver","theme","_ref","color","radius","darkParsed","parseThemeColor","primaryColor","colorScheme","lightParsed","root","rgba","value","getThemeColor","rem","getRadius","Blockquote","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","icon","cite","attributes","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","jsxs","Box","_objectSpread","component","jsx","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Blockquote/Blockquote.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  parseThemeColor,\n  rem,\n  rgba,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Blockquote.module.css';\n\nexport type BlockquoteStylesNames = 'root' | 'icon' | 'cite';\nexport type BlockquoteCssVariables = {\n  root: '--bq-bg-light' | '--bq-bg-dark' | '--bq-bd' | '--bq-icon-size' | '--bq-radius';\n};\n\nexport interface BlockquoteProps\n  extends BoxProps,\n    StylesApiProps<BlockquoteFactory>,\n    ElementProps<'blockquote', 'cite'> {\n  /** Blockquote icon, displayed at the top left side */\n  icon?: React.ReactNode;\n\n  /** Controls icon `width` and `height`, numbers are converted to rem @default `40` */\n  iconSize?: number | string;\n\n  /** Key of `theme.colors` or any valid CSS color @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius` @default `theme.defaultRadius` */\n  radius?: MantineRadius;\n\n  /** Reference to a cited quote */\n  cite?: React.ReactNode;\n}\n\nexport type BlockquoteFactory = Factory<{\n  props: BlockquoteProps;\n  ref: HTMLQuoteElement;\n  stylesNames: BlockquoteStylesNames;\n  vars: BlockquoteCssVariables;\n}>;\n\nconst defaultProps = {\n  iconSize: 48,\n} satisfies Partial<BlockquoteProps>;\n\nconst varsResolver = createVarsResolver<BlockquoteFactory>((theme, { color, iconSize, radius }) => {\n  const darkParsed = parseThemeColor({\n    color: color || theme.primaryColor,\n    theme,\n    colorScheme: 'dark',\n  });\n\n  const lightParsed = parseThemeColor({\n    color: color || theme.primaryColor,\n    theme,\n    colorScheme: 'light',\n  });\n\n  return {\n    root: {\n      '--bq-bg-light': rgba(lightParsed.value, 0.07),\n      '--bq-bg-dark': rgba(darkParsed.value, 0.06),\n      '--bq-bd': getThemeColor(color, theme),\n      '--bq-icon-size': rem(iconSize),\n      '--bq-radius': getRadius(radius),\n    },\n  };\n});\n\nexport const Blockquote = factory<BlockquoteFactory>((_props, ref) => {\n  const props = useProps('Blockquote', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    icon,\n    iconSize,\n    cite,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BlockquoteFactory>({\n    name: 'Blockquote',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box component=\"blockquote\" ref={ref} {...getStyles('root')} {...others}>\n      {icon && <span {...getStyles('icon')}>{icon}</span>}\n      {children}\n      {cite && <cite {...getStyles('cite')}>{cite}</cite>}\n    </Box>\n  );\n});\n\nBlockquote.classes = classes;\nBlockquote.displayName = '@mantine/core/Blockquote';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,MAAMA,YAAA,GAAe;EACnBC,QAAA,EAAU;AACZ;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CAAsC,CAACC,KAAA,EAAAC,IAAA,KAAuC;EAAA,IAAhC;IAAEC,KAAA;IAAOL,QAAA;IAAUM;EAAA,CAAO,GAAAF,IAAA;EAC3F,MAAMG,UAAA,GAAaC,eAAA,CAAgB;IACjCH,KAAA,EAAOA,KAAA,IAASF,KAAA,CAAMM,YAAA;IACtBN,KAAA;IACAO,WAAA,EAAa;EAAA,CACd;EAED,MAAMC,WAAA,GAAcH,eAAA,CAAgB;IAClCH,KAAA,EAAOA,KAAA,IAASF,KAAA,CAAMM,YAAA;IACtBN,KAAA;IACAO,WAAA,EAAa;EAAA,CACd;EAED,OAAO;IACLE,IAAA,EAAM;MACJ,iBAAiBC,IAAA,CAAKF,WAAA,CAAYG,KAAA,EAAO,IAAI;MAC7C,gBAAgBD,IAAA,CAAKN,UAAA,CAAWO,KAAA,EAAO,IAAI;MAC3C,WAAWC,aAAA,CAAcV,KAAA,EAAOF,KAAK;MACrC,kBAAkBa,GAAA,CAAIhB,QAAQ;MAC9B,eAAeiB,SAAA,CAAUX,MAAM;IAAA;EACjC,CACF;AACF,CAAC;AAEM,MAAMY,UAAA,GAAaC,OAAA,CAA2B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACpE,MAAMC,KAAA,GAAQC,QAAA,CAAS,cAAcxB,YAAA,EAAcqB,MAAM;EACzD,MAAM;MACJI,UAAA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,IAAA;MACAC,QAAA;MACAC,IAAA;MACA/B,QAAA;MACAgC,IAAA;MACAC;IACG,CACL,GAAIX,KAAA;IADCY,MAAA,GAAAC,wBAAA,CACDb,KAAA,EAAAc,SAAA;EAEJ,MAAMC,SAAA,GAAYC,SAAA,CAA6B;IAC7CC,IAAA,EAAM;IACNC,OAAA;IACAlB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAK,UAAA;IACAJ,IAAA;IACA5B;EAAA,CACD;EAED,sBACEwC,IAAA,CAACC,GAAA,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA;IAAIC,SAAA,EAAU;IAAavB;EAAA,GAAcgB,SAAA,CAAU,MAAM,IAAOH,MAAA;IAC9DJ,QAAA,GAAAC,IAAA,mBAAAc,GAAA,CAAS,QAAAF,aAAA,CAAAA,aAAA,KAASN,SAAA,CAAU,MAAM;MAAIP,QAAA,EAAAC;IAAA,EAAK,GAC3CD,QAAA,EACAE,IAAA,mBAAQa,GAAA,CAAC,QAAAF,aAAA,CAAAA,aAAA,KAASN,SAAA,CAAU,MAAM;MAAIP,QAAA,EAAAE;IAAA,EAAK;EAAA,EAC9C;AAEJ,CAAC;AAEDd,UAAA,CAAWsB,OAAA,GAAUA,OAAA;AACrBtB,UAAA,CAAW4B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}