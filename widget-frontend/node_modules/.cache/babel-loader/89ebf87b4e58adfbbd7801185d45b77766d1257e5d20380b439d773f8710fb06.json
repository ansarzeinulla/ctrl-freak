{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useState } from 'react';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nfunction useComboboxTargetProps(_ref) {\n  let {\n    onKeyDown,\n    withKeyboardNavigation,\n    withAriaAttributes,\n    withExpandedAttribute,\n    targetType,\n    autoComplete\n  } = _ref;\n  const ctx = useComboboxContext();\n  const [selectedOptionId, setSelectedOptionId] = useState(null);\n  const handleKeyDown = event => {\n    onKeyDown === null || onKeyDown === void 0 || onKeyDown(event);\n    if (ctx.readOnly) {\n      return;\n    }\n    if (withKeyboardNavigation) {\n      if (event.nativeEvent.isComposing) {\n        return;\n      }\n      if (event.nativeEvent.code === \"ArrowDown\") {\n        event.preventDefault();\n        if (!ctx.store.dropdownOpened) {\n          ctx.store.openDropdown(\"keyboard\");\n          setSelectedOptionId(ctx.store.selectActiveOption());\n          ctx.store.updateSelectedOptionIndex(\"selected\", {\n            scrollIntoView: true\n          });\n        } else {\n          setSelectedOptionId(ctx.store.selectNextOption());\n        }\n      }\n      if (event.nativeEvent.code === \"ArrowUp\") {\n        event.preventDefault();\n        if (!ctx.store.dropdownOpened) {\n          ctx.store.openDropdown(\"keyboard\");\n          setSelectedOptionId(ctx.store.selectActiveOption());\n          ctx.store.updateSelectedOptionIndex(\"selected\", {\n            scrollIntoView: true\n          });\n        } else {\n          setSelectedOptionId(ctx.store.selectPreviousOption());\n        }\n      }\n      if (event.nativeEvent.code === \"Enter\" || event.nativeEvent.code === \"NumpadEnter\") {\n        if (event.nativeEvent.keyCode === 229) {\n          return;\n        }\n        const selectedOptionIndex = ctx.store.getSelectedOptionIndex();\n        if (ctx.store.dropdownOpened && selectedOptionIndex !== -1) {\n          event.preventDefault();\n          ctx.store.clickSelectedOption();\n        } else if (targetType === \"button\") {\n          event.preventDefault();\n          ctx.store.openDropdown(\"keyboard\");\n        }\n      }\n      if (event.key === \"Escape\") {\n        ctx.store.closeDropdown(\"keyboard\");\n      }\n      if (event.nativeEvent.code === \"Space\") {\n        if (targetType === \"button\") {\n          event.preventDefault();\n          ctx.store.toggleDropdown(\"keyboard\");\n        }\n      }\n    }\n  };\n  const ariaAttributes = withAriaAttributes ? {\n    \"aria-haspopup\": \"listbox\",\n    \"aria-expanded\": withExpandedAttribute ? !!(ctx.store.listId && ctx.store.dropdownOpened) : void 0,\n    \"aria-controls\": ctx.store.dropdownOpened && ctx.store.listId ? ctx.store.listId : void 0,\n    \"aria-activedescendant\": ctx.store.dropdownOpened ? selectedOptionId || void 0 : void 0,\n    autoComplete,\n    \"data-expanded\": ctx.store.dropdownOpened || void 0,\n    \"data-mantine-stop-propagation\": ctx.store.dropdownOpened || void 0\n  } : {};\n  return _objectSpread(_objectSpread({}, ariaAttributes), {}, {\n    onKeyDown: handleKeyDown\n  });\n}\nexport { useComboboxTargetProps };","map":{"version":3,"names":["useComboboxTargetProps","_ref","onKeyDown","withKeyboardNavigation","withAriaAttributes","withExpandedAttribute","targetType","autoComplete","ctx","useComboboxContext","selectedOptionId","setSelectedOptionId","useState","handleKeyDown","event","readOnly","nativeEvent","isComposing","code","preventDefault","store","dropdownOpened","openDropdown","selectActiveOption","updateSelectedOptionIndex","scrollIntoView","selectNextOption","selectPreviousOption","keyCode","selectedOptionIndex","getSelectedOptionIndex","clickSelectedOption","key","closeDropdown","toggleDropdown","ariaAttributes","listId","_objectSpread"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Combobox/use-combobox-target-props/use-combobox-target-props.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useComboboxContext } from '../Combobox.context';\n\ninterface UseComboboxTargetPropsInput {\n  targetType: 'input' | 'button' | undefined;\n  withAriaAttributes: boolean | undefined;\n  withKeyboardNavigation: boolean | undefined;\n  withExpandedAttribute: boolean | undefined;\n  onKeyDown: React.KeyboardEventHandler<HTMLInputElement> | undefined;\n  autoComplete: string | undefined;\n}\n\nexport function useComboboxTargetProps({\n  onKeyDown,\n  withKeyboardNavigation,\n  withAriaAttributes,\n  withExpandedAttribute,\n  targetType,\n  autoComplete,\n}: UseComboboxTargetPropsInput) {\n  const ctx = useComboboxContext();\n  const [selectedOptionId, setSelectedOptionId] = useState<string | null>(null);\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    onKeyDown?.(event);\n\n    if (ctx.readOnly) {\n      return;\n    }\n\n    if (withKeyboardNavigation) {\n      // Ignore during composition in IME\n      if (event.nativeEvent.isComposing) {\n        return;\n      }\n\n      if (event.nativeEvent.code === 'ArrowDown') {\n        event.preventDefault();\n\n        if (!ctx.store.dropdownOpened) {\n          ctx.store.openDropdown('keyboard');\n          setSelectedOptionId(ctx.store.selectActiveOption());\n          ctx.store.updateSelectedOptionIndex('selected', { scrollIntoView: true });\n        } else {\n          setSelectedOptionId(ctx.store.selectNextOption());\n        }\n      }\n\n      if (event.nativeEvent.code === 'ArrowUp') {\n        event.preventDefault();\n\n        if (!ctx.store.dropdownOpened) {\n          ctx.store.openDropdown('keyboard');\n          setSelectedOptionId(ctx.store.selectActiveOption());\n          ctx.store.updateSelectedOptionIndex('selected', { scrollIntoView: true });\n        } else {\n          setSelectedOptionId(ctx.store.selectPreviousOption());\n        }\n      }\n\n      if (event.nativeEvent.code === 'Enter' || event.nativeEvent.code === 'NumpadEnter') {\n        // This is a workaround for handling differences in behavior of isComposing property in Safari\n        // See: https://dninomiya.github.io/form-guide/stop-enter-submit\n        // eslint-disable-next-line @typescript-eslint/no-deprecated\n        if (event.nativeEvent.keyCode === 229) {\n          return;\n        }\n\n        const selectedOptionIndex = ctx.store.getSelectedOptionIndex();\n\n        if (ctx.store.dropdownOpened && selectedOptionIndex !== -1) {\n          event.preventDefault();\n          ctx.store.clickSelectedOption();\n        } else if (targetType === 'button') {\n          event.preventDefault();\n          ctx.store.openDropdown('keyboard');\n        }\n      }\n\n      if (event.key === 'Escape') {\n        ctx.store.closeDropdown('keyboard');\n      }\n\n      if (event.nativeEvent.code === 'Space') {\n        if (targetType === 'button') {\n          event.preventDefault();\n          ctx.store.toggleDropdown('keyboard');\n        }\n      }\n    }\n  };\n\n  const ariaAttributes = withAriaAttributes\n    ? {\n        'aria-haspopup': 'listbox' as const,\n        'aria-expanded': withExpandedAttribute\n          ? !!(ctx.store.listId && ctx.store.dropdownOpened)\n          : undefined,\n        'aria-controls':\n          ctx.store.dropdownOpened && ctx.store.listId ? ctx.store.listId : undefined,\n        'aria-activedescendant': ctx.store.dropdownOpened\n          ? selectedOptionId || undefined\n          : undefined,\n        autoComplete,\n        'data-expanded': ctx.store.dropdownOpened || undefined,\n        'data-mantine-stop-propagation': ctx.store.dropdownOpened || undefined,\n      }\n    : {};\n\n  return {\n    ...ariaAttributes,\n    onKeyDown: handleKeyDown,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}