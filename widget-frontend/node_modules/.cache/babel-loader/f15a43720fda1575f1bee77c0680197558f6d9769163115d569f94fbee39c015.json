{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { Children, cloneElement, createElement } from 'react';\nimport '../../core/utils/units-converters/rem.mjs';\nimport { isElement } from '../../core/utils/is-element/is-element.mjs';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Breadcrumbs.module.css.mjs';\nconst defaultProps = {\n  separator: \"/\"\n};\nconst varsResolver = createVarsResolver((_, {\n  separatorMargin\n}) => ({\n  root: {\n    \"--bc-separator-margin\": getSpacing(separatorMargin)\n  }\n}));\nconst Breadcrumbs = factory((_props, ref) => {\n  const props = useProps(\"Breadcrumbs\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    separator,\n    separatorMargin,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Breadcrumbs\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const items = Children.toArray(children).reduce((acc, child, index, array) => {\n    const item = isElement(child) ? cloneElement(child, {\n      ...getStyles(\"breadcrumb\", {\n        className: child.props?.className\n      }),\n      key: index\n    }) : /* @__PURE__ */createElement(\"div\", {\n      ...getStyles(\"breadcrumb\"),\n      key: index\n    }, child);\n    acc.push(item);\n    if (index !== array.length - 1) {\n      acc.push(/* @__PURE__ */createElement(Box, {\n        ...getStyles(\"separator\"),\n        key: `separator-${index}`\n      }, separator));\n    }\n    return acc;\n  }, []);\n  return /* @__PURE__ */jsx(Box, {\n    ref,\n    ...getStyles(\"root\"),\n    ...others,\n    children: items\n  });\n});\nBreadcrumbs.classes = classes;\nBreadcrumbs.displayName = \"@mantine/core/Breadcrumbs\";\nexport { Breadcrumbs };","map":{"version":3,"names":["defaultProps","separator","varsResolver","createVarsResolver","_","separatorMargin","root","getSpacing","Breadcrumbs","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","attributes","others","getStyles","useStyles","name","classes","items","Children","toArray","reduce","acc","child","index","array","item","isElement","cloneElement","key","createElement","push","length","Box","jsx","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Breadcrumbs/Breadcrumbs.tsx"],"sourcesContent":["import { Children, cloneElement } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  isElement,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Breadcrumbs.module.css';\n\nexport type BreadcrumbsStylesNames = 'root' | 'separator' | 'breadcrumb';\nexport type BreadcrumbsCssVariables = {\n  root: '--bc-separator-margin';\n};\n\nexport interface BreadcrumbsProps\n  extends BoxProps,\n    StylesApiProps<BreadcrumbsFactory>,\n    ElementProps<'div'> {\n  /** Separator between children @default `'/'` */\n  separator?: React.ReactNode;\n\n  /** Controls spacing between separator and breadcrumb @default `'xs'` */\n  separatorMargin?: MantineSpacing;\n\n  /** React nodes that should be separated with `separator` */\n  children: React.ReactNode;\n}\n\nexport type BreadcrumbsFactory = Factory<{\n  props: BreadcrumbsProps;\n  ref: HTMLDivElement;\n  stylesNames: BreadcrumbsStylesNames;\n  vars: BreadcrumbsCssVariables;\n}>;\n\nconst defaultProps = {\n  separator: '/',\n} satisfies Partial<BreadcrumbsProps>;\n\nconst varsResolver = createVarsResolver<BreadcrumbsFactory>((_, { separatorMargin }) => ({\n  root: {\n    '--bc-separator-margin': getSpacing(separatorMargin),\n  },\n}));\n\nexport const Breadcrumbs = factory<BreadcrumbsFactory>((_props, ref) => {\n  const props = useProps('Breadcrumbs', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    separator,\n    separatorMargin,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BreadcrumbsFactory>({\n    name: 'Breadcrumbs',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const items = Children.toArray(children).reduce<React.ReactNode[]>((acc, child, index, array) => {\n    const item = isElement(child) ? (\n      cloneElement(child, {\n        ...getStyles('breadcrumb', { className: (child.props as any)?.className }),\n        key: index,\n      })\n    ) : (\n      <div {...getStyles('breadcrumb')} key={index}>\n        {child}\n      </div>\n    );\n\n    acc.push(item);\n\n    if (index !== array.length - 1) {\n      acc.push(\n        <Box {...getStyles('separator')} key={`separator-${index}`}>\n          {separator}\n        </Box>\n      );\n    }\n\n    return acc;\n  }, []);\n\n  return (\n    <Box ref={ref} {...getStyles('root')} {...others}>\n      {items}\n    </Box>\n  );\n});\n\nBreadcrumbs.classes = classes;\nBreadcrumbs.displayName = '@mantine/core/Breadcrumbs';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AA2CA,MAAMA,YAAA,GAAe;EACnBC,SAAA,EAAW;AACb;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CAAuC,CAACC,CAAA,EAAG;EAAEC;AAAA,CAAgB,MAAO;EACvFC,IAAA,EAAM;IACJ,yBAAyBC,UAAA,CAAWF,eAAe;EAAA;AAEvD,EAAE;AAEK,MAAMG,WAAA,GAAcC,OAAA,CAA4B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACtE,MAAMC,KAAA,GAAQC,QAAA,CAAS,eAAeb,YAAA,EAAcU,MAAM;EAC1D,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,QAAA;IACAnB,SAAA;IACAI,eAAA;IACAgB,UAAA;IACA,GAAGC;EAAA,CACL,GAAIV,KAAA;EAEJ,MAAMW,SAAA,GAAYC,SAAA,CAA8B;IAC9CC,IAAA,EAAM;IACNC,OAAA;IACAd,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAG,UAAA;IACAF,IAAA;IACAjB;EAAA,CACD;EAED,MAAMyB,KAAA,GAAQC,QAAA,CAASC,OAAA,CAAQT,QAAQ,EAAEU,MAAA,CAA0B,CAACC,GAAA,EAAKC,KAAA,EAAOC,KAAA,EAAOC,KAAA,KAAU;IAC/F,MAAMC,IAAA,GAAOC,SAAA,CAAUJ,KAAK,IAC1BK,YAAA,CAAaL,KAAA,EAAO;MAClB,GAAGT,SAAA,CAAU,cAAc;QAAER,SAAA,EAAYiB,KAAA,CAAMpB,KAAA,EAAeG;MAAA,CAAW;MACzEuB,GAAA,EAAKL;IAAA,CACN,mBAEDM,aAAA,CAAC;MAAK,GAAGhB,SAAA,CAAU,YAAY;MAAGe,GAAA,EAAKL;IAAA,GACpCD,KACH;IAGFD,GAAA,CAAIS,IAAA,CAAKL,IAAI;IAEb,IAAIF,KAAA,KAAUC,KAAA,CAAMO,MAAA,GAAS,GAAG;MAC9BV,GAAA,CAAIS,IAAA,gBACFD,aAAA,CAACG,GAAA;QAAK,GAAGnB,SAAA,CAAU,WAAW;QAAGe,GAAA,EAAK,aAAaL,KAAK;MAAA,GACrDhC,SACH,EACF;IACF;IAEA,OAAO8B,GAAA;EACT,GAAG,EAAE;EAEL,sBACEY,GAAA,CAACD,GAAA;IAAI/B,GAAA;IAAW,GAAGY,SAAA,CAAU,MAAM;IAAI,GAAGD,MAAA;IACvCF,QAAA,EAAAO;EAAA,CACH;AAEJ,CAAC;AAEDnB,WAAA,CAAYkB,OAAA,GAAUA,OAAA;AACtBlB,WAAA,CAAYoC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}