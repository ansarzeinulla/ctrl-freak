{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"id\", \"checked\", \"defaultChecked\", \"onChange\", \"value\", \"wrapperProps\", \"type\", \"disabled\", \"children\", \"size\", \"variant\", \"icon\", \"rootRef\", \"autoContrast\", \"mod\", \"attributes\"];\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSize, getRadius, getFontSize } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { extractStyleProps } from '../../core/Box/style-props/extract-style-props/extract-style-props.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../Checkbox/Checkbox.mjs';\nimport '../Checkbox/CheckboxGroup/CheckboxGroup.mjs';\nimport { CheckIcon } from '../Checkbox/CheckIcon.mjs';\nimport '../Checkbox/CheckboxIndicator/CheckboxIndicator.mjs';\nimport '../Checkbox/CheckboxCard/CheckboxCard.mjs';\nimport '../Checkbox/CheckboxCard/CheckboxCard.context.mjs';\nimport '../Checkbox/CheckboxGroup.context.mjs';\nimport { useChipGroupContext } from './ChipGroup.context.mjs';\nimport { ChipGroup } from './ChipGroup/ChipGroup.mjs';\nimport classes from './Chip.module.css.mjs';\nconst defaultProps = {\n  type: \"checkbox\"\n};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    size,\n    radius,\n    variant,\n    color,\n    autoContrast\n  } = _ref;\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    variant: variant || \"filled\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--chip-fz\": getFontSize(size),\n      \"--chip-size\": getSize(size, \"chip-size\"),\n      \"--chip-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--chip-checked-padding\": getSize(size, \"chip-checked-padding\"),\n      \"--chip-padding\": getSize(size, \"chip-padding\"),\n      \"--chip-icon-size\": getSize(size, \"chip-icon-size\"),\n      \"--chip-bg\": color || variant ? colors.background : void 0,\n      \"--chip-hover\": color || variant ? colors.hover : void 0,\n      \"--chip-color\": color || variant ? colors.color : void 0,\n      \"--chip-bd\": color || variant ? colors.border : void 0,\n      \"--chip-spacing\": getSize(size, \"chip-spacing\")\n    }\n  };\n});\nconst Chip = factory((_props, ref) => {\n  const props = useProps(\"Chip\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      id,\n      checked,\n      defaultChecked,\n      onChange,\n      value,\n      wrapperProps,\n      type,\n      disabled,\n      children,\n      size,\n      variant,\n      icon,\n      rootRef,\n      autoContrast,\n      mod,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"Chip\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const ctx = useChipGroupContext();\n  const uuid = useId(id);\n  const {\n    styleProps,\n    rest\n  } = extractStyleProps(others);\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange\n  });\n  const contextProps = ctx ? {\n    checked: ctx.isChipSelected(value),\n    onChange: event => {\n      ctx.onChange(event);\n      onChange === null || onChange === void 0 || onChange(event.currentTarget.checked);\n    },\n    type: ctx.multiple ? \"checkbox\" : \"radio\"\n  } : {};\n  const _checked = contextProps.checked || _value;\n  return /* @__PURE__ */jsxs(Box, _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    size,\n    variant,\n    ref: rootRef,\n    mod\n  }, getStyles(\"root\")), styleProps), wrapperProps), {}, {\n    children: [/* @__PURE__ */jsx(\"input\", _objectSpread(_objectSpread(_objectSpread({\n      type\n    }, getStyles(\"input\")), {}, {\n      checked: _checked,\n      onChange: event => setValue(event.currentTarget.checked),\n      id: uuid,\n      disabled,\n      ref,\n      value\n    }, contextProps), rest)), /* @__PURE__ */jsxs(\"label\", _objectSpread(_objectSpread({\n      htmlFor: uuid,\n      \"data-checked\": _checked || void 0,\n      \"data-disabled\": disabled || void 0\n    }, getStyles(\"label\", {\n      variant: variant || \"filled\"\n    })), {}, {\n      children: [_checked && /* @__PURE__ */jsx(\"span\", _objectSpread(_objectSpread({}, getStyles(\"iconWrapper\")), {}, {\n        children: icon || /* @__PURE__ */jsx(CheckIcon, _objectSpread({}, getStyles(\"checkIcon\")))\n      })), /* @__PURE__ */jsx(\"span\", {\n        children\n      })]\n    }))]\n  }));\n});\nChip.classes = classes;\nChip.displayName = \"@mantine/core/Chip\";\nChip.Group = ChipGroup;\nexport { Chip };","map":{"version":3,"names":["defaultProps","type","varsResolver","createVarsResolver","theme","_ref","size","radius","variant","color","autoContrast","colors","variantColorResolver","primaryColor","root","getFontSize","getSize","getRadius","background","hover","border","Chip","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","id","checked","defaultChecked","onChange","value","wrapperProps","disabled","children","icon","rootRef","mod","attributes","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","ctx","useChipGroupContext","uuid","useId","styleProps","rest","extractStyleProps","_value","setValue","useUncontrolled","defaultValue","finalValue","contextProps","isChipSelected","event","currentTarget","multiple","_checked","jsxs","Box","_objectSpread","jsx","htmlFor","CheckIcon","displayName","Group","ChipGroup"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Chip/Chip.tsx"],"sourcesContent":["import { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  DataAttributes,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getFontSize,\n  getRadius,\n  getSize,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CheckIcon } from '../Checkbox';\nimport { useChipGroupContext } from './ChipGroup.context';\nimport { ChipGroup } from './ChipGroup/ChipGroup';\nimport classes from './Chip.module.css';\n\nexport type ChipStylesNames = 'root' | 'input' | 'iconWrapper' | 'checkIcon' | 'label';\nexport type ChipVariant = 'outline' | 'filled' | 'light';\nexport type ChipCssVariables = {\n  root:\n    | '--chip-fz'\n    | '--chip-size'\n    | '--chip-icon-size'\n    | '--chip-padding'\n    | '--chip-checked-padding'\n    | '--chip-radius'\n    | '--chip-bg'\n    | '--chip-hover'\n    | '--chip-color'\n    | '--chip-bd'\n    | '--chip-spacing';\n};\n\nexport interface ChipProps\n  extends BoxProps,\n    StylesApiProps<ChipFactory>,\n    ElementProps<'input', 'size' | 'onChange'> {\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius` @default `'xl'` */\n  radius?: MantineRadius;\n\n  /** Controls various properties related to component size @default `'sm'` */\n  size?: MantineSize;\n\n  /** Chip input type @default `'checkbox'` */\n  type?: 'radio' | 'checkbox';\n\n  /** `label` element associated with the input */\n  children: React.ReactNode;\n\n  /** Checked state for controlled component */\n  checked?: boolean;\n\n  /** Default checked state for uncontrolled component */\n  defaultChecked?: boolean;\n\n  /** Calls when checked state changes */\n  onChange?: (checked: boolean) => void;\n\n  /** Controls components colors based on `variant` prop. Key of `theme.colors` or any valid CSS color. @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Unique input id */\n  id?: string;\n\n  /** Props passed down to the root element */\n  wrapperProps?: React.ComponentPropsWithoutRef<'div'> & DataAttributes;\n\n  /** Any element or component to replace default icon */\n  icon?: React.ReactNode;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** If set, adjusts text color based on background color for `filled` variant */\n  autoContrast?: boolean;\n}\n\nexport type ChipFactory = Factory<{\n  props: ChipProps;\n  ref: HTMLInputElement;\n  stylesNames: ChipStylesNames;\n  vars: ChipCssVariables;\n  variant: ChipVariant;\n  staticComponents: {\n    Group: typeof ChipGroup;\n  };\n}>;\n\nconst defaultProps = {\n  type: 'checkbox',\n} satisfies Partial<ChipProps>;\n\nconst varsResolver = createVarsResolver<ChipFactory>(\n  (theme, { size, radius, variant, color, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--chip-fz': getFontSize(size),\n        '--chip-size': getSize(size, 'chip-size'),\n        '--chip-radius': radius === undefined ? undefined : getRadius(radius),\n        '--chip-checked-padding': getSize(size, 'chip-checked-padding'),\n        '--chip-padding': getSize(size, 'chip-padding'),\n        '--chip-icon-size': getSize(size, 'chip-icon-size'),\n        '--chip-bg': color || variant ? colors.background : undefined,\n        '--chip-hover': color || variant ? colors.hover : undefined,\n        '--chip-color': color || variant ? colors.color : undefined,\n        '--chip-bd': color || variant ? colors.border : undefined,\n        '--chip-spacing': getSize(size, 'chip-spacing'),\n      },\n    };\n  }\n);\n\nexport const Chip = factory<ChipFactory>((_props, ref) => {\n  const props = useProps('Chip', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    id,\n    checked,\n    defaultChecked,\n    onChange,\n    value,\n    wrapperProps,\n    type,\n    disabled,\n    children,\n    size,\n    variant,\n    icon,\n    rootRef,\n    autoContrast,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ChipFactory>({\n    name: 'Chip',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const ctx = useChipGroupContext();\n  const uuid = useId(id);\n  const { styleProps, rest } = extractStyleProps(others);\n\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.isChipSelected(value as string),\n        onChange: (event: React.ChangeEvent<HTMLInputElement>) => {\n          ctx.onChange(event);\n          onChange?.(event.currentTarget.checked);\n        },\n        type: ctx.multiple ? 'checkbox' : 'radio',\n      }\n    : {};\n\n  const _checked = contextProps.checked || _value;\n\n  return (\n    <Box\n      size={size}\n      variant={variant}\n      ref={rootRef}\n      mod={mod}\n      {...getStyles('root')}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <input\n        type={type}\n        {...getStyles('input')}\n        checked={_checked}\n        onChange={(event) => setValue(event.currentTarget.checked)}\n        id={uuid}\n        disabled={disabled}\n        ref={ref}\n        value={value}\n        {...contextProps}\n        {...rest}\n      />\n\n      <label\n        htmlFor={uuid}\n        data-checked={_checked || undefined}\n        data-disabled={disabled || undefined}\n        {...getStyles('label', { variant: variant || 'filled' })}\n      >\n        {_checked && (\n          <span {...getStyles('iconWrapper')}>\n            {icon || <CheckIcon {...getStyles('checkIcon')} />}\n          </span>\n        )}\n        <span>{children}</span>\n      </label>\n    </Box>\n  );\n});\n\nChip.classes = classes;\nChip.displayName = '@mantine/core/Chip';\nChip.Group = ChipGroup;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA,MAAMA,YAAA,GAAe;EACnBC,IAAA,EAAM;AACR;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CACnB,CAACC,KAAA,EAAAC,IAAA,KAA0D;EAAA,IAAnD;IAAEC,IAAA;IAAMC,MAAA;IAAQC,OAAA;IAASC,KAAA;IAAOC;EAAA,CAAa,GAAAL,IAAA;EACnD,MAAMM,MAAA,GAASP,KAAA,CAAMQ,oBAAA,CAAqB;IACxCH,KAAA,EAAOA,KAAA,IAASL,KAAA,CAAMS,YAAA;IACtBT,KAAA;IACAI,OAAA,EAASA,OAAA,IAAW;IACpBE;EAAA,CACD;EAED,OAAO;IACLI,IAAA,EAAM;MACJ,aAAaC,WAAA,CAAYT,IAAI;MAC7B,eAAeU,OAAA,CAAQV,IAAA,EAAM,WAAW;MACxC,iBAAiBC,MAAA,KAAW,SAAY,SAAYU,SAAA,CAAUV,MAAM;MACpE,0BAA0BS,OAAA,CAAQV,IAAA,EAAM,sBAAsB;MAC9D,kBAAkBU,OAAA,CAAQV,IAAA,EAAM,cAAc;MAC9C,oBAAoBU,OAAA,CAAQV,IAAA,EAAM,gBAAgB;MAClD,aAAaG,KAAA,IAASD,OAAA,GAAUG,MAAA,CAAOO,UAAA,GAAa;MACpD,gBAAgBT,KAAA,IAASD,OAAA,GAAUG,MAAA,CAAOQ,KAAA,GAAQ;MAClD,gBAAgBV,KAAA,IAASD,OAAA,GAAUG,MAAA,CAAOF,KAAA,GAAQ;MAClD,aAAaA,KAAA,IAASD,OAAA,GAAUG,MAAA,CAAOS,MAAA,GAAS;MAChD,kBAAkBJ,OAAA,CAAQV,IAAA,EAAM,cAAc;IAAA;EAChD,CACF;AACF,CACF;AAEO,MAAMe,IAAA,GAAOC,OAAA,CAAqB,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACxD,MAAMC,KAAA,GAAQC,QAAA,CAAS,QAAQ1B,YAAA,EAAcuB,MAAM;EACnD,MAAM;MACJI,UAAA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,IAAA;MACAC,EAAA;MACAC,OAAA;MACAC,cAAA;MACAC,QAAA;MACAC,KAAA;MACAC,YAAA;MACArC,IAAA;MACAsC,QAAA;MACAC,QAAA;MACAlC,IAAA;MACAE,OAAA;MACAiC,IAAA;MACAC,OAAA;MACAhC,YAAA;MACAiC,GAAA;MACAC;IACG,CACL,GAAInB,KAAA;IADCoB,MAAA,GAAAC,wBAAA,CACDrB,KAAA,EAAAsB,SAAA;EAEJ,MAAMC,SAAA,GAAYC,SAAA,CAAuB;IACvCC,IAAA,EAAM;IACNC,OAAA;IACA1B,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAa,UAAA;IACAZ,IAAA;IACA9B;EAAA,CACD;EAED,MAAMkD,GAAA,GAAMC,mBAAA,EAAoB;EAChC,MAAMC,IAAA,GAAOC,KAAA,CAAMtB,EAAE;EACrB,MAAM;IAAEuB,UAAA;IAAYC;EAAA,CAAK,GAAIC,iBAAA,CAAkBb,MAAM;EAErD,MAAM,CAACc,MAAA,EAAQC,QAAQ,IAAIC,eAAA,CAAgB;IACzCxB,KAAA,EAAOH,OAAA;IACP4B,YAAA,EAAc3B,cAAA;IACd4B,UAAA,EAAY;IACZ3B;EAAA,CACD;EAED,MAAM4B,YAAA,GAAeZ,GAAA,GACjB;IACElB,OAAA,EAASkB,GAAA,CAAIa,cAAA,CAAe5B,KAAe;IAC3CD,QAAA,EAAW8B,KAAA,IAA+C;MACxDd,GAAA,CAAIhB,QAAA,CAAS8B,KAAK;MAClB9B,QAAA,aAAAA,QAAA,eAAAA,QAAA,CAAW8B,KAAA,CAAMC,aAAA,CAAcjC,OAAO;IACxC;IACAjC,IAAA,EAAMmD,GAAA,CAAIgB,QAAA,GAAW,aAAa;EAAA,IAEpC,EAAC;EAEL,MAAMC,QAAA,GAAWL,YAAA,CAAa9B,OAAA,IAAWyB,MAAA;EAEzC,sBACEW,IAAA,CAACC,GAAA,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,CAAAA,aAAA;IACClE,IAAA;IACAE,OAAA;IACAgB,GAAA,EAAKkB,OAAA;IACLC;EAAA,GACIK,SAAA,CAAU,MAAM,IAChBQ,UAAA,GACAlB,YAAA;IAEJE,QAAA,kBAAAiC,GAAA,CAAC,SAAAD,aAAA,CAAAA,aAAA,CAAAA,aAAA;MACCvE;IAAA,GACI+C,SAAA,CAAU,OAAO;MACrBd,OAAA,EAASmC,QAAA;MACTjC,QAAA,EAAW8B,KAAA,IAAUN,QAAA,CAASM,KAAA,CAAMC,aAAA,CAAcjC,OAAO;MACzDD,EAAA,EAAIqB,IAAA;MACJf,QAAA;MACAf,GAAA;MACAa;IAAA,GACI2B,YAAA,GACAP,IAAA,EACN,iBAEAa,IAAA,CAAC,SAAAE,aAAA,CAAAA,aAAA;MACCE,OAAA,EAASpB,IAAA;MACT,gBAAce,QAAA,IAAY;MAC1B,iBAAe9B,QAAA,IAAY;IAAA,GACvBS,SAAA,CAAU,SAAS;MAAExC,OAAA,EAASA,OAAA,IAAW;IAAA,CAAU;MAEtDgC,QAAA,GAAA6B,QAAA,mBACCI,GAAA,CAAC,QAAAD,aAAA,CAAAA,aAAA,KAASxB,SAAA,CAAU,aAAa;QAC9BR,QAAA,EAAAC,IAAA,mBAAQgC,GAAA,CAACE,SAAA,EAAAH,aAAA,KAAcxB,SAAA,CAAU,WAAW,EAAG;MAAA,EAClD,kBAEFyB,GAAA,CAAC;QAAMjC;MAAA,CAAS;IAAA;EAClB,GACF;AAEJ,CAAC;AAEDnB,IAAA,CAAK8B,OAAA,GAAUA,OAAA;AACf9B,IAAA,CAAKuD,WAAA,GAAc;AACnBvD,IAAA,CAAKwD,KAAA,GAAQC,SAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}