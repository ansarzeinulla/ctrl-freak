{"ast":null,"code":"'use client';\n\nimport cx from 'clsx';\nconst FOCUS_CLASS_NAMES = {\n  always: \"mantine-focus-always\",\n  auto: \"mantine-focus-auto\",\n  never: \"mantine-focus-never\"\n};\nfunction getGlobalClassNames({\n  theme,\n  options,\n  unstyled\n}) {\n  return cx(options?.focusable && !unstyled && (theme.focusClassName || FOCUS_CLASS_NAMES[theme.focusRing]), options?.active && !unstyled && theme.activeClassName);\n}\nexport { FOCUS_CLASS_NAMES, getGlobalClassNames };","map":{"version":3,"names":["FOCUS_CLASS_NAMES","always","auto","never","getGlobalClassNames","theme","options","unstyled","cx","focusable","focusClassName","focusRing","active","activeClassName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/core/styles-api/use-styles/get-class-name/get-global-class-names/get-global-class-names.ts"],"sourcesContent":["import cx from 'clsx';\nimport { MantineTheme } from '../../../../MantineProvider';\nimport { GetStylesApiOptions } from '../../../styles-api.types';\n\ninterface GetGlobalClassNamesOptions {\n  theme: MantineTheme;\n  unstyled: boolean | undefined;\n  options: GetStylesApiOptions | undefined;\n}\n\nexport const FOCUS_CLASS_NAMES = {\n  always: 'mantine-focus-always',\n  auto: 'mantine-focus-auto',\n  never: 'mantine-focus-never',\n} as const;\n\n/** Returns classes that are defined globally (focus and active styles) based on options */\nexport function getGlobalClassNames({ theme, options, unstyled }: GetGlobalClassNamesOptions) {\n  return cx(\n    options?.focusable && !unstyled && (theme.focusClassName || FOCUS_CLASS_NAMES[theme.focusRing]),\n    options?.active && !unstyled && theme.activeClassName\n  );\n}\n"],"mappings":";;;AAUO,MAAMA,iBAAA,GAAoB;EAC/BC,MAAA,EAAQ;EACRC,IAAA,EAAM;EACNC,KAAA,EAAO;AACT;AAGO,SAASC,oBAAoB;EAAEC,KAAA;EAAOC,OAAA;EAASC;AAAA,CAAS,EAA+B;EAC5F,OAAOC,EAAA,CACLF,OAAA,EAASG,SAAA,IAAa,CAACF,QAAA,KAAaF,KAAA,CAAMK,cAAA,IAAkBV,iBAAA,CAAkBK,KAAA,CAAMM,SAAS,IAC7FL,OAAA,EAASM,MAAA,IAAU,CAACL,QAAA,IAAYF,KAAA,CAAMQ,eAAA,CACxC;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}