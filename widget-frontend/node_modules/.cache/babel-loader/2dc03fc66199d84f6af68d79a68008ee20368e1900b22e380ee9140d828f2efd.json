{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useMergedRef } from '@mantine/hooks';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Input } from '../../Input/Input.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props.mjs';\nimport classes from '../Combobox.module.css.mjs';\nconst defaultProps = {\n  withAriaAttributes: true,\n  withKeyboardNavigation: true\n};\nconst ComboboxSearch = factory((_props, ref) => {\n  const props = useProps(\"ComboboxSearch\", defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    withAriaAttributes,\n    onKeyDown,\n    withKeyboardNavigation,\n    size,\n    ...others\n  } = props;\n  const ctx = useComboboxContext();\n  const _styles = ctx.getStyles(\"search\");\n  const targetProps = useComboboxTargetProps({\n    targetType: \"input\",\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute: false,\n    onKeyDown,\n    autoComplete: \"off\"\n  });\n  return /* @__PURE__ */jsx(Input, {\n    ref: useMergedRef(ref, ctx.store.searchRef),\n    classNames: [{\n      input: _styles.className\n    }, classNames],\n    styles: [{\n      input: _styles.style\n    }, styles],\n    size: size || ctx.size,\n    ...targetProps,\n    ...others,\n    __staticSelector: \"Combobox\"\n  });\n});\nComboboxSearch.classes = classes;\nComboboxSearch.displayName = \"@mantine/core/ComboboxSearch\";\nexport { ComboboxSearch };","map":{"version":3,"names":["defaultProps","withAriaAttributes","withKeyboardNavigation","ComboboxSearch","factory","_props","ref","props","useProps","classNames","styles","unstyled","vars","onKeyDown","size","others","ctx","useComboboxContext","_styles","getStyles","targetProps","useComboboxTargetProps","targetType","withExpandedAttribute","autoComplete","jsx","Input","useMergedRef","store","searchRef","input","className","style","__staticSelector","classes","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Combobox/ComboboxSearch/ComboboxSearch.tsx"],"sourcesContent":["import { useMergedRef } from '@mantine/hooks';\nimport { ElementProps, factory, Factory, useProps } from '../../../core';\nimport { Input, InputProps, InputStylesNames } from '../../Input/Input';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxSearchStylesNames = InputStylesNames;\n\nexport interface ComboboxSearchProps extends InputProps, ElementProps<'input', 'size'> {\n  /** if set, the search input has `aria-` attribute @default `true` */\n  withAriaAttributes?: boolean;\n\n  /** if set, the search input handles keyboard navigation @default `true` */\n  withKeyboardNavigation?: boolean;\n}\n\nexport type ComboboxSearchFactory = Factory<{\n  props: ComboboxSearchProps;\n  ref: HTMLInputElement;\n  stylesNames: ComboboxSearchStylesNames;\n}>;\n\nconst defaultProps = {\n  withAriaAttributes: true,\n  withKeyboardNavigation: true,\n} satisfies Partial<ComboboxSearchProps>;\n\nexport const ComboboxSearch = factory<ComboboxSearchFactory>((_props, ref) => {\n  const props = useProps('ComboboxSearch', defaultProps, _props);\n  const {\n    classNames,\n    styles,\n    unstyled,\n    vars,\n    withAriaAttributes,\n    onKeyDown,\n    withKeyboardNavigation,\n    size,\n    ...others\n  } = props;\n\n  const ctx = useComboboxContext();\n  const _styles = ctx.getStyles('search');\n\n  const targetProps = useComboboxTargetProps({\n    targetType: 'input',\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute: false,\n    onKeyDown,\n    autoComplete: 'off',\n  });\n\n  return (\n    <Input\n      ref={useMergedRef(ref, ctx.store.searchRef)}\n      classNames={[{ input: _styles.className }, classNames] as any}\n      styles={[{ input: _styles.style }, styles] as any}\n      size={size || ctx.size}\n      {...targetProps}\n      {...others}\n      __staticSelector=\"Combobox\"\n    />\n  );\n});\n\nComboboxSearch.classes = classes;\nComboboxSearch.displayName = '@mantine/core/ComboboxSearch';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAuBA,MAAMA,YAAA,GAAe;EACnBC,kBAAA,EAAoB;EACpBC,sBAAA,EAAwB;AAC1B;AAEO,MAAMC,cAAA,GAAiBC,OAAA,CAA+B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAC5E,MAAMC,KAAA,GAAQC,QAAA,CAAS,kBAAkBR,YAAA,EAAcK,MAAM;EAC7D,MAAM;IACJI,UAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAX,kBAAA;IACAY,SAAA;IACAX,sBAAA;IACAY,IAAA;IACA,GAAGC;EAAA,CACL,GAAIR,KAAA;EAEJ,MAAMS,GAAA,GAAMC,kBAAA,EAAmB;EAC/B,MAAMC,OAAA,GAAUF,GAAA,CAAIG,SAAA,CAAU,QAAQ;EAEtC,MAAMC,WAAA,GAAcC,sBAAA,CAAuB;IACzCC,UAAA,EAAY;IACZrB,kBAAA;IACAC,sBAAA;IACAqB,qBAAA,EAAuB;IACvBV,SAAA;IACAW,YAAA,EAAc;EAAA,CACf;EAED,sBACEC,GAAA,CAACC,KAAA;IACCpB,GAAA,EAAKqB,YAAA,CAAarB,GAAA,EAAKU,GAAA,CAAIY,KAAA,CAAMC,SAAS;IAC1CpB,UAAA,EAAY,CAAC;MAAEqB,KAAA,EAAOZ,OAAA,CAAQa;IAAA,GAAatB,UAAU;IACrDC,MAAA,EAAQ,CAAC;MAAEoB,KAAA,EAAOZ,OAAA,CAAQc;IAAA,GAAStB,MAAM;IACzCI,IAAA,EAAMA,IAAA,IAAQE,GAAA,CAAIF,IAAA;IACjB,GAAGM,WAAA;IACH,GAAGL,MAAA;IACJkB,gBAAA,EAAiB;EAAA,EACnB;AAEJ,CAAC;AAED9B,cAAA,CAAe+B,OAAA,GAAUA,OAAA;AACzB/B,cAAA,CAAegC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}