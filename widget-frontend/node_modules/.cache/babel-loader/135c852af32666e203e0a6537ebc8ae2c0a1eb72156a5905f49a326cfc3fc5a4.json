{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useEffect, useCallback } from 'react';\nimport { clamp } from '../utils/clamp/clamp.mjs';\nfunction radiansToDegrees(radians) {\n  return radians * (180 / Math.PI);\n}\nfunction getElementCenter(element) {\n  const rect = element.getBoundingClientRect();\n  return [rect.left + rect.width / 2, rect.top + rect.height / 2];\n}\nfunction getAngle(coordinates, element) {\n  const center = getElementCenter(element);\n  const x = coordinates[0] - center[0];\n  const y = coordinates[1] - center[1];\n  const deg = radiansToDegrees(Math.atan2(x, y)) + 180;\n  return 360 - deg;\n}\nfunction toFixed(value, digits) {\n  return parseFloat(value.toFixed(digits));\n}\nfunction getDigitsAfterDot(value) {\n  var _value$toString$split;\n  return ((_value$toString$split = value.toString().split(\".\")[1]) === null || _value$toString$split === void 0 ? void 0 : _value$toString$split.length) || 0;\n}\nfunction normalizeRadialValue(degree, step) {\n  const clamped = clamp(degree, 0, 360);\n  const high = Math.ceil(clamped / step);\n  const low = Math.round(clamped / step);\n  return toFixed(high >= clamped / step ? high * step === 360 ? 0 : high * step : low * step, getDigitsAfterDot(step));\n}\nfunction useRadialMove(onChange) {\n  let {\n    step = 0.01,\n    onChangeEnd,\n    onScrubStart,\n    onScrubEnd\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const mounted = useRef(false);\n  const [active, setActive] = useState(false);\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n  const refCallback = useCallback(node => {\n    const update = function (event) {\n      let done = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (node) {\n        node.style.userSelect = \"none\";\n        const deg = getAngle([event.clientX, event.clientY], node);\n        const newValue = normalizeRadialValue(deg, step || 1);\n        onChange(newValue);\n        done && (onChangeEnd === null || onChangeEnd === void 0 ? void 0 : onChangeEnd(newValue));\n      }\n    };\n    const beginTracking = () => {\n      onScrubStart === null || onScrubStart === void 0 || onScrubStart();\n      setActive(true);\n      document.addEventListener(\"mousemove\", handleMouseMove, false);\n      document.addEventListener(\"mouseup\", handleMouseUp, false);\n      document.addEventListener(\"touchmove\", handleTouchMove, {\n        passive: false\n      });\n      document.addEventListener(\"touchend\", handleTouchEnd, false);\n    };\n    const endTracking = () => {\n      onScrubEnd === null || onScrubEnd === void 0 || onScrubEnd();\n      setActive(false);\n      document.removeEventListener(\"mousemove\", handleMouseMove, false);\n      document.removeEventListener(\"mouseup\", handleMouseUp, false);\n      document.removeEventListener(\"touchmove\", handleTouchMove, false);\n      document.removeEventListener(\"touchend\", handleTouchEnd, false);\n    };\n    const onMouseDown = event => {\n      beginTracking();\n      update(event);\n    };\n    const handleMouseMove = event => {\n      update(event);\n    };\n    const handleMouseUp = event => {\n      update(event, true);\n      endTracking();\n    };\n    const handleTouchMove = event => {\n      event.preventDefault();\n      update(event.touches[0]);\n    };\n    const handleTouchEnd = event => {\n      update(event.changedTouches[0], true);\n      endTracking();\n    };\n    const handleTouchStart = event => {\n      event.preventDefault();\n      beginTracking();\n      update(event.touches[0]);\n    };\n    node === null || node === void 0 || node.addEventListener(\"mousedown\", onMouseDown);\n    node === null || node === void 0 || node.addEventListener(\"touchstart\", handleTouchStart, {\n      passive: false\n    });\n    return () => {\n      if (node) {\n        node.removeEventListener(\"mousedown\", onMouseDown);\n        node.removeEventListener(\"touchstart\", handleTouchStart);\n      }\n    };\n  }, [onChange]);\n  return {\n    ref: refCallback,\n    active\n  };\n}\nexport { normalizeRadialValue, useRadialMove };","map":{"version":3,"names":["radiansToDegrees","radians","Math","PI","getElementCenter","element","rect","getBoundingClientRect","left","width","top","height","getAngle","coordinates","center","x","y","deg","atan2","toFixed","value","digits","parseFloat","getDigitsAfterDot","_value$toString$split","toString","split","length","normalizeRadialValue","degree","step","clamped","clamp","high","ceil","low","round","useRadialMove","onChange","onChangeEnd","onScrubStart","onScrubEnd","arguments","undefined","mounted","useRef","active","setActive","useState","useEffect","current","refCallback","useCallback","node","update","event","done","style","userSelect","clientX","clientY","newValue","beginTracking","document","addEventListener","handleMouseMove","handleMouseUp","handleTouchMove","passive","handleTouchEnd","endTracking","removeEventListener","onMouseDown","preventDefault","touches","changedTouches","handleTouchStart","ref"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/hooks/src/use-radial-move/use-radial-move.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\nimport { clamp } from '../utils';\n\nfunction radiansToDegrees(radians: number) {\n  return radians * (180 / Math.PI);\n}\n\nfunction getElementCenter(element: HTMLElement) {\n  const rect = element.getBoundingClientRect();\n  return [rect.left + rect.width / 2, rect.top + rect.height / 2];\n}\n\nfunction getAngle(coordinates: [number, number], element: HTMLElement) {\n  const center = getElementCenter(element);\n  const x = coordinates[0] - center[0];\n  const y = coordinates[1] - center[1];\n  const deg = radiansToDegrees(Math.atan2(x, y)) + 180;\n  return 360 - deg;\n}\n\nfunction toFixed(value: number, digits: number) {\n  return parseFloat(value.toFixed(digits));\n}\n\nfunction getDigitsAfterDot(value: number) {\n  return value.toString().split('.')[1]?.length || 0;\n}\n\nexport function normalizeRadialValue(degree: number, step: number) {\n  const clamped = clamp(degree, 0, 360);\n  const high = Math.ceil(clamped / step);\n  const low = Math.round(clamped / step);\n  return toFixed(\n    high >= clamped / step ? (high * step === 360 ? 0 : high * step) : low * step,\n    getDigitsAfterDot(step)\n  );\n}\n\nexport interface UseRadialMoveOptions {\n  /** Number by which value is incremented/decremented with mouse and touch events, `0.01` by default */\n  step?: number;\n\n  /** Called in `onMouseUp` and `onTouchEnd` events with the current value */\n  onChangeEnd?: (value: number) => void;\n\n  /** Called in `onMouseDown` and `onTouchStart` events */\n  onScrubStart?: () => void;\n\n  /** Called in `onMouseUp` and `onTouchEnd` events */\n  onScrubEnd?: () => void;\n}\n\nexport interface UseRadialMoveReturnValue<T extends HTMLElement = any> {\n  /** Ref to be passed to the element that should be used for radial move */\n  ref: React.RefCallback<T | null>;\n\n  /** Indicates whether the radial move is active */\n  active: boolean;\n}\n\nexport function useRadialMove<T extends HTMLElement = any>(\n  onChange: (value: number) => void,\n  { step = 0.01, onChangeEnd, onScrubStart, onScrubEnd }: UseRadialMoveOptions = {}\n): UseRadialMoveReturnValue<T> {\n  const mounted = useRef<boolean>(false);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    mounted.current = true;\n  }, []);\n\n  const refCallback: React.RefCallback<T | null> = useCallback(\n    (node) => {\n      const update = (event: MouseEvent, done = false) => {\n        if (node) {\n          node.style.userSelect = 'none';\n          const deg = getAngle([event.clientX, event.clientY], node);\n          const newValue = normalizeRadialValue(deg, step || 1);\n\n          onChange(newValue);\n          done && onChangeEnd?.(newValue);\n        }\n      };\n\n      const beginTracking = () => {\n        onScrubStart?.();\n        setActive(true);\n        document.addEventListener('mousemove', handleMouseMove, false);\n        document.addEventListener('mouseup', handleMouseUp, false);\n        document.addEventListener('touchmove', handleTouchMove, { passive: false });\n        document.addEventListener('touchend', handleTouchEnd, false);\n      };\n\n      const endTracking = () => {\n        onScrubEnd?.();\n        setActive(false);\n        document.removeEventListener('mousemove', handleMouseMove, false);\n        document.removeEventListener('mouseup', handleMouseUp, false);\n        document.removeEventListener('touchmove', handleTouchMove, false);\n        document.removeEventListener('touchend', handleTouchEnd, false);\n      };\n\n      const onMouseDown = (event: MouseEvent) => {\n        beginTracking();\n        update(event);\n      };\n\n      const handleMouseMove = (event: MouseEvent) => {\n        update(event);\n      };\n\n      const handleMouseUp = (event: MouseEvent) => {\n        update(event, true);\n        endTracking();\n      };\n\n      const handleTouchMove = (event: TouchEvent) => {\n        event.preventDefault();\n        update(event.touches[0] as any);\n      };\n\n      const handleTouchEnd = (event: TouchEvent) => {\n        update(event.changedTouches[0] as any, true);\n        endTracking();\n      };\n\n      const handleTouchStart = (event: TouchEvent) => {\n        event.preventDefault();\n        beginTracking();\n        update(event.touches[0] as any);\n      };\n\n      node?.addEventListener('mousedown', onMouseDown);\n      node?.addEventListener('touchstart', handleTouchStart, { passive: false });\n\n      return () => {\n        if (node) {\n          node.removeEventListener('mousedown', onMouseDown);\n          node.removeEventListener('touchstart', handleTouchStart);\n        }\n      };\n    },\n    [onChange]\n  );\n\n  return { ref: refCallback, active };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}