{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"className\", \"color\", \"radius\", \"loading\", \"withCloseButton\", \"withBorder\", \"title\", \"icon\", \"children\", \"onClose\", \"closeButtonProps\", \"classNames\", \"style\", \"styles\", \"unstyled\", \"variant\", \"vars\", \"mod\", \"loaderProps\", \"role\", \"attributes\"];\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport { Loader } from '../Loader/Loader.mjs';\nimport classes from './Notification.module.css.mjs';\nconst defaultProps = {\n  withCloseButton: true\n};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    radius,\n    color\n  } = _ref;\n  return {\n    root: {\n      \"--notification-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--notification-color\": color ? getThemeColor(color, theme) : void 0\n    }\n  };\n});\nconst Notification = factory((_props, ref) => {\n  const props = useProps(\"Notification\", defaultProps, _props);\n  const {\n      className,\n      color,\n      radius,\n      loading,\n      withCloseButton,\n      withBorder,\n      title,\n      icon,\n      children,\n      onClose,\n      closeButtonProps,\n      classNames,\n      style,\n      styles,\n      unstyled,\n      variant,\n      vars,\n      mod,\n      loaderProps,\n      role,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"Notification\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsxs(Box, _objectSpread(_objectSpread(_objectSpread({}, getStyles(\"root\")), {}, {\n    mod: [{\n      \"data-with-icon\": !!icon || loading,\n      \"data-with-border\": withBorder\n    }, mod],\n    ref,\n    variant,\n    role: role || \"alert\"\n  }, others), {}, {\n    children: [icon && !loading && /* @__PURE__ */jsx(\"div\", _objectSpread(_objectSpread({}, getStyles(\"icon\")), {}, {\n      children: icon\n    })), loading && /* @__PURE__ */jsx(Loader, _objectSpread(_objectSpread({\n      size: 28,\n      color\n    }, loaderProps), getStyles(\"loader\"))), /* @__PURE__ */jsxs(\"div\", _objectSpread(_objectSpread({}, getStyles(\"body\")), {}, {\n      children: [title && /* @__PURE__ */jsx(\"div\", _objectSpread(_objectSpread({}, getStyles(\"title\")), {}, {\n        children: title\n      })), /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread({}, getStyles(\"description\")), {}, {\n        mod: {\n          \"data-with-title\": !!title\n        },\n        children\n      }))]\n    })), withCloseButton && /* @__PURE__ */jsx(CloseButton, _objectSpread(_objectSpread({\n      iconSize: 16,\n      color: \"gray\"\n    }, closeButtonProps), {}, {\n      unstyled,\n      onClick: onClose\n    }, getStyles(\"closeButton\")))]\n  }));\n});\nNotification.classes = classes;\nNotification.displayName = \"@mantine/core/Notification\";\nexport { Notification };","map":{"version":3,"names":["defaultProps","withCloseButton","varsResolver","createVarsResolver","theme","_ref","radius","color","root","getRadius","getThemeColor","Notification","factory","_props","ref","props","useProps","className","loading","withBorder","title","icon","children","onClose","closeButtonProps","classNames","style","styles","unstyled","variant","vars","mod","loaderProps","role","attributes","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","jsxs","Box","_objectSpread","jsx","Loader","size","CloseButton","iconSize","onClick","displayName"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Notification/Notification.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport { Loader, LoaderProps } from '../Loader';\nimport classes from './Notification.module.css';\n\nexport type NotificationStylesNames =\n  | 'root'\n  | 'icon'\n  | 'loader'\n  | 'body'\n  | 'title'\n  | 'description'\n  | 'closeButton';\nexport type NotificationCssVariables = {\n  root: '--notification-radius' | '--notification-color';\n};\n\nexport interface NotificationProps\n  extends BoxProps,\n    StylesApiProps<NotificationFactory>,\n    ElementProps<'div', 'title'> {\n  variant?: string;\n\n  /** Called when the close button is clicked */\n  onClose?: () => void;\n\n  /** Controls notification line or icon color, key of `theme.colors` or any valid CSS color @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius` @default `theme.defaultRadius` */\n  radius?: MantineRadius;\n\n  /** Notification icon, replaces color line */\n  icon?: React.ReactNode;\n\n  /** Notification title, displayed above the message body */\n  title?: React.ReactNode;\n\n  /** Main notification message */\n  children?: React.ReactNode;\n\n  /** If set, the `Loader` component is displayed instead of the icon */\n  loading?: boolean;\n\n  /** Adds border to the root element */\n  withBorder?: boolean;\n\n  /** If set, the close button is visible @default `true` */\n  withCloseButton?: boolean;\n\n  /** Props passed down to the close button */\n  closeButtonProps?: Record<string, any>;\n\n  /** Props passed down to the `Loader` component */\n  loaderProps?: LoaderProps;\n}\n\nexport type NotificationFactory = Factory<{\n  props: NotificationProps;\n  ref: HTMLDivElement;\n  stylesNames: NotificationStylesNames;\n  vars: NotificationCssVariables;\n}>;\n\nconst defaultProps = {\n  withCloseButton: true,\n} satisfies Partial<NotificationProps>;\n\nconst varsResolver = createVarsResolver<NotificationFactory>((theme, { radius, color }) => ({\n  root: {\n    '--notification-radius': radius === undefined ? undefined : getRadius(radius),\n    '--notification-color': color ? getThemeColor(color, theme) : undefined,\n  },\n}));\n\nexport const Notification = factory<NotificationFactory>((_props, ref) => {\n  const props = useProps('Notification', defaultProps, _props);\n  const {\n    className,\n    color,\n    radius,\n    loading,\n    withCloseButton,\n    withBorder,\n    title,\n    icon,\n    children,\n    onClose,\n    closeButtonProps,\n    classNames,\n    style,\n    styles,\n    unstyled,\n    variant,\n    vars,\n    mod,\n    loaderProps,\n    role,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<NotificationFactory>({\n    name: 'Notification',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root')}\n      mod={[{ 'data-with-icon': !!icon || loading, 'data-with-border': withBorder }, mod]}\n      ref={ref}\n      variant={variant}\n      role={role || 'alert'}\n      {...others}\n    >\n      {icon && !loading && <div {...getStyles('icon')}>{icon}</div>}\n      {loading && <Loader size={28} color={color} {...loaderProps} {...getStyles('loader')} />}\n\n      <div {...getStyles('body')}>\n        {title && <div {...getStyles('title')}>{title}</div>}\n\n        <Box {...getStyles('description')} mod={{ 'data-with-title': !!title }}>\n          {children}\n        </Box>\n      </div>\n\n      {withCloseButton && (\n        <CloseButton\n          iconSize={16}\n          color=\"gray\"\n          {...closeButtonProps}\n          unstyled={unstyled}\n          onClick={onClose}\n          {...getStyles('closeButton')}\n        />\n      )}\n    </Box>\n  );\n});\n\nNotification.classes = classes;\nNotification.displayName = '@mantine/core/Notification';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA8EA,MAAMA,YAAA,GAAe;EACnBC,eAAA,EAAiB;AACnB;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CAAwC,CAACC,KAAA,EAAAC,IAAA;EAAA,IAAO;IAAEC,MAAA;IAAQC;EAAA,CAAM,GAAAF,IAAA;EAAA,OAAO;IAC1FG,IAAA,EAAM;MACJ,yBAAyBF,MAAA,KAAW,SAAY,SAAYG,SAAA,CAAUH,MAAM;MAC5E,wBAAwBC,KAAA,GAAQG,aAAA,CAAcH,KAAA,EAAOH,KAAK,IAAI;IAAA;EAElE;AAAA,CAAE;AAEK,MAAMO,YAAA,GAAeC,OAAA,CAA6B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACxE,MAAMC,KAAA,GAAQC,QAAA,CAAS,gBAAgBhB,YAAA,EAAca,MAAM;EAC3D,MAAM;MACJI,SAAA;MACAV,KAAA;MACAD,MAAA;MACAY,OAAA;MACAjB,eAAA;MACAkB,UAAA;MACAC,KAAA;MACAC,IAAA;MACAC,QAAA;MACAC,OAAA;MACAC,gBAAA;MACAC,UAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,OAAA;MACAC,IAAA;MACAC,GAAA;MACAC,WAAA;MACAC,IAAA;MACAC;IACG,CACL,GAAInB,KAAA;IADCoB,MAAA,GAAAC,wBAAA,CACDrB,KAAA,EAAAsB,SAAA;EAEJ,MAAMC,SAAA,GAAYC,SAAA,CAA+B;IAC/CC,IAAA,EAAM;IACNC,OAAA;IACA1B,KAAA;IACAE,SAAA;IACAS,KAAA;IACAD,UAAA;IACAE,MAAA;IACAC,QAAA;IACAM,UAAA;IACAJ,IAAA;IACA5B;EAAA,CACD;EAED,sBACEwC,IAAA,CAACC,GAAA,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACKN,SAAA,CAAU,MAAM;IACpBP,GAAA,EAAK,CAAC;MAAE,kBAAkB,CAAC,CAACV,IAAA,IAAQH,OAAA;MAAS,oBAAoBC;IAAA,CAAW,EAAGY,GAAG;IAClFjB,GAAA;IACAe,OAAA;IACAI,IAAA,EAAMA,IAAA,IAAQ;EAAA,GACVE,MAAA;IAEHb,QAAA,GAAAD,IAAA,IAAQ,CAACH,OAAA,mBAAW2B,GAAA,CAAC,OAAAD,aAAA,CAAAA,aAAA,KAAQN,SAAA,CAAU,MAAM;MAAIhB,QAAA,EAAAD;IAAA,EAAK,GACtDH,OAAA,mBAAW2B,GAAA,CAACC,MAAA,EAAAF,aAAA,CAAAA,aAAA;MAAOG,IAAA,EAAM;MAAIxC;IAAA,GAAkByB,WAAA,GAAiBM,SAAA,CAAU,QAAQ,EAAG,kBAEtFI,IAAA,CAAC,OAAAE,aAAA,CAAAA,aAAA,KAAQN,SAAA,CAAU,MAAM;MACtBhB,QAAA,GAAAF,KAAA,mBAAAyB,GAAA,CAAU,OAAAD,aAAA,CAAAA,aAAA,KAAQN,SAAA,CAAU,OAAO;QAAIhB,QAAA,EAAAF;MAAA,EAAM,kBAE9CyB,GAAA,CAACF,GAAA,EAAAC,aAAA,CAAAA,aAAA,KAAQN,SAAA,CAAU,aAAa;QAAGP,GAAA,EAAK;UAAE,mBAAmB,CAAC,CAACX;QAAA;QAC5DE;MAAA,EACH;IAAA,EACF,GAECrB,eAAA,mBACC4C,GAAA,CAACG,WAAA,EAAAJ,aAAA,CAAAA,aAAA;MACCK,QAAA,EAAU;MACV1C,KAAA,EAAM;IAAA,GACFiB,gBAAA;MACJI,QAAA;MACAsB,OAAA,EAAS3B;IAAA,GACLe,SAAA,CAAU,aAAa;EAC7B,GAEJ;AAEJ,CAAC;AAED3B,YAAA,CAAa8B,OAAA,GAAUA,OAAA;AACvB9B,YAAA,CAAawC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}