{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"refProp\", \"eventPropsWrapperName\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, cloneElement } from 'react';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport { createEventHandler } from '../../../core/utils/create-event-handler/create-event-handler.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useHoverCardContext } from '../HoverCard.context.mjs';\nimport { useHoverCardGroupContext } from '../HoverCardGroup/HoverCardGroup.context.mjs';\nconst defaultProps = {\n  refProp: \"ref\"\n};\nconst HoverCardTarget = forwardRef((props, ref) => {\n  const _useProps = useProps(\"HoverCardTarget\", defaultProps, props),\n    {\n      children,\n      refProp,\n      eventPropsWrapperName\n    } = _useProps,\n    others = _objectWithoutProperties(_useProps, _excluded);\n  if (!isElement(children)) {\n    throw new Error(\"HoverCard.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  const ctx = useHoverCardContext();\n  const withinGroup = useHoverCardGroupContext();\n  if (withinGroup && ctx.getReferenceProps && ctx.reference) {\n    const referenceProps = ctx.getReferenceProps();\n    return /* @__PURE__ */jsx(Popover.Target, _objectSpread(_objectSpread({\n      refProp,\n      ref\n    }, others), {}, {\n      children: cloneElement(children, eventPropsWrapperName ? {\n        [eventPropsWrapperName]: _objectSpread(_objectSpread({}, referenceProps), {}, {\n          ref: ctx.reference\n        })\n      } : _objectSpread(_objectSpread({}, referenceProps), {}, {\n        ref: ctx.reference\n      }))\n    }));\n  }\n  const onMouseEnter = createEventHandler(children.props.onMouseEnter, ctx.openDropdown);\n  const onMouseLeave = createEventHandler(children.props.onMouseLeave, ctx.closeDropdown);\n  const eventListeners = {\n    onMouseEnter,\n    onMouseLeave\n  };\n  return /* @__PURE__ */jsx(Popover.Target, _objectSpread(_objectSpread({\n    refProp,\n    ref\n  }, others), {}, {\n    children: cloneElement(children, eventPropsWrapperName ? {\n      [eventPropsWrapperName]: eventListeners\n    } : eventListeners)\n  }));\n});\nHoverCardTarget.displayName = \"@mantine/core/HoverCardTarget\";\nexport { HoverCardTarget };","map":{"version":3,"names":["defaultProps","refProp","HoverCardTarget","forwardRef","props","ref","_useProps","useProps","children","eventPropsWrapperName","others","_objectWithoutProperties","_excluded","isElement","Error","ctx","useHoverCardContext","withinGroup","useHoverCardGroupContext","getReferenceProps","reference","referenceProps","jsx","Popover","Target","_objectSpread","cloneElement","onMouseEnter","createEventHandler","openDropdown","onMouseLeave","closeDropdown","eventListeners","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/HoverCard/HoverCardTarget/HoverCardTarget.tsx"],"sourcesContent":["import { cloneElement, forwardRef } from 'react';\nimport { createEventHandler, isElement, useProps } from '../../../core';\nimport { Popover, PopoverTargetProps } from '../../Popover';\nimport { useHoverCardContext } from '../HoverCard.context';\nimport { useHoverCardGroupContext } from '../HoverCardGroup/HoverCardGroup.context';\n\nexport interface HoverCardTargetProps extends PopoverTargetProps {\n  /** Key of the prop used to pass event listeners, by default event listeners are passed directly to component */\n  eventPropsWrapperName?: string;\n}\n\nconst defaultProps = {\n  refProp: 'ref',\n} satisfies Partial<HoverCardTargetProps>;\n\nexport const HoverCardTarget = forwardRef<HTMLElement, HoverCardTargetProps>((props, ref) => {\n  const { children, refProp, eventPropsWrapperName, ...others } = useProps(\n    'HoverCardTarget',\n    defaultProps,\n    props\n  );\n\n  if (!isElement(children)) {\n    throw new Error(\n      'HoverCard.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useHoverCardContext();\n  const withinGroup = useHoverCardGroupContext();\n\n  if (withinGroup && ctx.getReferenceProps && ctx.reference) {\n    const referenceProps = ctx.getReferenceProps();\n\n    return (\n      <Popover.Target refProp={refProp} ref={ref} {...others}>\n        {cloneElement(\n          children as React.ReactElement,\n          eventPropsWrapperName\n            ? { [eventPropsWrapperName]: { ...referenceProps, ref: ctx.reference } }\n            : { ...referenceProps, ref: ctx.reference }\n        )}\n      </Popover.Target>\n    );\n  }\n\n  const onMouseEnter = createEventHandler((children.props as any).onMouseEnter, ctx.openDropdown);\n  const onMouseLeave = createEventHandler((children.props as any).onMouseLeave, ctx.closeDropdown);\n\n  const eventListeners = { onMouseEnter, onMouseLeave };\n\n  return (\n    <Popover.Target refProp={refProp} ref={ref} {...others}>\n      {cloneElement(\n        children as React.ReactElement,\n        eventPropsWrapperName ? { [eventPropsWrapperName]: eventListeners } : eventListeners\n      )}\n    </Popover.Target>\n  );\n});\n\nHoverCardTarget.displayName = '@mantine/core/HoverCardTarget';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAWA,MAAMA,YAAA,GAAe;EACnBC,OAAA,EAAS;AACX;AAEO,MAAMC,eAAA,GAAkBC,UAAA,CAA8C,CAACC,KAAA,EAAOC,GAAA,KAAQ;EAC3F,MAAAC,SAAA,GAAgEC,QAAA,CAC9D,mBACAP,YAAA,EACAI,KAAA,CACF;IAJM;MAAEI,QAAA;MAAUP,OAAA;MAASQ;IAA0B,CAAO,GAAAH,SAAA;IAAPI,MAAA,GAAAC,wBAAA,CAAAL,SAAA,EAAAM,SAAA;EAMrD,IAAI,CAACC,SAAA,CAAUL,QAAQ,GAAG;IACxB,MAAM,IAAIM,KAAA,CACR,qKACF;EACF;EAEA,MAAMC,GAAA,GAAMC,mBAAA,EAAoB;EAChC,MAAMC,WAAA,GAAcC,wBAAA,EAAyB;EAE7C,IAAID,WAAA,IAAeF,GAAA,CAAII,iBAAA,IAAqBJ,GAAA,CAAIK,SAAA,EAAW;IACzD,MAAMC,cAAA,GAAiBN,GAAA,CAAII,iBAAA,EAAkB;IAE7C,sBAAAG,GAAA,CACGC,OAAA,CAAQC,MAAA,EAAAC,aAAA,CAAAA,aAAA;MAAOxB,OAAA;MAAkBI;IAAA,GAAcK,MAAA;MAC7CF,QAAA,EAAAkB,YAAA,CACClB,QAAA,EACAC,qBAAA,GACI;QAAE,CAACA,qBAAqB,GAAAgB,aAAA,CAAAA,aAAA,KAAQJ,cAAA;UAAgBhB,GAAA,EAAKU,GAAA,CAAIK;QAAA;MAAA,CAAY,GAAAK,aAAA,CAAAA,aAAA,KAChEJ,cAAA;QAAgBhB,GAAA,EAAKU,GAAA,CAAIK;MAAA,EAAU;IAC9C,EACF;EAEJ;EAEA,MAAMO,YAAA,GAAeC,kBAAA,CAAoBpB,QAAA,CAASJ,KAAA,CAAcuB,YAAA,EAAcZ,GAAA,CAAIc,YAAY;EAC9F,MAAMC,YAAA,GAAeF,kBAAA,CAAoBpB,QAAA,CAASJ,KAAA,CAAc0B,YAAA,EAAcf,GAAA,CAAIgB,aAAa;EAE/F,MAAMC,cAAA,GAAiB;IAAEL,YAAA;IAAcG;EAAA,CAAa;EAEpD,sBAAAR,GAAA,CACGC,OAAA,CAAQC,MAAA,EAAAC,aAAA,CAAAA,aAAA;IAAOxB,OAAA;IAAkBI;EAAA,GAAcK,MAAA;IAC7CF,QAAA,EAAAkB,YAAA,CACClB,QAAA,EACAC,qBAAA,GAAwB;MAAE,CAACA,qBAAqB,GAAGuB;IAAA,CAAe,GAAIA,cAAA;EACxE,EACF;AAEJ,CAAC;AAED9B,eAAA,CAAgB+B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}