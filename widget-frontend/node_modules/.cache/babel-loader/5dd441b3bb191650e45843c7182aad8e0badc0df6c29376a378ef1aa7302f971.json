{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nfunction getInitialValue(initialValue, getInitialValueInEffect) {\n  if (getInitialValueInEffect) {\n    return initialValue;\n  }\n  if (typeof window !== \"undefined\" && \"screen\" in window) {\n    return {\n      angle: window.screen.orientation?.angle ?? initialValue.angle,\n      type: window.screen.orientation?.type ?? initialValue.type\n    };\n  }\n  return initialValue;\n}\nfunction useOrientation({\n  defaultAngle = 0,\n  defaultType = \"landscape-primary\",\n  getInitialValueInEffect = true\n} = {}) {\n  const [orientation, setOrientation] = useState(getInitialValue({\n    angle: defaultAngle,\n    type: defaultType\n  }, getInitialValueInEffect));\n  const handleOrientationChange = event => {\n    const target = event.currentTarget;\n    setOrientation({\n      angle: target?.angle || 0,\n      type: target?.type || \"landscape-primary\"\n    });\n  };\n  useIsomorphicEffect(() => {\n    window.screen.orientation?.addEventListener(\"change\", handleOrientationChange);\n    return () => window.screen.orientation?.removeEventListener(\"change\", handleOrientationChange);\n  }, []);\n  return orientation;\n}\nexport { useOrientation };","map":{"version":3,"names":["getInitialValue","initialValue","getInitialValueInEffect","window","angle","screen","orientation","type","useOrientation","defaultAngle","defaultType","setOrientation","useState","handleOrientationChange","event","target","currentTarget","useIsomorphicEffect","addEventListener","removeEventListener"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-orientation/use-orientation.ts"],"sourcesContent":["import { useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nexport interface UseOrientationOptions {\n  /** Default angle value, used until the real can be retrieved\n   * (during server side rendering and before js executes on the page)\n   * If not provided, the default value is `0`\n   * */\n  defaultAngle?: number;\n\n  /** Default angle value, used until the real can be retrieved\n   * (during server side rendering and before js executes on the page)\n   * If not provided, the default value is `'landscape-primary'`\n   * */\n  defaultType?: OrientationType;\n\n  /** If true, the initial value will be resolved in useEffect (ssr safe)\n   *  If false, the initial value will be resolved in useLayoutEffect (ssr unsafe)\n   *  True by default.\n   */\n  getInitialValueInEffect?: boolean;\n}\n\nexport interface UseOrientationReturnType {\n  angle: number;\n  type: OrientationType;\n}\n\nfunction getInitialValue(\n  initialValue: UseOrientationReturnType,\n  getInitialValueInEffect: boolean\n): UseOrientationReturnType {\n  if (getInitialValueInEffect) {\n    return initialValue;\n  }\n\n  if (typeof window !== 'undefined' && 'screen' in window) {\n    return {\n      angle: window.screen.orientation?.angle ?? initialValue.angle,\n      type: window.screen.orientation?.type ?? initialValue.type,\n    };\n  }\n\n  return initialValue;\n}\n\nexport function useOrientation({\n  defaultAngle = 0,\n  defaultType = 'landscape-primary',\n  getInitialValueInEffect = true,\n}: UseOrientationOptions = {}): UseOrientationReturnType {\n  const [orientation, setOrientation] = useState<UseOrientationReturnType>(\n    getInitialValue(\n      {\n        angle: defaultAngle,\n        type: defaultType,\n      },\n      getInitialValueInEffect\n    )\n  );\n\n  const handleOrientationChange = (event: Event) => {\n    const target = event.currentTarget as ScreenOrientation;\n    setOrientation({ angle: target?.angle || 0, type: target?.type || 'landscape-primary' });\n  };\n\n  useIsomorphicEffect(() => {\n    window.screen.orientation?.addEventListener('change', handleOrientationChange);\n    return () => window.screen.orientation?.removeEventListener('change', handleOrientationChange);\n  }, []);\n\n  return orientation;\n}\n"],"mappings":";;;;AA4BA,SAASA,gBACPC,YAAA,EACAC,uBAAA,EAC0B;EAC1B,IAAIA,uBAAA,EAAyB;IAC3B,OAAOD,YAAA;EACT;EAEA,IAAI,OAAOE,MAAA,KAAW,eAAe,YAAYA,MAAA,EAAQ;IACvD,OAAO;MACLC,KAAA,EAAOD,MAAA,CAAOE,MAAA,CAAOC,WAAA,EAAaF,KAAA,IAASH,YAAA,CAAaG,KAAA;MACxDG,IAAA,EAAMJ,MAAA,CAAOE,MAAA,CAAOC,WAAA,EAAaC,IAAA,IAAQN,YAAA,CAAaM;IAAA,CACxD;EACF;EAEA,OAAON,YAAA;AACT;AAEO,SAASO,eAAe;EAC7BC,YAAA,GAAe;EACfC,WAAA,GAAc;EACdR,uBAAA,GAA0B;AAC5B,IAA2B,EAAC,EAA6B;EACvD,MAAM,CAACI,WAAA,EAAaK,cAAc,IAAIC,QAAA,CACpCZ,eAAA,CACE;IACEI,KAAA,EAAOK,YAAA;IACPF,IAAA,EAAMG;EAAA,CACR,EACAR,uBAAA,CACF,CACF;EAEA,MAAMW,uBAAA,GAA2BC,KAAA,IAAiB;IAChD,MAAMC,MAAA,GAASD,KAAA,CAAME,aAAA;IACrBL,cAAA,CAAe;MAAEP,KAAA,EAAOW,MAAA,EAAQX,KAAA,IAAS;MAAGG,IAAA,EAAMQ,MAAA,EAAQR,IAAA,IAAQ;IAAA,CAAqB;EACzF;EAEAU,mBAAA,CAAoB,MAAM;IACxBd,MAAA,CAAOE,MAAA,CAAOC,WAAA,EAAaY,gBAAA,CAAiB,UAAUL,uBAAuB;IAC7E,OAAO,MAAMV,MAAA,CAAOE,MAAA,CAAOC,WAAA,EAAaa,mBAAA,CAAoB,UAAUN,uBAAuB;EAC/F,GAAG,EAAE;EAEL,OAAOP,WAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}