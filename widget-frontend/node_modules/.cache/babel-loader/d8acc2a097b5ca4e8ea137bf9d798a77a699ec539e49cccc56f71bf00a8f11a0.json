{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './ColorSwatch.module.css.mjs';\nconst defaultProps = {\n  withShadow: true\n};\nconst varsResolver = createVarsResolver((_, {\n  radius,\n  size\n}) => ({\n  root: {\n    \"--cs-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--cs-size\": rem(size)\n  }\n}));\nconst ColorSwatch = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"ColorSwatch\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    size,\n    radius,\n    withShadow,\n    children,\n    variant,\n    attributes,\n    ...others\n  } = useProps(\"ColorSwatch\", defaultProps, props);\n  const getStyles = useStyles({\n    name: \"ColorSwatch\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsxs(Box, {\n    ref,\n    variant,\n    size,\n    ...getStyles(\"root\", {\n      focusable: true\n    }),\n    ...others,\n    children: [/* @__PURE__ */jsx(\"span\", {\n      ...getStyles(\"alphaOverlay\")\n    }), withShadow && /* @__PURE__ */jsx(\"span\", {\n      ...getStyles(\"shadowOverlay\")\n    }), /* @__PURE__ */jsx(\"span\", {\n      ...getStyles(\"colorOverlay\", {\n        style: {\n          backgroundColor: color\n        }\n      })\n    }), /* @__PURE__ */jsx(\"span\", {\n      ...getStyles(\"childrenOverlay\"),\n      children\n    })]\n  });\n});\nColorSwatch.classes = classes;\nColorSwatch.displayName = \"@mantine/core/ColorSwatch\";\nexport { ColorSwatch };","map":{"version":3,"names":["defaultProps","withShadow","varsResolver","createVarsResolver","_","radius","size","root","getRadius","rem","ColorSwatch","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","color","children","variant","attributes","others","getStyles","useStyles","name","classes","jsxs","Box","focusable","jsx","backgroundColor","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/ColorSwatch/ColorSwatch.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './ColorSwatch.module.css';\n\nexport type ColorSwatchStylesNames =\n  | 'root'\n  | 'alphaOverlay'\n  | 'shadowOverlay'\n  | 'colorOverlay'\n  | 'childrenOverlay';\n\nexport type ColorSwatchCssVariables = {\n  root: '--cs-radius' | '--cs-size';\n};\n\nexport interface ColorSwatchProps extends BoxProps, StylesApiProps<ColorSwatchFactory> {\n  /** Valid CSS color to display */\n  color: string;\n\n  /** Controls `width` and `height` of the swatch, any valid CSS value, numbers are converted to rem. @default `28` */\n  size?: React.CSSProperties['width'];\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem. @default `1000` */\n  radius?: MantineRadius;\n\n  /** Determines whether the swatch should have inner `box-shadow` @default `true` */\n  withShadow?: boolean;\n\n  /** Content displayed inside the swatch */\n  children?: React.ReactNode;\n}\n\nexport type ColorSwatchFactory = PolymorphicFactory<{\n  props: ColorSwatchProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: ColorSwatchStylesNames;\n  vars: ColorSwatchCssVariables;\n}>;\n\nconst defaultProps = {\n  withShadow: true,\n} satisfies Partial<ColorSwatchProps>;\n\nconst varsResolver = createVarsResolver<ColorSwatchFactory>((_, { radius, size }) => ({\n  root: {\n    '--cs-radius': radius === undefined ? undefined : getRadius(radius),\n    '--cs-size': rem(size),\n  },\n}));\n\nexport const ColorSwatch = polymorphicFactory<ColorSwatchFactory>((_props, ref) => {\n  const props = useProps('ColorSwatch', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    size,\n    radius,\n    withShadow,\n    children,\n    variant,\n    attributes,\n    ...others\n  } = useProps('ColorSwatch', defaultProps, props);\n\n  const getStyles = useStyles<ColorSwatchFactory>({\n    name: 'ColorSwatch',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      variant={variant}\n      size={size}\n      {...getStyles('root', { focusable: true })}\n      {...others}\n    >\n      <span {...getStyles('alphaOverlay')} />\n      {withShadow && <span {...getStyles('shadowOverlay')} />}\n      <span {...getStyles('colorOverlay', { style: { backgroundColor: color } })} />\n      <span {...getStyles('childrenOverlay')}>{children}</span>\n    </Box>\n  );\n});\n\nColorSwatch.classes = classes;\nColorSwatch.displayName = '@mantine/core/ColorSwatch';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAmDA,MAAMA,YAAA,GAAe;EACnBC,UAAA,EAAY;AACd;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CAAuC,CAACC,CAAA,EAAG;EAAEC,MAAA;EAAQC;AAAA,CAAK,MAAO;EACpFC,IAAA,EAAM;IACJ,eAAeF,MAAA,KAAW,SAAY,SAAYG,SAAA,CAAUH,MAAM;IAClE,aAAaI,GAAA,CAAIH,IAAI;EAAA;AAEzB,EAAE;AAEK,MAAMI,WAAA,GAAcC,kBAAA,CAAuC,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACjF,MAAMC,KAAA,GAAQC,QAAA,CAAS,eAAef,YAAA,EAAcY,MAAM;EAC1D,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,KAAA;IACAhB,IAAA;IACAD,MAAA;IACAJ,UAAA;IACAsB,QAAA;IACAC,OAAA;IACAC,UAAA;IACA,GAAGC;EAAA,CACL,GAAIX,QAAA,CAAS,eAAef,YAAA,EAAcc,KAAK;EAE/C,MAAMa,SAAA,GAAYC,SAAA,CAA8B;IAC9CC,IAAA,EAAM;IACNf,KAAA;IACAgB,OAAA;IACAb,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAK,UAAA;IACAJ,IAAA;IACAnB;EAAA,CACD;EAED,sBACE6B,IAAA,CAACC,GAAA;IACCnB,GAAA;IACAW,OAAA;IACAlB,IAAA;IACC,GAAGqB,SAAA,CAAU,QAAQ;MAAEM,SAAA,EAAW;IAAA,CAAM;IACxC,GAAGP,MAAA;IAEJH,QAAA,kBAAAW,GAAA,CAAC;MAAM,GAAGP,SAAA,CAAU,cAAc;IAAA,CAAG,GACpC1B,UAAA,mBAAciC,GAAA,CAAC;MAAM,GAAGP,SAAA,CAAU,eAAe;IAAA,CAAG,kBACrDO,GAAA,CAAC;MAAM,GAAGP,SAAA,CAAU,gBAAgB;QAAET,KAAA,EAAO;UAAEiB,eAAA,EAAiBb;QAAA;MAAM,CAAG;IAAA,CAAG,kBAAAY,GAAA,CAC3E;MAAM,GAAGP,SAAA,CAAU,iBAAiB;MAAIJ;IAAA,CAAS;EAAA,EACpD;AAEJ,CAAC;AAEDb,WAAA,CAAYoB,OAAA,GAAUA,OAAA;AACtBpB,WAAA,CAAY0B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}