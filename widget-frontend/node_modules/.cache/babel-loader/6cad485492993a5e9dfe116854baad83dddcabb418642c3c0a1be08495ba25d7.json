{"ast":null,"code":"'use client';\n\nfunction getAllCheckedNodes(data, checkedState) {\n  let acc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  const currentTreeChecked = [];\n  for (const node of data) {\n    if (Array.isArray(node.children) && node.children.length > 0) {\n      const innerChecked = getAllCheckedNodes(node.children, checkedState, acc);\n      if (innerChecked.currentTreeChecked.length === node.children.length) {\n        const isChecked = innerChecked.currentTreeChecked.every(item2 => item2.checked);\n        const item = {\n          checked: isChecked,\n          indeterminate: !isChecked,\n          value: node.value,\n          hasChildren: true\n        };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      } else if (innerChecked.currentTreeChecked.length > 0) {\n        const item = {\n          checked: false,\n          indeterminate: true,\n          value: node.value,\n          hasChildren: true\n        };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      }\n    } else if (checkedState.includes(node.value)) {\n      const item = {\n        checked: true,\n        indeterminate: false,\n        value: node.value,\n        hasChildren: false\n      };\n      currentTreeChecked.push(item);\n      acc.push(item);\n    }\n  }\n  return {\n    result: acc,\n    currentTreeChecked\n  };\n}\nexport { getAllCheckedNodes };","map":{"version":3,"names":["getAllCheckedNodes","data","checkedState","acc","arguments","length","undefined","currentTreeChecked","node","Array","isArray","children","innerChecked","isChecked","every","item2","checked","item","indeterminate","value","hasChildren","push","includes","result"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Tree/get-all-checked-nodes/get-all-checked-nodes.ts"],"sourcesContent":["import type { TreeNodeData } from '../Tree';\n\nexport interface CheckedNodeStatus {\n  checked: boolean;\n  indeterminate: boolean;\n  hasChildren: boolean;\n  value: string;\n}\n\nexport function getAllCheckedNodes(\n  data: TreeNodeData[],\n  checkedState: string[],\n  acc: CheckedNodeStatus[] = []\n) {\n  const currentTreeChecked: CheckedNodeStatus[] = [];\n\n  for (const node of data) {\n    if (Array.isArray(node.children) && node.children.length > 0) {\n      const innerChecked = getAllCheckedNodes(node.children, checkedState, acc);\n      if (innerChecked.currentTreeChecked.length === node.children.length) {\n        const isChecked = innerChecked.currentTreeChecked.every((item) => item.checked);\n        const item = {\n          checked: isChecked,\n          indeterminate: !isChecked,\n          value: node.value,\n          hasChildren: true,\n        };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      } else if (innerChecked.currentTreeChecked.length > 0) {\n        const item = { checked: false, indeterminate: true, value: node.value, hasChildren: true };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      }\n    } else if (checkedState.includes(node.value)) {\n      const item: CheckedNodeStatus = {\n        checked: true,\n        indeterminate: false,\n        value: node.value,\n        hasChildren: false,\n      };\n      currentTreeChecked.push(item);\n      acc.push(item);\n    }\n  }\n\n  return { result: acc, currentTreeChecked };\n}\n"],"mappings":";;AASO,SAASA,mBACdC,IAAA,EACAC,YAAA,EAEA;EAAA,IADAC,GAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA2B,EAAC;EAE5B,MAAMG,kBAAA,GAA0C,EAAC;EAEjD,WAAWC,IAAA,IAAQP,IAAA,EAAM;IACvB,IAAIQ,KAAA,CAAMC,OAAA,CAAQF,IAAA,CAAKG,QAAQ,KAAKH,IAAA,CAAKG,QAAA,CAASN,MAAA,GAAS,GAAG;MAC5D,MAAMO,YAAA,GAAeZ,kBAAA,CAAmBQ,IAAA,CAAKG,QAAA,EAAUT,YAAA,EAAcC,GAAG;MACxE,IAAIS,YAAA,CAAaL,kBAAA,CAAmBF,MAAA,KAAWG,IAAA,CAAKG,QAAA,CAASN,MAAA,EAAQ;QACnE,MAAMQ,SAAA,GAAYD,YAAA,CAAaL,kBAAA,CAAmBO,KAAA,CAAOC,KAAA,IAASA,KAAA,CAAKC,OAAO;QAC9E,MAAMC,IAAA,GAAO;UACXD,OAAA,EAASH,SAAA;UACTK,aAAA,EAAe,CAACL,SAAA;UAChBM,KAAA,EAAOX,IAAA,CAAKW,KAAA;UACZC,WAAA,EAAa;QAAA,CACf;QACAb,kBAAA,CAAmBc,IAAA,CAAKJ,IAAI;QAC5Bd,GAAA,CAAIkB,IAAA,CAAKJ,IAAI;MACf,WAAWL,YAAA,CAAaL,kBAAA,CAAmBF,MAAA,GAAS,GAAG;QACrD,MAAMY,IAAA,GAAO;UAAED,OAAA,EAAS;UAAOE,aAAA,EAAe;UAAMC,KAAA,EAAOX,IAAA,CAAKW,KAAA;UAAOC,WAAA,EAAa;QAAA,CAAK;QACzFb,kBAAA,CAAmBc,IAAA,CAAKJ,IAAI;QAC5Bd,GAAA,CAAIkB,IAAA,CAAKJ,IAAI;MACf;IACF,WAAWf,YAAA,CAAaoB,QAAA,CAASd,IAAA,CAAKW,KAAK,GAAG;MAC5C,MAAMF,IAAA,GAA0B;QAC9BD,OAAA,EAAS;QACTE,aAAA,EAAe;QACfC,KAAA,EAAOX,IAAA,CAAKW,KAAA;QACZC,WAAA,EAAa;MAAA,CACf;MACAb,kBAAA,CAAmBc,IAAA,CAAKJ,IAAI;MAC5Bd,GAAA,CAAIkB,IAAA,CAAKJ,IAAI;IACf;EACF;EAEA,OAAO;IAAEM,MAAA,EAAQpB,GAAA;IAAKI;EAAA,CAAmB;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}