{"ast":null,"code":"'use client';\n\nimport { useEffect, useRef } from 'react';\nimport { shallowEqual } from '../utils/shallow-equal/shallow-equal.mjs';\nfunction shallowCompare(prevValue, currValue) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n  if (prevValue === currValue) {\n    return true;\n  }\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n  for (let i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction useShallowCompare(dependencies) {\n  const ref = useRef([]);\n  const updateRef = useRef(0);\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n  return [updateRef.current];\n}\nfunction useShallowEffect(cb, dependencies) {\n  useEffect(cb, useShallowCompare(dependencies));\n}\nexport { useShallowEffect };","map":{"version":3,"names":["shallowCompare","prevValue","currValue","length","i","shallowEqual","useShallowCompare","dependencies","ref","useRef","updateRef","current","useShallowEffect","cb","useEffect"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/hooks/src/use-shallow-effect/use-shallow-effect.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { shallowEqual } from '../utils/shallow-equal/shallow-equal';\n\nfunction shallowCompare(prevValue?: React.DependencyList | null, currValue?: React.DependencyList) {\n  if (!prevValue || !currValue) {\n    return false;\n  }\n\n  if (prevValue === currValue) {\n    return true;\n  }\n\n  if (prevValue.length !== currValue.length) {\n    return false;\n  }\n\n  for (let i = 0; i < prevValue.length; i += 1) {\n    if (!shallowEqual(prevValue[i], currValue[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction useShallowCompare(dependencies?: React.DependencyList) {\n  const ref = useRef<React.DependencyList | null | undefined>([]);\n  const updateRef = useRef<number>(0);\n\n  if (!shallowCompare(ref.current, dependencies)) {\n    ref.current = dependencies;\n    updateRef.current += 1;\n  }\n\n  return [updateRef.current];\n}\n\nexport function useShallowEffect(cb: () => void, dependencies?: React.DependencyList): void {\n  useEffect(cb, useShallowCompare(dependencies));\n}\n"],"mappings":";;;;AAGA,SAASA,eAAeC,SAAA,EAAyCC,SAAA,EAAkC;EACjG,IAAI,CAACD,SAAA,IAAa,CAACC,SAAA,EAAW;IAC5B,OAAO;EACT;EAEA,IAAID,SAAA,KAAcC,SAAA,EAAW;IAC3B,OAAO;EACT;EAEA,IAAID,SAAA,CAAUE,MAAA,KAAWD,SAAA,CAAUC,MAAA,EAAQ;IACzC,OAAO;EACT;EAEA,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAIH,SAAA,CAAUE,MAAA,EAAQC,CAAA,IAAK,GAAG;IAC5C,IAAI,CAACC,YAAA,CAAaJ,SAAA,CAAUG,CAAC,GAAGF,SAAA,CAAUE,CAAC,CAAC,GAAG;MAC7C,OAAO;IACT;EACF;EAEA,OAAO;AACT;AAEA,SAASE,kBAAkBC,YAAA,EAAqC;EAC9D,MAAMC,GAAA,GAAMC,MAAA,CAAgD,EAAE;EAC9D,MAAMC,SAAA,GAAYD,MAAA,CAAe,CAAC;EAElC,IAAI,CAACT,cAAA,CAAeQ,GAAA,CAAIG,OAAA,EAASJ,YAAY,GAAG;IAC9CC,GAAA,CAAIG,OAAA,GAAUJ,YAAA;IACdG,SAAA,CAAUC,OAAA,IAAW;EACvB;EAEA,OAAO,CAACD,SAAA,CAAUC,OAAO;AAC3B;AAEO,SAASC,iBAAiBC,EAAA,EAAgBN,YAAA,EAA2C;EAC1FO,SAAA,CAAUD,EAAA,EAAIP,iBAAA,CAAkBC,YAAY,CAAC;AAC/C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}