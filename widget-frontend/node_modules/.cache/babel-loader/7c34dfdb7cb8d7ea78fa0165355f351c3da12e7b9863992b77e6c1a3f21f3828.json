{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"fluid\", \"mod\", \"attributes\", \"strategy\"];\nimport { jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Container.module.css.mjs';\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    size,\n    fluid\n  } = _ref;\n  return {\n    root: {\n      \"--container-size\": fluid ? void 0 : getSize(size, \"container-size\")\n    }\n  };\n});\nconst Container = factory((_props, ref) => {\n  const props = useProps(\"Container\", null, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      fluid,\n      mod,\n      attributes,\n      strategy\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"Container\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread({\n    ref,\n    mod: [{\n      fluid,\n      strategy: strategy || \"block\"\n    }, mod]\n  }, getStyles(\"root\")), others));\n});\nContainer.classes = classes;\nContainer.displayName = \"@mantine/core/Container\";\nexport { Container };","map":{"version":3,"names":["varsResolver","createVarsResolver","_","_ref","size","fluid","root","getSize","Container","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","mod","attributes","strategy","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","jsx","Box","_objectSpread","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Container/Container.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Container.module.css';\n\nexport type ContainerStylesNames = 'root';\nexport type ContainerCssVariables = {\n  root: '--container-size';\n};\n\nexport interface ContainerProps\n  extends BoxProps,\n    StylesApiProps<ContainerFactory>,\n    ElementProps<'div'> {\n  /** `max-width` of the container, value is not responsive â€“ it is the same for all screen sizes. Numbers are converted to rem. Ignored when `fluid` prop is set. @default `'md'` */\n  size?: MantineSize | (string & {}) | number;\n\n  /** If set, the container takes 100% width of its parent and `size` prop is ignored. @default `false` */\n  fluid?: boolean;\n\n  /** Centering strategy @default `'block'` */\n  strategy?: 'block' | 'grid';\n}\n\nexport type ContainerFactory = Factory<{\n  props: ContainerProps;\n  ref: HTMLDivElement;\n  stylesNames: ContainerStylesNames;\n  vars: ContainerCssVariables;\n}>;\n\nconst varsResolver = createVarsResolver<ContainerFactory>((_, { size, fluid }) => ({\n  root: {\n    '--container-size': fluid ? undefined : getSize(size, 'container-size'),\n  },\n}));\n\nexport const Container = factory<ContainerFactory>((_props, ref) => {\n  const props = useProps('Container', null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    fluid,\n    mod,\n    attributes,\n    strategy,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ContainerFactory>({\n    name: 'Container',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      ref={ref}\n      mod={[{ fluid, strategy: strategy || 'block' }, mod]}\n      {...getStyles('root')}\n      {...others}\n    />\n  );\n});\n\nContainer.classes = classes;\nContainer.displayName = '@mantine/core/Container';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAyCA,MAAMA,YAAA,GAAeC,kBAAA,CAAqC,CAACC,CAAA,EAAAC,IAAA;EAAA,IAAG;IAAEC,IAAA;IAAMC;EAAA,CAAM,GAAAF,IAAA;EAAA,OAAO;IACjFG,IAAA,EAAM;MACJ,oBAAoBD,KAAA,GAAQ,SAAYE,OAAA,CAAQH,IAAA,EAAM,gBAAgB;IAAA;EAE1E;AAAA,CAAE;AAEK,MAAMI,SAAA,GAAYC,OAAA,CAA0B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAClE,MAAMC,KAAA,GAAQC,QAAA,CAAS,aAAa,MAAMH,MAAM;EAChD,MAAM;MACJI,UAAA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,IAAA;MACAd,KAAA;MACAe,GAAA;MACAC,UAAA;MACAC;IACG,CACL,GAAIV,KAAA;IADCW,MAAA,GAAAC,wBAAA,CACDZ,KAAA,EAAAa,SAAA;EAEJ,MAAMC,SAAA,GAAYC,SAAA,CAA4B;IAC5CC,IAAA,EAAM;IACNC,OAAA;IACAjB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAG,UAAA;IACAF,IAAA;IACAnB;EAAA,CACD;EAED,sBACE8B,GAAA,CAACC,GAAA,EAAAC,aAAA,CAAAA,aAAA;IACCrB,GAAA;IACAS,GAAA,EAAK,CAAC;MAAEf,KAAA;MAAOiB,QAAA,EAAUA,QAAA,IAAY;IAAA,GAAWF,GAAG;EAAA,GAC/CM,SAAA,CAAU,MAAM,IAChBH,MAAA,EACN;AAEJ,CAAC;AAEDf,SAAA,CAAUqB,OAAA,GAAUA,OAAA;AACpBrB,SAAA,CAAUyB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}