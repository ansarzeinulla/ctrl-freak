{"ast":null,"code":"'use client';\n\nfunction parseItem(item) {\n  if (typeof item === \"string\") {\n    return {\n      value: item,\n      label: item\n    };\n  }\n  if (\"value\" in item && !(\"label\" in item)) {\n    return {\n      value: item.value,\n      label: item.value,\n      disabled: item.disabled\n    };\n  }\n  if (typeof item === \"number\") {\n    return {\n      value: item.toString(),\n      label: item.toString()\n    };\n  }\n  if (\"group\" in item) {\n    return {\n      group: item.group,\n      items: item.items.map(i => parseItem(i))\n    };\n  }\n  return item;\n}\nfunction getParsedComboboxData(data) {\n  if (!data) {\n    return [];\n  }\n  return data.map(item => parseItem(item));\n}\nexport { getParsedComboboxData };","map":{"version":3,"names":["parseItem","item","value","label","disabled","toString","group","items","map","i","getParsedComboboxData","data"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Combobox/get-parsed-combobox-data/get-parsed-combobox-data.ts"],"sourcesContent":["import {\n  ComboboxData,\n  ComboboxItem,\n  ComboboxItemGroup,\n  ComboboxParsedItem,\n  ComboboxParsedItemGroup,\n  ComboboxStringData,\n  ComboboxStringItem,\n} from '../Combobox.types';\n\nfunction parseItem(\n  item: string | ComboboxItem | ComboboxStringItem | ComboboxItemGroup\n): ComboboxItem | ComboboxParsedItemGroup {\n  if (typeof item === 'string') {\n    return { value: item, label: item };\n  }\n\n  if ('value' in item && !('label' in item)) {\n    return { value: item.value, label: item.value, disabled: item.disabled };\n  }\n\n  if (typeof item === 'number') {\n    return { value: (item as number).toString(), label: (item as number).toString() };\n  }\n\n  if ('group' in item) {\n    return {\n      group: item.group,\n      items: item.items.map((i) => parseItem(i) as ComboboxItem),\n    };\n  }\n\n  return item;\n}\n\nexport function getParsedComboboxData(\n  data: ComboboxData | ComboboxStringData | undefined\n): ComboboxParsedItem[] {\n  if (!data) {\n    return [];\n  }\n\n  return data.map((item) => parseItem(item as ComboboxItem));\n}\n"],"mappings":";;AAUA,SAASA,UACPC,IAAA,EACwC;EACxC,IAAI,OAAOA,IAAA,KAAS,UAAU;IAC5B,OAAO;MAAEC,KAAA,EAAOD,IAAA;MAAME,KAAA,EAAOF;IAAA,CAAK;EACpC;EAEA,IAAI,WAAWA,IAAA,IAAQ,EAAE,WAAWA,IAAA,GAAO;IACzC,OAAO;MAAEC,KAAA,EAAOD,IAAA,CAAKC,KAAA;MAAOC,KAAA,EAAOF,IAAA,CAAKC,KAAA;MAAOE,QAAA,EAAUH,IAAA,CAAKG;IAAA,CAAS;EACzE;EAEA,IAAI,OAAOH,IAAA,KAAS,UAAU;IAC5B,OAAO;MAAEC,KAAA,EAAQD,IAAA,CAAgBI,QAAA;MAAYF,KAAA,EAAQF,IAAA,CAAgBI,QAAA;IAAS,CAAE;EAClF;EAEA,IAAI,WAAWJ,IAAA,EAAM;IACnB,OAAO;MACLK,KAAA,EAAOL,IAAA,CAAKK,KAAA;MACZC,KAAA,EAAON,IAAA,CAAKM,KAAA,CAAMC,GAAA,CAAKC,CAAA,IAAMT,SAAA,CAAUS,CAAC,CAAiB;IAAA,CAC3D;EACF;EAEA,OAAOR,IAAA;AACT;AAEO,SAASS,sBACdC,IAAA,EACsB;EACtB,IAAI,CAACA,IAAA,EAAM;IACT,OAAO,EAAC;EACV;EAEA,OAAOA,IAAA,CAAKH,GAAA,CAAKP,IAAA,IAASD,SAAA,CAAUC,IAAoB,CAAC;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}