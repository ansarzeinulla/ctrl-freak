{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { rem } from '../../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ColorSlider } from '../ColorSlider/ColorSlider.mjs';\nimport { round } from '../converters/parsers.mjs';\nconst AlphaSlider = forwardRef((props, ref) => {\n  const {\n    value,\n    onChange,\n    onChangeEnd,\n    color,\n    ...others\n  } = useProps(\"AlphaSlider\", null, props);\n  return /* @__PURE__ */jsx(ColorSlider, {\n    ...others,\n    ref,\n    value,\n    onChange: val => onChange?.(round(val, 2)),\n    onChangeEnd: val => onChangeEnd?.(round(val, 2)),\n    maxValue: 1,\n    round: false,\n    \"data-alpha\": true,\n    overlays: [{\n      backgroundImage: \"linear-gradient(45deg, var(--slider-checkers) 25%, transparent 25%), linear-gradient(-45deg, var(--slider-checkers) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, var(--slider-checkers) 75%), linear-gradient(-45deg, var(--mantine-color-body) 75%, var(--slider-checkers) 75%)\",\n      backgroundSize: `${rem(8)} ${rem(8)}`,\n      backgroundPosition: `0 0, 0 ${rem(4)}, ${rem(4)} ${rem(-4)}, ${rem(-4)} 0`\n    }, {\n      backgroundImage: `linear-gradient(90deg, transparent, ${color})`\n    }, {\n      boxShadow: `rgba(0, 0, 0, .1) 0 0 0 ${rem(1)} inset, rgb(0, 0, 0, .15) 0 0 ${rem(4)} inset`\n    }]\n  });\n});\nAlphaSlider.displayName = \"@mantine/core/AlphaSlider\";\nexport { AlphaSlider };","map":{"version":3,"names":["AlphaSlider","forwardRef","props","ref","value","onChange","onChangeEnd","color","others","useProps","jsx","ColorSlider","val","round","maxValue","overlays","backgroundImage","backgroundSize","rem","backgroundPosition","boxShadow","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/ColorPicker/AlphaSlider/AlphaSlider.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { rem, useProps } from '../../../core';\nimport { ColorSlider, ColorSliderProps } from '../ColorSlider/ColorSlider';\nimport { round } from '../converters/parsers';\n\nexport interface AlphaSliderProps\n  extends Omit<ColorSliderProps, 'maxValue' | 'overlays' | 'round'> {\n  color: string;\n}\n\nexport const AlphaSlider = forwardRef<HTMLDivElement, AlphaSliderProps>((props, ref) => {\n  const { value, onChange, onChangeEnd, color, ...others } = useProps('AlphaSlider', null, props);\n\n  return (\n    <ColorSlider\n      {...others}\n      ref={ref}\n      value={value}\n      onChange={(val) => onChange?.(round(val, 2))}\n      onChangeEnd={(val) => onChangeEnd?.(round(val, 2))}\n      maxValue={1}\n      round={false}\n      data-alpha\n      overlays={[\n        {\n          backgroundImage:\n            'linear-gradient(45deg, var(--slider-checkers) 25%, transparent 25%), linear-gradient(-45deg, var(--slider-checkers) 25%, transparent 25%), linear-gradient(45deg, transparent 75%, var(--slider-checkers) 75%), linear-gradient(-45deg, var(--mantine-color-body) 75%, var(--slider-checkers) 75%)',\n          backgroundSize: `${rem(8)} ${rem(8)}`,\n          backgroundPosition: `0 0, 0 ${rem(4)}, ${rem(4)} ${rem(-4)}, ${rem(-4)} 0`,\n        },\n        {\n          backgroundImage: `linear-gradient(90deg, transparent, ${color})`,\n        },\n        {\n          boxShadow: `rgba(0, 0, 0, .1) 0 0 0 ${rem(1)} inset, rgb(0, 0, 0, .15) 0 0 ${rem(\n            4\n          )} inset`,\n        },\n      ]}\n    />\n  );\n});\n\nAlphaSlider.displayName = '@mantine/core/AlphaSlider';\n"],"mappings":";;;;;;;;;;;;;;;;;AAUO,MAAMA,WAAA,GAAcC,UAAA,CAA6C,CAACC,KAAA,EAAOC,GAAA,KAAQ;EACtF,MAAM;IAAEC,KAAA;IAAOC,QAAA;IAAUC,WAAA;IAAaC,KAAA;IAAO,GAAGC;EAAA,CAAO,GAAIC,QAAA,CAAS,eAAe,MAAMP,KAAK;EAE9F,sBACEQ,GAAA,CAACC,WAAA;IACE,GAAGH,MAAA;IACJL,GAAA;IACAC,KAAA;IACAC,QAAA,EAAWO,GAAA,IAAQP,QAAA,GAAWQ,KAAA,CAAMD,GAAA,EAAK,CAAC,CAAC;IAC3CN,WAAA,EAAcM,GAAA,IAAQN,WAAA,GAAcO,KAAA,CAAMD,GAAA,EAAK,CAAC,CAAC;IACjDE,QAAA,EAAU;IACVD,KAAA,EAAO;IACP,cAAU;IACVE,QAAA,EAAU,CACR;MACEC,eAAA,EACE;MACFC,cAAA,EAAgB,GAAGC,GAAA,CAAI,CAAC,CAAC,IAAIA,GAAA,CAAI,CAAC,CAAC;MACnCC,kBAAA,EAAoB,UAAUD,GAAA,CAAI,CAAC,CAAC,KAAKA,GAAA,CAAI,CAAC,CAAC,IAAIA,GAAA,CAAI,EAAE,CAAC,KAAKA,GAAA,CAAI,EAAE,CAAC;IAAA,CACxE,EACA;MACEF,eAAA,EAAiB,uCAAuCT,KAAK;IAAA,CAC/D,EACA;MACEa,SAAA,EAAW,2BAA2BF,GAAA,CAAI,CAAC,CAAC,iCAAiCA,GAAA,CAC3E,EACD;IAAA;EAEL,EACF;AAEJ,CAAC;AAEDlB,WAAA,CAAYqB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}