{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport { useClipboard } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nconst defaultProps = {\n  timeout: 1e3\n};\nfunction CopyButton(props) {\n  const {\n    children,\n    timeout,\n    value,\n    ...others\n  } = useProps(\"CopyButton\", defaultProps, props);\n  const clipboard = useClipboard({\n    timeout\n  });\n  const copy = () => clipboard.copy(value);\n  return /* @__PURE__ */jsx(Fragment, {\n    children: children({\n      copy,\n      copied: clipboard.copied,\n      ...others\n    })\n  });\n}\nCopyButton.displayName = \"@mantine/core/CopyButton\";\nexport { CopyButton };","map":{"version":3,"names":["defaultProps","timeout","CopyButton","props","children","value","others","useProps","clipboard","useClipboard","copy","jsx","Fragment","copied","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/CopyButton/CopyButton.tsx"],"sourcesContent":["import { useClipboard } from '@mantine/hooks';\nimport { useProps } from '../../core';\n\nexport interface CopyButtonProps {\n  /** Children callback, provides current status and copy function as an argument */\n  children: (payload: { copied: boolean; copy: () => void }) => React.ReactNode;\n\n  /** Value that is copied to the clipboard when the button is clicked */\n  value: string;\n\n  /** Copied status timeout in ms @default `1000` */\n  timeout?: number;\n}\n\nconst defaultProps = {\n  timeout: 1000,\n} satisfies Partial<CopyButtonProps>;\n\nexport function CopyButton(props: CopyButtonProps) {\n  const { children, timeout, value, ...others } = useProps('CopyButton', defaultProps, props);\n  const clipboard = useClipboard({ timeout });\n  const copy = () => clipboard.copy(value);\n  return <>{children({ copy, copied: clipboard.copied, ...others })}</>;\n}\n\nCopyButton.displayName = '@mantine/core/CopyButton';\n"],"mappings":";;;;;;;;;;;;;;;AAcA,MAAMA,YAAA,GAAe;EACnBC,OAAA,EAAS;AACX;AAEO,SAASC,WAAWC,KAAA,EAAwB;EACjD,MAAM;IAAEC,QAAA;IAAUH,OAAA;IAASI,KAAA;IAAO,GAAGC;EAAA,CAAO,GAAIC,QAAA,CAAS,cAAcP,YAAA,EAAcG,KAAK;EAC1F,MAAMK,SAAA,GAAYC,YAAA,CAAa;IAAER;EAAA,CAAS;EAC1C,MAAMS,IAAA,GAAOA,CAAA,KAAMF,SAAA,CAAUE,IAAA,CAAKL,KAAK;EACvC,sBAAOM,GAAA,CAAAC,QAAA;IAAGR,QAAA,EAAAA,QAAA,CAAS;MAAEM,IAAA;MAAMG,MAAA,EAAQL,SAAA,CAAUK,MAAA;MAAQ,GAAGP;IAAA,CAAQ;EAAA,CAAE;AACpE;AAEAJ,UAAA,CAAWY,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}