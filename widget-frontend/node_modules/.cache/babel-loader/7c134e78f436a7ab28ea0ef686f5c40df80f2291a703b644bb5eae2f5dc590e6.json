{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect } from 'react';\nconst DEFAULT_EVENTS = [\"mousedown\", \"touchstart\"];\nfunction useClickOutside(callback, events, nodes) {\n  const ref = useRef(null);\n  const eventsList = events || DEFAULT_EVENTS;\n  useEffect(() => {\n    const listener = event => {\n      const {\n        target\n      } = event !== null && event !== void 0 ? event : {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore = !document.body.contains(target) && (target === null || target === void 0 ? void 0 : target.tagName) !== \"HTML\";\n        const shouldTrigger = nodes.every(node => !!node && !event.composedPath().includes(node));\n        shouldTrigger && !shouldIgnore && callback(event);\n      } else if (ref.current && !ref.current.contains(target)) {\n        callback(event);\n      }\n    };\n    eventsList.forEach(fn => document.addEventListener(fn, listener));\n    return () => {\n      eventsList.forEach(fn => document.removeEventListener(fn, listener));\n    };\n  }, [ref, callback, nodes]);\n  return ref;\n}\nexport { useClickOutside };","map":{"version":3,"names":["DEFAULT_EVENTS","useClickOutside","callback","events","nodes","ref","useRef","eventsList","useEffect","listener","event","target","Array","isArray","shouldIgnore","document","body","contains","tagName","shouldTrigger","every","node","composedPath","includes","current","forEach","fn","addEventListener","removeEventListener"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/hooks/src/use-click-outside/use-click-outside.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\ntype EventType = MouseEvent | TouchEvent;\n\nconst DEFAULT_EVENTS = ['mousedown', 'touchstart'];\n\nexport function useClickOutside<T extends HTMLElement = any>(\n  callback: (event: EventType) => void,\n  events?: string[] | null,\n  nodes?: (HTMLElement | null)[]\n) {\n  const ref = useRef<T>(null);\n  const eventsList = events || DEFAULT_EVENTS;\n\n  useEffect(() => {\n    const listener = (event: Event) => {\n      const { target } = event ?? {};\n      if (Array.isArray(nodes)) {\n        const shouldIgnore =\n          !document.body.contains(target as Node) && (target as Element)?.tagName !== 'HTML';\n        const shouldTrigger = nodes.every((node) => !!node && !event.composedPath().includes(node));\n        shouldTrigger && !shouldIgnore && callback(event as EventType);\n      } else if (ref.current && !ref.current.contains(target as Node)) {\n        callback(event as EventType);\n      }\n    };\n\n    eventsList.forEach((fn) => document.addEventListener(fn, listener));\n\n    return () => {\n      eventsList.forEach((fn) => document.removeEventListener(fn, listener));\n    };\n  }, [ref, callback, nodes]);\n\n  return ref;\n}\n"],"mappings":";;;AAIA,MAAMA,cAAA,GAAiB,CAAC,aAAa,YAAY;AAE1C,SAASC,gBACdC,QAAA,EACAC,MAAA,EACAC,KAAA,EACA;EACA,MAAMC,GAAA,GAAMC,MAAA,CAAU,IAAI;EAC1B,MAAMC,UAAA,GAAaJ,MAAA,IAAUH,cAAA;EAE7BQ,SAAA,CAAU,MAAM;IACd,MAAMC,QAAA,GAAYC,KAAA,IAAiB;MACjC,MAAM;QAAEC;MAAA,CAAO,GAAID,KAAA,aAAAA,KAAA,cAAAA,KAAA,GAAS,EAAC;MAC7B,IAAIE,KAAA,CAAMC,OAAA,CAAQT,KAAK,GAAG;QACxB,MAAMU,YAAA,GACJ,CAACC,QAAA,CAASC,IAAA,CAAKC,QAAA,CAASN,MAAc,KAAM,CAAAA,MAAA,aAAAA,MAAA,uBAAAA,MAAA,CAAoBO,OAAA,MAAY;QAC9E,MAAMC,aAAA,GAAgBf,KAAA,CAAMgB,KAAA,CAAOC,IAAA,IAAS,CAAC,CAACA,IAAA,IAAQ,CAACX,KAAA,CAAMY,YAAA,EAAa,CAAEC,QAAA,CAASF,IAAI,CAAC;QAC1FF,aAAA,IAAiB,CAACL,YAAA,IAAgBZ,QAAA,CAASQ,KAAkB;MAC/D,WAAWL,GAAA,CAAImB,OAAA,IAAW,CAACnB,GAAA,CAAImB,OAAA,CAAQP,QAAA,CAASN,MAAc,GAAG;QAC/DT,QAAA,CAASQ,KAAkB;MAC7B;IACF;IAEAH,UAAA,CAAWkB,OAAA,CAASC,EAAA,IAAOX,QAAA,CAASY,gBAAA,CAAiBD,EAAA,EAAIjB,QAAQ,CAAC;IAElE,OAAO,MAAM;MACXF,UAAA,CAAWkB,OAAA,CAASC,EAAA,IAAOX,QAAA,CAASa,mBAAA,CAAoBF,EAAA,EAAIjB,QAAQ,CAAC;IACvE;EACF,GAAG,CAACJ,GAAA,EAAKH,QAAA,EAAUE,KAAK,CAAC;EAEzB,OAAOC,GAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}