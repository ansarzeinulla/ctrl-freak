{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.mjs';\nimport classes from './Burger.module.css.mjs';\nconst varsResolver = createVarsResolver((theme, {\n  color,\n  size,\n  lineSize,\n  transitionDuration,\n  transitionTimingFunction\n}) => ({\n  root: {\n    \"--burger-color\": color ? getThemeColor(color, theme) : void 0,\n    \"--burger-size\": getSize(size, \"burger-size\"),\n    \"--burger-line-size\": lineSize ? rem(lineSize) : void 0,\n    \"--burger-transition-duration\": transitionDuration === void 0 ? void 0 : `${transitionDuration}ms`,\n    \"--burger-transition-timing-function\": transitionTimingFunction\n  }\n}));\nconst Burger = factory((_props, ref) => {\n  const props = useProps(\"Burger\", null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    opened,\n    children,\n    transitionDuration,\n    transitionTimingFunction,\n    lineSize,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Burger\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsxs(UnstyledButton, {\n    ...getStyles(\"root\"),\n    ref,\n    ...others,\n    children: [/* @__PURE__ */jsx(Box, {\n      mod: [\"reduce-motion\", {\n        opened\n      }],\n      ...getStyles(\"burger\")\n    }), children]\n  });\n});\nBurger.classes = classes;\nBurger.displayName = \"@mantine/core/Burger\";\nexport { Burger };","map":{"version":3,"names":["varsResolver","createVarsResolver","theme","color","size","lineSize","transitionDuration","transitionTimingFunction","root","getThemeColor","getSize","rem","Burger","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","opened","children","attributes","others","getStyles","useStyles","name","classes","jsxs","UnstyledButton","jsx","Box","mod","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Burger/Burger.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { UnstyledButton } from '../UnstyledButton';\nimport classes from './Burger.module.css';\n\nexport type BurgerStylesNames = 'root' | 'burger';\nexport type BurgerCssVariables = {\n  root:\n    | '--burger-color'\n    | '--burger-size'\n    | '--burger-line-size'\n    | '--burger-transition-duration'\n    | '--burger-transition-timing-function';\n};\n\nexport interface BurgerProps\n  extends BoxProps,\n    StylesApiProps<BurgerFactory>,\n    ElementProps<'button'> {\n  /** Controls burger `width` and `height`, numbers are converted to rem @default `'md'` */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Controls height of lines, by default calculated based on `size` prop */\n  lineSize?: string | number;\n\n  /** Key of `theme.colors` of any valid CSS value, by default `theme.white` in dark color scheme and `theme.black` in light */\n  color?: MantineColor;\n\n  /** State of the burger, when `true` burger is transformed into X @default `false` */\n  opened?: boolean;\n\n  /** `transition-duration` property value in ms @default `300` */\n  transitionDuration?: number;\n\n  /** `transition-timing-function` property value @default `'ease'` */\n  transitionTimingFunction?: string;\n}\n\nexport type BurgerFactory = Factory<{\n  props: BurgerProps;\n  ref: HTMLButtonElement;\n  stylesNames: BurgerStylesNames;\n  vars: BurgerCssVariables;\n}>;\n\nconst varsResolver = createVarsResolver<BurgerFactory>(\n  (theme, { color, size, lineSize, transitionDuration, transitionTimingFunction }) => ({\n    root: {\n      '--burger-color': color ? getThemeColor(color, theme) : undefined,\n      '--burger-size': getSize(size, 'burger-size'),\n      '--burger-line-size': lineSize ? rem(lineSize) : undefined,\n      '--burger-transition-duration':\n        transitionDuration === undefined ? undefined : `${transitionDuration}ms`,\n      '--burger-transition-timing-function': transitionTimingFunction,\n    },\n  })\n);\n\nexport const Burger = factory<BurgerFactory>((_props, ref) => {\n  const props = useProps('Burger', null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    opened,\n    children,\n    transitionDuration,\n    transitionTimingFunction,\n    lineSize,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BurgerFactory>({\n    name: 'Burger',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <UnstyledButton {...getStyles('root')} ref={ref} {...others}>\n      <Box mod={['reduce-motion', { opened }]} {...getStyles('burger')} />\n      {children}\n    </UnstyledButton>\n  );\n});\n\nBurger.classes = classes;\nBurger.displayName = '@mantine/core/Burger';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AA2DA,MAAMA,YAAA,GAAeC,kBAAA,CACnB,CAACC,KAAA,EAAO;EAAEC,KAAA;EAAOC,IAAA;EAAMC,QAAA;EAAUC,kBAAA;EAAoBC;AAAA,CAAyB,MAAO;EACnFC,IAAA,EAAM;IACJ,kBAAkBL,KAAA,GAAQM,aAAA,CAAcN,KAAA,EAAOD,KAAK,IAAI;IACxD,iBAAiBQ,OAAA,CAAQN,IAAA,EAAM,aAAa;IAC5C,sBAAsBC,QAAA,GAAWM,GAAA,CAAIN,QAAQ,IAAI;IACjD,gCACEC,kBAAA,KAAuB,SAAY,SAAY,GAAGA,kBAAkB;IACtE,uCAAuCC;EAAA;AACzC,CACF,CACF;AAEO,MAAMK,MAAA,GAASC,OAAA,CAAuB,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAC5D,MAAMC,KAAA,GAAQC,QAAA,CAAS,UAAU,MAAMH,MAAM;EAC7C,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,MAAA;IACAC,QAAA;IACAnB,kBAAA;IACAC,wBAAA;IACAF,QAAA;IACAqB,UAAA;IACA,GAAGC;EAAA,CACL,GAAIX,KAAA;EAEJ,MAAMY,SAAA,GAAYC,SAAA,CAAyB;IACzCC,IAAA,EAAM;IACNC,OAAA;IACAf,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAI,UAAA;IACAH,IAAA;IACAvB;EAAA,CACD;EAED,sBACEgC,IAAA,CAACC,cAAA;IAAgB,GAAGL,SAAA,CAAU,MAAM;IAAGb,GAAA;IAAW,GAAGY,MAAA;IACnDF,QAAA,kBAAAS,GAAA,CAACC,GAAA;MAAIC,GAAA,EAAK,CAAC,iBAAiB;QAAEZ;MAAA,CAAQ;MAAI,GAAGI,SAAA,CAAU,QAAQ;IAAA,CAAG,GACjEH,QAAA;EAAA,CACH;AAEJ,CAAC;AAEDb,MAAA,CAAOmB,OAAA,GAAUA,OAAA;AACjBnB,MAAA,CAAOyB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}