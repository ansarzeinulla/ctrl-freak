{"ast":null,"code":"'use client';\n\nimport { useEffect } from 'react';\nimport { getHotkeyMatcher } from './parse-hotkey.mjs';\nexport { getHotkeyHandler } from './parse-hotkey.mjs';\nfunction shouldFireEvent(event, tagsToIgnore) {\n  let triggerOnContentEditable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  if (event.target instanceof HTMLElement) {\n    if (triggerOnContentEditable) {\n      return !tagsToIgnore.includes(event.target.tagName);\n    }\n    return !event.target.isContentEditable && !tagsToIgnore.includes(event.target.tagName);\n  }\n  return true;\n}\nfunction useHotkeys(hotkeys) {\n  let tagsToIgnore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [\"INPUT\", \"TEXTAREA\", \"SELECT\"];\n  let triggerOnContentEditable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  useEffect(() => {\n    const keydownListener = event => {\n      hotkeys.forEach(_ref => {\n        let [hotkey, handler, options = {\n          preventDefault: true,\n          usePhysicalKeys: false\n        }] = _ref;\n        if (getHotkeyMatcher(hotkey, options.usePhysicalKeys)(event) && shouldFireEvent(event, tagsToIgnore, triggerOnContentEditable)) {\n          if (options.preventDefault) {\n            event.preventDefault();\n          }\n          handler(event);\n        }\n      });\n    };\n    document.documentElement.addEventListener(\"keydown\", keydownListener);\n    return () => document.documentElement.removeEventListener(\"keydown\", keydownListener);\n  }, [hotkeys]);\n}\nexport { useHotkeys };","map":{"version":3,"names":["shouldFireEvent","event","tagsToIgnore","triggerOnContentEditable","arguments","length","undefined","target","HTMLElement","includes","tagName","isContentEditable","useHotkeys","hotkeys","useEffect","keydownListener","forEach","_ref","hotkey","handler","options","preventDefault","usePhysicalKeys","getHotkeyMatcher","document","documentElement","addEventListener","removeEventListener"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/hooks/src/use-hotkeys/use-hotkeys.ts"],"sourcesContent":["import { useEffect } from 'react';\nimport { getHotkeyHandler, getHotkeyMatcher, HotkeyItemOptions } from './parse-hotkey';\n\nexport type { HotkeyItemOptions };\nexport { getHotkeyHandler };\n\nexport type HotkeyItem = [string, (event: KeyboardEvent) => void, HotkeyItemOptions?];\n\nfunction shouldFireEvent(\n  event: KeyboardEvent,\n  tagsToIgnore: string[],\n  triggerOnContentEditable = false\n) {\n  if (event.target instanceof HTMLElement) {\n    if (triggerOnContentEditable) {\n      return !tagsToIgnore.includes(event.target.tagName);\n    }\n\n    return !event.target.isContentEditable && !tagsToIgnore.includes(event.target.tagName);\n  }\n\n  return true;\n}\n\nexport function useHotkeys(\n  hotkeys: HotkeyItem[],\n  tagsToIgnore: string[] = ['INPUT', 'TEXTAREA', 'SELECT'],\n  triggerOnContentEditable = false\n) {\n  useEffect(() => {\n    const keydownListener = (event: KeyboardEvent) => {\n      hotkeys.forEach(\n        ([hotkey, handler, options = { preventDefault: true, usePhysicalKeys: false }]) => {\n          if (\n            getHotkeyMatcher(hotkey, options.usePhysicalKeys)(event) &&\n            shouldFireEvent(event, tagsToIgnore, triggerOnContentEditable)\n          ) {\n            if (options.preventDefault) {\n              event.preventDefault();\n            }\n\n            handler(event);\n          }\n        }\n      );\n    };\n\n    document.documentElement.addEventListener('keydown', keydownListener);\n    return () => document.documentElement.removeEventListener('keydown', keydownListener);\n  }, [hotkeys]);\n}\n"],"mappings":";;;;;AAQA,SAASA,gBACPC,KAAA,EACAC,YAAA,EAEA;EAAA,IADAC,wBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA2B;EAE3B,IAAIH,KAAA,CAAMM,MAAA,YAAkBC,WAAA,EAAa;IACvC,IAAIL,wBAAA,EAA0B;MAC5B,OAAO,CAACD,YAAA,CAAaO,QAAA,CAASR,KAAA,CAAMM,MAAA,CAAOG,OAAO;IACpD;IAEA,OAAO,CAACT,KAAA,CAAMM,MAAA,CAAOI,iBAAA,IAAqB,CAACT,YAAA,CAAaO,QAAA,CAASR,KAAA,CAAMM,MAAA,CAAOG,OAAO;EACvF;EAEA,OAAO;AACT;AAEO,SAASE,WACdC,OAAA,EAGA;EAAA,IAFAX,YAAA,GAAAE,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAyB,CAAC,SAAS,YAAY,QAAQ;EAAA,IACvDD,wBAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA2B;EAE3BU,SAAA,CAAU,MAAM;IACd,MAAMC,eAAA,GAAmBd,KAAA,IAAyB;MAChDY,OAAA,CAAQG,OAAA,CACNC,IAAA,IAAmF;QAAA,IAAlF,CAACC,MAAA,EAAQC,OAAA,EAASC,OAAA,GAAU;UAAEC,cAAA,EAAgB;UAAMC,eAAA,EAAiB;QAAA,CAAO,IAAAL,IAAA;QAC3E,IACEM,gBAAA,CAAiBL,MAAA,EAAQE,OAAA,CAAQE,eAAe,EAAErB,KAAK,KACvDD,eAAA,CAAgBC,KAAA,EAAOC,YAAA,EAAcC,wBAAwB,GAC7D;UACA,IAAIiB,OAAA,CAAQC,cAAA,EAAgB;YAC1BpB,KAAA,CAAMoB,cAAA,EAAe;UACvB;UAEAF,OAAA,CAAQlB,KAAK;QACf;MACF,EACF;IACF;IAEAuB,QAAA,CAASC,eAAA,CAAgBC,gBAAA,CAAiB,WAAWX,eAAe;IACpE,OAAO,MAAMS,QAAA,CAASC,eAAA,CAAgBE,mBAAA,CAAoB,WAAWZ,eAAe;EACtF,GAAG,CAACF,OAAO,CAAC;AACd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}