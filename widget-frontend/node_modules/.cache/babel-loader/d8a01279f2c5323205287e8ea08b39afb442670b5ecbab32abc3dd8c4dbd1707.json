{"ast":null,"code":"'use client';\n\nfunction memoize(func) {\n  const cache = /* @__PURE__ */new Map();\n  return (...args) => {\n    const key = JSON.stringify(args);\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    const result = func(...args);\n    cache.set(key, result);\n    return result;\n  };\n}\nexport { memoize };","map":{"version":3,"names":["memoize","func","cache","Map","args","key","JSON","stringify","has","get","result","set"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/core/utils/memoize/memoize.ts"],"sourcesContent":["export function memoize<T extends (...args: any[]) => any>(\n  func: T\n): (...args: Parameters<T>) => ReturnType<T> {\n  const cache = new Map<string, ReturnType<T>>();\n\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const key = JSON.stringify(args);\n    if (cache.has(key)) {\n      return cache.get(key) as ReturnType<T>;\n    }\n\n    const result = func(...args);\n    cache.set(key, result);\n    return result;\n  };\n}\n"],"mappings":";;AAAO,SAASA,QACdC,IAAA,EAC2C;EAC3C,MAAMC,KAAA,sBAAYC,GAAA,EAA2B;EAE7C,OAAO,IAAIC,IAAA,KAAuC;IAChD,MAAMC,GAAA,GAAMC,IAAA,CAAKC,SAAA,CAAUH,IAAI;IAC/B,IAAIF,KAAA,CAAMM,GAAA,CAAIH,GAAG,GAAG;MAClB,OAAOH,KAAA,CAAMO,GAAA,CAAIJ,GAAG;IACtB;IAEA,MAAMK,MAAA,GAAST,IAAA,CAAK,GAAGG,IAAI;IAC3BF,KAAA,CAAMS,GAAA,CAAIN,GAAA,EAAKK,MAAM;IACrB,OAAOA,MAAA;EACT;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}