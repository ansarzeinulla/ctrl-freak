{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"unstyled\", \"vars\", \"onChange\", \"value\", \"defaultValue\", \"multiple\", \"accept\", \"name\", \"form\", \"valueComponent\", \"clearable\", \"clearButtonProps\", \"readOnly\", \"capture\", \"fileInputProps\", \"rightSection\", \"size\", \"placeholder\", \"component\", \"resetRef\", \"classNames\", \"styles\", \"attributes\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { useRef, useEffect } from 'react';\nimport { useUncontrolled, useMergedRef } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'clsx';\nimport { useResolvedStylesApi } from '../../core/styles-api/use-resolved-styles-api/use-resolved-styles-api.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport { FileButton } from '../FileButton/FileButton.mjs';\nimport { Input } from '../Input/Input.mjs';\nimport '../Input/InputWrapper/InputWrapper.mjs';\nimport '../Input/InputDescription/InputDescription.mjs';\nimport '../Input/InputError/InputError.mjs';\nimport '../Input/InputLabel/InputLabel.mjs';\nimport '../Input/InputPlaceholder/InputPlaceholder.mjs';\nimport '../Input/InputClearButton/InputClearButton.mjs';\nimport '../Input/InputWrapper.context.mjs';\nimport { InputBase } from '../InputBase/InputBase.mjs';\nconst DefaultValue = _ref => {\n  let {\n    value\n  } = _ref;\n  return /* @__PURE__ */jsx(\"div\", {\n    style: {\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\",\n      whiteSpace: \"nowrap\"\n    },\n    children: Array.isArray(value) ? value.map(file => file.name).join(\", \") : value === null || value === void 0 ? void 0 : value.name\n  });\n};\nconst defaultProps = {\n  valueComponent: DefaultValue\n};\nconst _FileInput = factory((_props, ref) => {\n  const props = useProps(\"FileInput\", defaultProps, _props);\n  const {\n      unstyled,\n      vars,\n      onChange,\n      value,\n      defaultValue,\n      multiple,\n      accept,\n      name,\n      form,\n      valueComponent: ValueComponent,\n      clearable,\n      clearButtonProps,\n      readOnly,\n      capture,\n      fileInputProps,\n      rightSection,\n      size,\n      placeholder,\n      component,\n      resetRef: resetRefProp,\n      classNames,\n      styles,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const resetRef = useRef(null);\n  const {\n    resolvedClassNames,\n    resolvedStyles\n  } = useResolvedStylesApi({\n    classNames,\n    styles,\n    props\n  });\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    onChange,\n    finalValue: multiple ? [] : null\n  });\n  const hasValue = Array.isArray(_value) ? _value.length !== 0 : _value !== null;\n  const _rightSection = rightSection || (clearable && hasValue && !readOnly ? /* @__PURE__ */jsx(CloseButton, _objectSpread(_objectSpread({}, clearButtonProps), {}, {\n    variant: \"subtle\",\n    onClick: () => setValue(multiple ? [] : null),\n    size,\n    unstyled\n  })) : null);\n  useEffect(() => {\n    if (Array.isArray(_value) && _value.length === 0 || _value === null) {\n      var _resetRef$current;\n      (_resetRef$current = resetRef.current) === null || _resetRef$current === void 0 || _resetRef$current.call(resetRef);\n    }\n  }, [_value]);\n  return /* @__PURE__ */jsx(FileButton, {\n    onChange: setValue,\n    multiple,\n    accept,\n    name,\n    form,\n    resetRef: useMergedRef(resetRef, resetRefProp),\n    disabled: readOnly,\n    capture,\n    inputProps: fileInputProps,\n    children: fileButtonProps => /* @__PURE__ */jsx(InputBase, _objectSpread(_objectSpread(_objectSpread({\n      component: component || \"button\",\n      ref,\n      rightSection: _rightSection\n    }, fileButtonProps), others), {}, {\n      __staticSelector: \"FileInput\",\n      multiline: true,\n      type: \"button\",\n      pointer: true,\n      __stylesApiProps: props,\n      unstyled,\n      size,\n      classNames,\n      styles,\n      attributes,\n      children: !hasValue ? /* @__PURE__ */jsx(Input.Placeholder, {\n        __staticSelector: \"FileInput\",\n        classNames: resolvedClassNames,\n        styles: resolvedStyles,\n        attributes,\n        children: placeholder\n      }) : /* @__PURE__ */jsx(ValueComponent, {\n        value: _value\n      })\n    }))\n  });\n});\n_FileInput.classes = InputBase.classes;\n_FileInput.displayName = \"@mantine/core/FileInput\";\nconst FileInput = _FileInput;\nexport { FileInput };","map":{"version":3,"names":["DefaultValue","_ref","value","jsx","style","overflow","textOverflow","whiteSpace","children","Array","isArray","map","file","name","join","defaultProps","valueComponent","_FileInput","factory","_props","ref","props","useProps","unstyled","vars","onChange","defaultValue","multiple","accept","form","ValueComponent","clearable","clearButtonProps","readOnly","capture","fileInputProps","rightSection","size","placeholder","component","resetRef","resetRefProp","classNames","styles","attributes","others","_objectWithoutProperties","_excluded","useRef","resolvedClassNames","resolvedStyles","useResolvedStylesApi","_value","setValue","useUncontrolled","finalValue","hasValue","length","_rightSection","CloseButton","_objectSpread","variant","onClick","useEffect","_resetRef$current","current","call","FileButton","useMergedRef","disabled","inputProps","fileButtonProps","InputBase","__staticSelector","multiline","type","pointer","__stylesApiProps","Input","Placeholder","classes","displayName","FileInput"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/FileInput/FileInput.tsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport { useMergedRef, useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useResolvedStylesApi,\n} from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport { FileButton } from '../FileButton';\nimport { __BaseInputProps, __InputStylesNames, Input, InputVariant } from '../Input';\nimport { InputBase } from '../InputBase/InputBase';\n\nexport interface FileInputProps<Multiple = false>\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<FileInputFactory>,\n    ElementProps<'button', 'value' | 'defaultValue' | 'onChange' | 'placeholder'> {\n  component?: any;\n\n  /** Called when value changes */\n  onChange?: (payload: Multiple extends true ? File[] : File | null) => void;\n\n  /** Controlled component value */\n  value?: Multiple extends true ? File[] : File | null;\n\n  /** Uncontrolled component default value */\n  defaultValue?: Multiple extends true ? File[] : File | null;\n\n  /** If set, user can pick more than one file @default `false` */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, `\"image/png,image/jpeg\"` */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Value renderer. By default, displays file name. */\n  valueComponent?: React.FC<{ value: null | File | File[] }>;\n\n  /** If set, the clear button is displayed in the right section @default `false` */\n  clearable?: boolean;\n\n  /** Props passed down to the clear button */\n  clearButtonProps?: React.ComponentPropsWithoutRef<'button'>;\n\n  /** If set, the input value cannot be changed  */\n  readOnly?: boolean;\n\n  /** Specifies that, optionally, a new file should be captured, and which device should be used to capture that new media of a type defined by the accept attribute. */\n  capture?: boolean | 'user' | 'environment';\n\n  /** Props passed down to the hidden input element which is used to capture files */\n  fileInputProps?: React.ComponentPropsWithoutRef<'input'>;\n\n  /** Input placeholder */\n  placeholder?: React.ReactNode;\n\n  /** Reference of the function that should be called when value changes to null or empty array */\n  resetRef?: React.ForwardedRef<() => void>;\n}\n\nexport type FileInputFactory = Factory<{\n  props: FileInputProps;\n  ref: HTMLButtonElement;\n  stylesNames: __InputStylesNames | 'placeholder';\n  variant: InputVariant;\n}>;\n\nconst DefaultValue: FileInputProps['valueComponent'] = ({ value }) => (\n  <div style={{ overflow: 'hidden', textOverflow: 'ellipsis', whiteSpace: 'nowrap' }}>\n    {Array.isArray(value) ? value.map((file) => file.name).join(', ') : value?.name}\n  </div>\n);\n\nconst defaultProps = {\n  valueComponent: DefaultValue,\n} satisfies Partial<FileInputProps>;\n\nconst _FileInput = factory<FileInputFactory>((_props, ref) => {\n  const props = useProps('FileInput', defaultProps, _props);\n  const {\n    unstyled,\n    vars,\n    onChange,\n    value,\n    defaultValue,\n    multiple,\n    accept,\n    name,\n    form,\n    valueComponent: ValueComponent,\n    clearable,\n    clearButtonProps,\n    readOnly,\n    capture,\n    fileInputProps,\n    rightSection,\n    size,\n    placeholder,\n    component,\n    resetRef: resetRefProp,\n    classNames,\n    styles,\n    attributes,\n    ...others\n  } = props;\n\n  const resetRef = useRef<() => void>(null);\n  const { resolvedClassNames, resolvedStyles } = useResolvedStylesApi<FileInputFactory>({\n    classNames,\n    styles,\n    props,\n  });\n\n  const [_value, setValue] = useUncontrolled<null | File | File[]>({\n    value,\n    defaultValue,\n    onChange: onChange as any,\n    finalValue: multiple ? [] : null,\n  });\n\n  const hasValue = Array.isArray(_value) ? _value.length !== 0 : _value !== null;\n\n  const _rightSection =\n    rightSection ||\n    (clearable && hasValue && !readOnly ? (\n      <CloseButton\n        {...clearButtonProps}\n        variant=\"subtle\"\n        onClick={() => setValue(multiple ? [] : null)}\n        size={size}\n        unstyled={unstyled}\n      />\n    ) : null);\n\n  useEffect(() => {\n    if ((Array.isArray(_value) && _value.length === 0) || _value === null) {\n      resetRef.current?.();\n    }\n  }, [_value]);\n\n  return (\n    <FileButton\n      onChange={setValue}\n      multiple={multiple}\n      accept={accept}\n      name={name}\n      form={form}\n      resetRef={useMergedRef(resetRef, resetRefProp)}\n      disabled={readOnly}\n      capture={capture}\n      inputProps={fileInputProps}\n    >\n      {(fileButtonProps) => (\n        <InputBase\n          component={component || 'button'}\n          ref={ref}\n          rightSection={_rightSection}\n          {...fileButtonProps}\n          {...others}\n          __staticSelector=\"FileInput\"\n          multiline\n          type=\"button\"\n          pointer\n          __stylesApiProps={props}\n          unstyled={unstyled}\n          size={size}\n          classNames={classNames}\n          styles={styles}\n          attributes={attributes}\n        >\n          {!hasValue ? (\n            <Input.Placeholder\n              __staticSelector=\"FileInput\"\n              classNames={resolvedClassNames}\n              styles={resolvedStyles}\n              attributes={attributes}\n            >\n              {placeholder}\n            </Input.Placeholder>\n          ) : (\n            <ValueComponent value={_value} />\n          )}\n        </InputBase>\n      )}\n    </FileButton>\n  );\n});\n\n_FileInput.classes = InputBase.classes;\n_FileInput.displayName = '@mantine/core/FileInput';\n\ntype FileInputComponent = (<Multiple extends boolean = false>(\n  props: FileInputProps<Multiple> & {\n    ref?: React.ForwardedRef<HTMLButtonElement>;\n  }\n) => React.JSX.Element) & { extend: typeof _FileInput.extend };\n\nexport const FileInput: FileInputComponent = _FileInput as any;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}