{"ast":null,"code":"'use client';\n\nimport { useRef, useCallback, useEffect } from 'react';\nimport { useCallbackRef } from '../utils/use-callback-ref/use-callback-ref.mjs';\nfunction useThrottledCallbackWithClearTimeout(callback, wait) {\n  const handleCallback = useCallbackRef(callback);\n  const latestInArgsRef = useRef(null);\n  const latestOutArgsRef = useRef(null);\n  const active = useRef(true);\n  const waitRef = useRef(wait);\n  const timeoutRef = useRef(-1);\n  const clearTimeout = () => window.clearTimeout(timeoutRef.current);\n  const callThrottledCallback = useCallback((...args) => {\n    handleCallback(...args);\n    latestInArgsRef.current = args;\n    latestOutArgsRef.current = args;\n    active.current = false;\n  }, [handleCallback]);\n  const timerCallback = useCallback(() => {\n    if (latestInArgsRef.current && latestInArgsRef.current !== latestOutArgsRef.current) {\n      callThrottledCallback(...latestInArgsRef.current);\n      timeoutRef.current = window.setTimeout(timerCallback, waitRef.current);\n    } else {\n      active.current = true;\n    }\n  }, [callThrottledCallback]);\n  const throttled = useCallback((...args) => {\n    if (active.current) {\n      callThrottledCallback(...args);\n      timeoutRef.current = window.setTimeout(timerCallback, waitRef.current);\n    } else {\n      latestInArgsRef.current = args;\n    }\n  }, [callThrottledCallback, timerCallback]);\n  useEffect(() => {\n    waitRef.current = wait;\n  }, [wait]);\n  return [throttled, clearTimeout];\n}\nfunction useThrottledCallback(callback, wait) {\n  return useThrottledCallbackWithClearTimeout(callback, wait)[0];\n}\nexport { useThrottledCallback, useThrottledCallbackWithClearTimeout };","map":{"version":3,"names":["useThrottledCallbackWithClearTimeout","callback","wait","handleCallback","useCallbackRef","latestInArgsRef","useRef","latestOutArgsRef","active","waitRef","timeoutRef","clearTimeout","window","current","callThrottledCallback","useCallback","args","timerCallback","setTimeout","throttled","useEffect","useThrottledCallback"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-throttled-callback/use-throttled-callback.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport { useCallbackRef } from '../utils';\n\nexport function useThrottledCallbackWithClearTimeout<T extends (...args: any[]) => any>(\n  callback: T,\n  wait: number\n) {\n  const handleCallback = useCallbackRef(callback);\n  const latestInArgsRef = useRef<Parameters<T>>(null);\n  const latestOutArgsRef = useRef<Parameters<T>>(null);\n  const active = useRef(true);\n  const waitRef = useRef(wait);\n  const timeoutRef = useRef<number>(-1);\n\n  const clearTimeout = () => window.clearTimeout(timeoutRef.current);\n\n  const callThrottledCallback = useCallback(\n    (...args: Parameters<T>) => {\n      handleCallback(...args);\n      latestInArgsRef.current = args;\n      latestOutArgsRef.current = args;\n      active.current = false;\n    },\n    [handleCallback]\n  );\n\n  const timerCallback = useCallback(() => {\n    if (latestInArgsRef.current && latestInArgsRef.current !== latestOutArgsRef.current) {\n      callThrottledCallback(...latestInArgsRef.current);\n\n      timeoutRef.current = window.setTimeout(timerCallback, waitRef.current);\n    } else {\n      active.current = true;\n    }\n  }, [callThrottledCallback]);\n\n  const throttled = useCallback(\n    (...args: Parameters<T>) => {\n      if (active.current) {\n        callThrottledCallback(...args);\n        timeoutRef.current = window.setTimeout(timerCallback, waitRef.current);\n      } else {\n        latestInArgsRef.current = args;\n      }\n    },\n    [callThrottledCallback, timerCallback]\n  );\n\n  useEffect(() => {\n    waitRef.current = wait;\n  }, [wait]);\n\n  return [throttled, clearTimeout] as const;\n}\n\nexport function useThrottledCallback<T extends (...args: any[]) => any>(callback: T, wait: number) {\n  return useThrottledCallbackWithClearTimeout(callback, wait)[0];\n}\n"],"mappings":";;;;AAGO,SAASA,qCACdC,QAAA,EACAC,IAAA,EACA;EACA,MAAMC,cAAA,GAAiBC,cAAA,CAAeH,QAAQ;EAC9C,MAAMI,eAAA,GAAkBC,MAAA,CAAsB,IAAI;EAClD,MAAMC,gBAAA,GAAmBD,MAAA,CAAsB,IAAI;EACnD,MAAME,MAAA,GAASF,MAAA,CAAO,IAAI;EAC1B,MAAMG,OAAA,GAAUH,MAAA,CAAOJ,IAAI;EAC3B,MAAMQ,UAAA,GAAaJ,MAAA,CAAe,EAAE;EAEpC,MAAMK,YAAA,GAAeA,CAAA,KAAMC,MAAA,CAAOD,YAAA,CAAaD,UAAA,CAAWG,OAAO;EAEjE,MAAMC,qBAAA,GAAwBC,WAAA,CAC5B,IAAIC,IAAA,KAAwB;IAC1Bb,cAAA,CAAe,GAAGa,IAAI;IACtBX,eAAA,CAAgBQ,OAAA,GAAUG,IAAA;IAC1BT,gBAAA,CAAiBM,OAAA,GAAUG,IAAA;IAC3BR,MAAA,CAAOK,OAAA,GAAU;EACnB,GACA,CAACV,cAAc,EACjB;EAEA,MAAMc,aAAA,GAAgBF,WAAA,CAAY,MAAM;IACtC,IAAIV,eAAA,CAAgBQ,OAAA,IAAWR,eAAA,CAAgBQ,OAAA,KAAYN,gBAAA,CAAiBM,OAAA,EAAS;MACnFC,qBAAA,CAAsB,GAAGT,eAAA,CAAgBQ,OAAO;MAEhDH,UAAA,CAAWG,OAAA,GAAUD,MAAA,CAAOM,UAAA,CAAWD,aAAA,EAAeR,OAAA,CAAQI,OAAO;IACvE,OAAO;MACLL,MAAA,CAAOK,OAAA,GAAU;IACnB;EACF,GAAG,CAACC,qBAAqB,CAAC;EAE1B,MAAMK,SAAA,GAAYJ,WAAA,CAChB,IAAIC,IAAA,KAAwB;IAC1B,IAAIR,MAAA,CAAOK,OAAA,EAAS;MAClBC,qBAAA,CAAsB,GAAGE,IAAI;MAC7BN,UAAA,CAAWG,OAAA,GAAUD,MAAA,CAAOM,UAAA,CAAWD,aAAA,EAAeR,OAAA,CAAQI,OAAO;IACvE,OAAO;MACLR,eAAA,CAAgBQ,OAAA,GAAUG,IAAA;IAC5B;EACF,GACA,CAACF,qBAAA,EAAuBG,aAAa,EACvC;EAEAG,SAAA,CAAU,MAAM;IACdX,OAAA,CAAQI,OAAA,GAAUX,IAAA;EACpB,GAAG,CAACA,IAAI,CAAC;EAET,OAAO,CAACiB,SAAA,EAAWR,YAAY;AACjC;AAEO,SAASU,qBAAwDpB,QAAA,EAAaC,IAAA,EAAc;EACjG,OAAOF,oCAAA,CAAqCC,QAAA,EAAUC,IAAI,EAAE,CAAC;AAC/D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}