{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { useRandomClassName } from '../../core/Box/use-random-classname/use-random-classname.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { SimpleGridContainerVariables, SimpleGridMediaVariables } from './SimpleGridVariables.mjs';\nimport classes from './SimpleGrid.module.css.mjs';\nconst defaultProps = {\n  cols: 1,\n  spacing: \"md\",\n  type: \"media\"\n};\nconst SimpleGrid = factory((_props, ref) => {\n  const props = useProps(\"SimpleGrid\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    cols,\n    verticalSpacing,\n    spacing,\n    type,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"SimpleGrid\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars\n  });\n  const responsiveClassName = useRandomClassName();\n  if (type === \"container\") {\n    return /* @__PURE__ */jsxs(Fragment, {\n      children: [/* @__PURE__ */jsx(SimpleGridContainerVariables, {\n        ...props,\n        selector: `.${responsiveClassName}`\n      }), /* @__PURE__ */jsx(\"div\", {\n        ...getStyles(\"container\"),\n        children: /* @__PURE__ */jsx(Box, {\n          ref,\n          ...getStyles(\"root\", {\n            className: responsiveClassName\n          }),\n          ...others\n        })\n      })]\n    });\n  }\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(SimpleGridMediaVariables, {\n      ...props,\n      selector: `.${responsiveClassName}`\n    }), /* @__PURE__ */jsx(Box, {\n      ref,\n      ...getStyles(\"root\", {\n        className: responsiveClassName\n      }),\n      ...others\n    })]\n  });\n});\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = \"@mantine/core/SimpleGrid\";\nexport { SimpleGrid };","map":{"version":3,"names":["defaultProps","cols","spacing","type","SimpleGrid","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","verticalSpacing","attributes","others","getStyles","useStyles","name","classes","responsiveClassName","useRandomClassName","jsxs","Fragment","children","jsx","SimpleGridContainerVariables","selector","Box","SimpleGridMediaVariables","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/SimpleGrid/SimpleGrid.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  ElementProps,\n  Factory,\n  factory,\n  MantineSpacing,\n  StyleProp,\n  StylesApiProps,\n  useProps,\n  useRandomClassName,\n  useStyles,\n} from '../../core';\nimport { SimpleGridContainerVariables, SimpleGridMediaVariables } from './SimpleGridVariables';\nimport classes from './SimpleGrid.module.css';\n\nexport type SimpleGridStylesNames = 'root' | 'container';\n\nexport interface SimpleGridProps\n  extends BoxProps,\n    StylesApiProps<SimpleGridFactory>,\n    ElementProps<'div'> {\n  /** Number of columns @default `1` */\n  cols?: StyleProp<number>;\n\n  /** Spacing between columns @default `'md'` */\n  spacing?: StyleProp<MantineSpacing>;\n\n  /** Spacing between rows @default `'md'` */\n  verticalSpacing?: StyleProp<MantineSpacing>;\n\n  /** Determines typeof of queries that are used for responsive styles @default `'media'` */\n  type?: 'media' | 'container';\n}\n\nexport type SimpleGridFactory = Factory<{\n  props: SimpleGridProps;\n  ref: HTMLDivElement;\n  stylesNames: SimpleGridStylesNames;\n}>;\n\nconst defaultProps = {\n  cols: 1,\n  spacing: 'md',\n  type: 'media',\n} satisfies Partial<SimpleGridProps>;\n\nexport const SimpleGrid = factory<SimpleGridFactory>((_props, ref) => {\n  const props = useProps('SimpleGrid', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    cols,\n    verticalSpacing,\n    spacing,\n    type,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SimpleGridFactory>({\n    name: 'SimpleGrid',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n  });\n\n  const responsiveClassName = useRandomClassName();\n\n  if (type === 'container') {\n    return (\n      <>\n        <SimpleGridContainerVariables {...props} selector={`.${responsiveClassName}`} />\n        <div {...getStyles('container')}>\n          <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others} />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <SimpleGridMediaVariables {...props} selector={`.${responsiveClassName}`} />\n      <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others} />\n    </>\n  );\n});\n\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = '@mantine/core/SimpleGrid';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAyCA,MAAMA,YAAA,GAAe;EACnBC,IAAA,EAAM;EACNC,OAAA,EAAS;EACTC,IAAA,EAAM;AACR;AAEO,MAAMC,UAAA,GAAaC,OAAA,CAA2B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACpE,MAAMC,KAAA,GAAQC,QAAA,CAAS,cAAcT,YAAA,EAAcM,MAAM;EACzD,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAd,IAAA;IACAe,eAAA;IACAd,OAAA;IACAC,IAAA;IACAc,UAAA;IACA,GAAGC;EAAA,CACL,GAAIV,KAAA;EAEJ,MAAMW,SAAA,GAAYC,SAAA,CAA6B;IAC7CC,IAAA,EAAM;IACNC,OAAA;IACAd,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAG,UAAA;IACAF;EAAA,CACD;EAED,MAAMQ,mBAAA,GAAsBC,kBAAA,EAAmB;EAE/C,IAAIrB,IAAA,KAAS,aAAa;IACxB,sBACEsB,IAAA,CAAAC,QAAA;MACEC,QAAA,kBAAAC,GAAA,CAACC,4BAAA;QAA8B,GAAGrB,KAAA;QAAOsB,QAAA,EAAU,IAAIP,mBAAmB;MAAA,CAAI,kBAAAK,GAAA,CAC7E;QAAK,GAAGT,SAAA,CAAU,WAAW;QAC5BQ,QAAA,iBAAAC,GAAA,CAACG,GAAA;UAAIxB,GAAA;UAAW,GAAGY,SAAA,CAAU,QAAQ;YAAER,SAAA,EAAWY;UAAA,CAAqB;UAAI,GAAGL;QAAA,CAAQ;MAAA,CACxF;IAAA,CACF;EAEJ;EAEA,sBACEO,IAAA,CAAAC,QAAA;IACEC,QAAA,kBAAAC,GAAA,CAACI,wBAAA;MAA0B,GAAGxB,KAAA;MAAOsB,QAAA,EAAU,IAAIP,mBAAmB;IAAA,CAAI,kBAC1EK,GAAA,CAACG,GAAA;MAAIxB,GAAA;MAAW,GAAGY,SAAA,CAAU,QAAQ;QAAER,SAAA,EAAWY;MAAA,CAAqB;MAAI,GAAGL;IAAA,CAAQ;EAAA,CACxF;AAEJ,CAAC;AAEDd,UAAA,CAAWkB,OAAA,GAAUA,OAAA;AACrBlB,UAAA,CAAW6B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}