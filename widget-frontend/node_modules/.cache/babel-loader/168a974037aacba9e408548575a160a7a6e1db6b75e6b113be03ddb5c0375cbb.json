{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useUncontrolled } from '@mantine/hooks';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InputsGroupFieldset } from '../../../utils/InputsGroupFieldset/InputsGroupFieldset.mjs';\nimport { Input } from '../../Input/Input.mjs';\nimport '../../Input/InputWrapper/InputWrapper.mjs';\nimport '../../Input/InputDescription/InputDescription.mjs';\nimport '../../Input/InputError/InputError.mjs';\nimport '../../Input/InputLabel/InputLabel.mjs';\nimport '../../Input/InputPlaceholder/InputPlaceholder.mjs';\nimport '../../Input/InputClearButton/InputClearButton.mjs';\nimport '../../Input/InputWrapper.context.mjs';\nimport { CheckboxGroupProvider } from '../CheckboxGroup.context.mjs';\nconst CheckboxGroup = factory((props, ref) => {\n  const {\n    value,\n    defaultValue,\n    onChange,\n    size,\n    wrapperProps,\n    children,\n    readOnly,\n    ...others\n  } = useProps(\"CheckboxGroup\", null, props);\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange\n  });\n  const handleChange = event => {\n    const itemValue = typeof event === \"string\" ? event : event.currentTarget.value;\n    !readOnly && setValue(_value.includes(itemValue) ? _value.filter(item => item !== itemValue) : [..._value, itemValue]);\n  };\n  return /* @__PURE__ */jsx(CheckboxGroupProvider, {\n    value: {\n      value: _value,\n      onChange: handleChange,\n      size\n    },\n    children: /* @__PURE__ */jsx(Input.Wrapper, {\n      size,\n      ref,\n      ...wrapperProps,\n      ...others,\n      labelElement: \"div\",\n      __staticSelector: \"CheckboxGroup\",\n      children: /* @__PURE__ */jsx(InputsGroupFieldset, {\n        role: \"group\",\n        children\n      })\n    })\n  });\n});\nCheckboxGroup.classes = Input.Wrapper.classes;\nCheckboxGroup.displayName = \"@mantine/core/CheckboxGroup\";\nexport { CheckboxGroup };","map":{"version":3,"names":["CheckboxGroup","factory","props","ref","value","defaultValue","onChange","size","wrapperProps","children","readOnly","others","useProps","_value","setValue","useUncontrolled","finalValue","handleChange","event","itemValue","currentTarget","includes","filter","item","jsx","CheckboxGroupProvider","Input","Wrapper","labelElement","__staticSelector","InputsGroupFieldset","role","classes","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Checkbox/CheckboxGroup/CheckboxGroup.tsx"],"sourcesContent":["import { useUncontrolled } from '@mantine/hooks';\nimport { DataAttributes, factory, Factory, MantineSize, useProps } from '../../../core';\nimport { InputsGroupFieldset } from '../../../utils/InputsGroupFieldset';\nimport { Input, InputWrapperProps, InputWrapperStylesNames } from '../../Input';\nimport { CheckboxGroupProvider } from '../CheckboxGroup.context';\n\nexport type CheckboxGroupStylesNames = InputWrapperStylesNames;\n\nexport interface CheckboxGroupProps extends Omit<InputWrapperProps, 'onChange'> {\n  /** `Checkbox` components and any other elements */\n  children: React.ReactNode;\n\n  /** Controlled component value */\n  value?: string[];\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string[];\n\n  /** Called with an array of selected checkboxes values when value changes */\n  onChange?: (value: string[]) => void;\n\n  /** Props passed down to the root element (`Input.Wrapper` component) */\n  wrapperProps?: React.ComponentPropsWithoutRef<'div'> & DataAttributes;\n\n  /** Controls size of the `Input.Wrapper` @default `'sm'` */\n  size?: MantineSize | (string & {});\n\n  /** If set, value cannot be changed */\n  readOnly?: boolean;\n}\n\nexport type CheckboxGroupFactory = Factory<{\n  props: CheckboxGroupProps;\n  ref: HTMLDivElement;\n  stylesNames: CheckboxGroupStylesNames;\n}>;\n\nexport const CheckboxGroup = factory<CheckboxGroupFactory>((props, ref) => {\n  const { value, defaultValue, onChange, size, wrapperProps, children, readOnly, ...others } =\n    useProps('CheckboxGroup', null, props);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: [],\n    onChange,\n  });\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement> | string) => {\n    const itemValue = typeof event === 'string' ? event : event.currentTarget.value;\n    !readOnly &&\n      setValue(\n        _value.includes(itemValue)\n          ? _value.filter((item) => item !== itemValue)\n          : [..._value, itemValue]\n      );\n  };\n\n  return (\n    <CheckboxGroupProvider value={{ value: _value, onChange: handleChange, size }}>\n      <Input.Wrapper\n        size={size}\n        ref={ref}\n        {...wrapperProps}\n        {...others}\n        labelElement=\"div\"\n        __staticSelector=\"CheckboxGroup\"\n      >\n        <InputsGroupFieldset role=\"group\">{children}</InputsGroupFieldset>\n      </Input.Wrapper>\n    </CheckboxGroupProvider>\n  );\n});\n\nCheckboxGroup.classes = Input.Wrapper.classes;\nCheckboxGroup.displayName = '@mantine/core/CheckboxGroup';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAqCO,MAAMA,aAAA,GAAgBC,OAAA,CAA8B,CAACC,KAAA,EAAOC,GAAA,KAAQ;EACzE,MAAM;IAAEC,KAAA;IAAOC,YAAA;IAAcC,QAAA;IAAUC,IAAA;IAAMC,YAAA;IAAcC,QAAA;IAAUC,QAAA;IAAU,GAAGC;EAAA,CAAO,GACvFC,QAAA,CAAS,iBAAiB,MAAMV,KAAK;EAEvC,MAAM,CAACW,MAAA,EAAQC,QAAQ,IAAIC,eAAA,CAAgB;IACzCX,KAAA;IACAC,YAAA;IACAW,UAAA,EAAY,EAAC;IACbV;EAAA,CACD;EAED,MAAMW,YAAA,GAAgBC,KAAA,IAAwD;IAC5E,MAAMC,SAAA,GAAY,OAAOD,KAAA,KAAU,WAAWA,KAAA,GAAQA,KAAA,CAAME,aAAA,CAAchB,KAAA;IAC1E,CAACM,QAAA,IACCI,QAAA,CACED,MAAA,CAAOQ,QAAA,CAASF,SAAS,IACrBN,MAAA,CAAOS,MAAA,CAAQC,IAAA,IAASA,IAAA,KAASJ,SAAS,IAC1C,CAAC,GAAGN,MAAA,EAAQM,SAAS,EAC3B;EACJ;EAEA,sBACEK,GAAA,CAACC,qBAAA;IAAsBrB,KAAA,EAAO;MAAEA,KAAA,EAAOS,MAAA;MAAQP,QAAA,EAAUW,YAAA;MAAcV;IAAA,CAAK;IAC1EE,QAAA,iBAAAe,GAAA,CAACE,KAAA,CAAMC,OAAA,EAAN;MACCpB,IAAA;MACAJ,GAAA;MACC,GAAGK,YAAA;MACH,GAAGG,MAAA;MACJiB,YAAA,EAAa;MACbC,gBAAA,EAAiB;MAEjBpB,QAAA,iBAAAe,GAAA,CAACM,mBAAA;QAAoBC,IAAA,EAAK;QAAStB;MAAA,CAAS;IAAA;EAC9C,CACF;AAEJ,CAAC;AAEDT,aAAA,CAAcgC,OAAA,GAAUN,KAAA,CAAMC,OAAA,CAAQK,OAAA;AACtChC,aAAA,CAAciC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}