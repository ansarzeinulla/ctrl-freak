{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"forceMount\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useEffect } from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { ScrollAreaScrollbarAuto } from './ScrollAreaScrollbarAuto.mjs';\nimport { ScrollAreaScrollbarHover } from './ScrollAreaScrollbarHover.mjs';\nimport { ScrollAreaScrollbarScroll } from './ScrollAreaScrollbarScroll.mjs';\nimport { ScrollAreaScrollbarVisible } from './ScrollAreaScrollbarVisible.mjs';\nconst ScrollAreaScrollbar = forwardRef((props, forwardedRef) => {\n  const {\n      forceMount\n    } = props,\n    scrollbarProps = _objectWithoutProperties(props, _excluded);\n  const context = useScrollAreaContext();\n  const {\n    onScrollbarXEnabledChange,\n    onScrollbarYEnabledChange\n  } = context;\n  const isHorizontal = props.orientation === \"horizontal\";\n  useEffect(() => {\n    isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n    return () => {\n      isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n    };\n  }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n  return context.type === \"hover\" ? /* @__PURE__ */jsx(ScrollAreaScrollbarHover, _objectSpread(_objectSpread({}, scrollbarProps), {}, {\n    ref: forwardedRef,\n    forceMount\n  })) : context.type === \"scroll\" ? /* @__PURE__ */jsx(ScrollAreaScrollbarScroll, _objectSpread(_objectSpread({}, scrollbarProps), {}, {\n    ref: forwardedRef,\n    forceMount\n  })) : context.type === \"auto\" ? /* @__PURE__ */jsx(ScrollAreaScrollbarAuto, _objectSpread(_objectSpread({}, scrollbarProps), {}, {\n    ref: forwardedRef,\n    forceMount\n  })) : context.type === \"always\" ? /* @__PURE__ */jsx(ScrollAreaScrollbarVisible, _objectSpread(_objectSpread({}, scrollbarProps), {}, {\n    ref: forwardedRef\n  })) : null;\n});\nScrollAreaScrollbar.displayName = \"@mantine/core/ScrollAreaScrollbar\";\nexport { ScrollAreaScrollbar };","map":{"version":3,"names":["ScrollAreaScrollbar","forwardRef","props","forwardedRef","forceMount","scrollbarProps","_objectWithoutProperties","_excluded","context","useScrollAreaContext","onScrollbarXEnabledChange","onScrollbarYEnabledChange","isHorizontal","orientation","useEffect","type","jsx","ScrollAreaScrollbarHover","_objectSpread","ref","ScrollAreaScrollbarScroll","ScrollAreaScrollbarAuto","ScrollAreaScrollbarVisible","displayName"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/ScrollArea/ScrollAreaScrollbar/ScrollAreaScrollbar.tsx"],"sourcesContent":["import { forwardRef, useEffect } from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { ScrollAreaScrollbarAuto } from './ScrollAreaScrollbarAuto';\nimport { ScrollAreaScrollbarHover } from './ScrollAreaScrollbarHover';\nimport { ScrollAreaScrollbarScroll } from './ScrollAreaScrollbarScroll';\nimport {\n  ScrollAreaScrollbarVisible,\n  ScrollAreaScrollbarVisibleProps,\n} from './ScrollAreaScrollbarVisible';\n\ninterface ScrollAreaScrollbarProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaScrollbar = forwardRef<HTMLDivElement, ScrollAreaScrollbarProps>(\n  (props, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext();\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === 'horizontal';\n\n    useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n\n    return context.type === 'hover' ? (\n      <ScrollAreaScrollbarHover {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'scroll' ? (\n      <ScrollAreaScrollbarScroll {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'auto' ? (\n      <ScrollAreaScrollbarAuto {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'always' ? (\n      <ScrollAreaScrollbarVisible {...scrollbarProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nScrollAreaScrollbar.displayName = '@mantine/core/ScrollAreaScrollbar';\n"],"mappings":";;;;;;;;;;;;AAcO,MAAMA,mBAAA,GAAsBC,UAAA,CACjC,CAACC,KAAA,EAAOC,YAAA,KAAiB;EACvB,MAAM;MAAEC;IAAe,CAAe,GAAIF,KAAA;IAAnBG,cAAA,GAAAC,wBAAA,CAAmBJ,KAAA,EAAAK,SAAA;EAC1C,MAAMC,OAAA,GAAUC,oBAAA,EAAqB;EACrC,MAAM;IAAEC,yBAAA;IAA2BC;EAAA,CAA0B,GAAIH,OAAA;EACjE,MAAMI,YAAA,GAAeV,KAAA,CAAMW,WAAA,KAAgB;EAE3CC,SAAA,CAAU,MAAM;IACdF,YAAA,GAAeF,yBAAA,CAA0B,IAAI,IAAIC,yBAAA,CAA0B,IAAI;IAC/E,OAAO,MAAM;MACXC,YAAA,GAAeF,yBAAA,CAA0B,KAAK,IAAIC,yBAAA,CAA0B,KAAK;IACnF;EACF,GAAG,CAACC,YAAA,EAAcF,yBAAA,EAA2BC,yBAAyB,CAAC;EAEvE,OAAOH,OAAA,CAAQO,IAAA,KAAS,yBAAAC,GAAA,CACrBC,wBAAA,EAAAC,aAAA,CAAAA,aAAA,KAA6Bb,cAAA;IAAgBc,GAAA,EAAKhB,YAAA;IAAcC;EAAA,EAAwB,IACvFI,OAAA,CAAQO,IAAA,KAAS,0BACnBC,GAAA,CAACI,yBAAA,EAAAF,aAAA,CAAAA,aAAA,KAA8Bb,cAAA;IAAgBc,GAAA,EAAKhB,YAAA;IAAcC;EAAA,EAAwB,IACxFI,OAAA,CAAQO,IAAA,KAAS,wBACnBC,GAAA,CAACK,uBAAA,EAAAH,aAAA,CAAAA,aAAA,KAA4Bb,cAAA;IAAgBc,GAAA,EAAKhB,YAAA;IAAcC;EAAA,EAAwB,IACtFI,OAAA,CAAQO,IAAA,KAAS,0BACnBC,GAAA,CAACM,0BAAA,EAAAJ,aAAA,CAAAA,aAAA,KAA+Bb,cAAA;IAAgBc,GAAA,EAAKhB;EAAA,EAAc,IACjE;AACN,CACF;AAEAH,mBAAA,CAAoBuB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}