{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useState, useCallback, useEffect } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event.mjs';\nfunction getConnection() {\n  if (typeof navigator === \"undefined\") {\n    return {};\n  }\n  const _navigator = navigator;\n  const connection = _navigator.connection || _navigator.mozConnection || _navigator.webkitConnection;\n  if (!connection) {\n    return {};\n  }\n  return {\n    downlink: connection === null || connection === void 0 ? void 0 : connection.downlink,\n    downlinkMax: connection === null || connection === void 0 ? void 0 : connection.downlinkMax,\n    effectiveType: connection === null || connection === void 0 ? void 0 : connection.effectiveType,\n    rtt: connection === null || connection === void 0 ? void 0 : connection.rtt,\n    saveData: connection === null || connection === void 0 ? void 0 : connection.saveData,\n    type: connection === null || connection === void 0 ? void 0 : connection.type\n  };\n}\nfunction useNetwork() {\n  const [status, setStatus] = useState({\n    online: true\n  });\n  const handleConnectionChange = useCallback(() => setStatus(current => _objectSpread(_objectSpread({}, current), getConnection())), []);\n  useWindowEvent(\"online\", () => setStatus(_objectSpread({\n    online: true\n  }, getConnection())));\n  useWindowEvent(\"offline\", () => setStatus(_objectSpread({\n    online: false\n  }, getConnection())));\n  useEffect(() => {\n    const _navigator = navigator;\n    if (_navigator.connection) {\n      setStatus(_objectSpread({\n        online: _navigator.onLine\n      }, getConnection()));\n      _navigator.connection.addEventListener(\"change\", handleConnectionChange);\n      return () => _navigator.connection.removeEventListener(\"change\", handleConnectionChange);\n    }\n    if (typeof _navigator.onLine === \"boolean\") {\n      setStatus(current => _objectSpread(_objectSpread({}, current), {}, {\n        online: _navigator.onLine\n      }));\n    }\n    return void 0;\n  }, []);\n  return status;\n}\nexport { useNetwork };","map":{"version":3,"names":["getConnection","navigator","_navigator","connection","mozConnection","webkitConnection","downlink","downlinkMax","effectiveType","rtt","saveData","type","useNetwork","status","setStatus","useState","online","handleConnectionChange","useCallback","current","_objectSpread","useWindowEvent","useEffect","onLine","addEventListener","removeEventListener"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-network/use-network.ts"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\nimport { useWindowEvent } from '../use-window-event/use-window-event';\n\nexport interface UserNetworkReturnValue {\n  online: boolean;\n  downlink?: number;\n  downlinkMax?: number;\n  effectiveType?: 'slow-2g' | '2g' | '3g' | '4g';\n  rtt?: number;\n  saveData?: boolean;\n  type?: 'bluetooth' | 'cellular' | 'ethernet' | 'wifi' | 'wimax' | 'none' | 'other' | 'unknown';\n}\n\nfunction getConnection(): Omit<UserNetworkReturnValue, 'online'> {\n  if (typeof navigator === 'undefined') {\n    return {};\n  }\n\n  const _navigator = navigator as any;\n  const connection: any =\n    _navigator.connection || _navigator.mozConnection || _navigator.webkitConnection;\n\n  if (!connection) {\n    return {};\n  }\n\n  return {\n    downlink: connection?.downlink,\n    downlinkMax: connection?.downlinkMax,\n    effectiveType: connection?.effectiveType,\n    rtt: connection?.rtt,\n    saveData: connection?.saveData,\n    type: connection?.type,\n  };\n}\n\nexport function useNetwork(): UserNetworkReturnValue {\n  const [status, setStatus] = useState<UserNetworkReturnValue>({ online: true });\n\n  const handleConnectionChange = useCallback(\n    () => setStatus((current) => ({ ...current, ...getConnection() })),\n    []\n  );\n\n  useWindowEvent('online', () => setStatus({ online: true, ...getConnection() }));\n  useWindowEvent('offline', () => setStatus({ online: false, ...getConnection() }));\n\n  useEffect(() => {\n    const _navigator = navigator as any;\n\n    if (_navigator.connection) {\n      setStatus({ online: _navigator.onLine, ...getConnection() });\n      _navigator.connection.addEventListener('change', handleConnectionChange);\n      return () => _navigator.connection.removeEventListener('change', handleConnectionChange);\n    }\n\n    if (typeof _navigator.onLine === 'boolean') {\n      // Required for Firefox and other browsers that don't support navigator.connection\n      setStatus((current) => ({ ...current, online: _navigator.onLine }));\n    }\n\n    return undefined;\n  }, []);\n\n  return status;\n}\n"],"mappings":";;;;;AAaA,SAASA,cAAA,EAAwD;EAC/D,IAAI,OAAOC,SAAA,KAAc,aAAa;IACpC,OAAO,EAAC;EACV;EAEA,MAAMC,UAAA,GAAaD,SAAA;EACnB,MAAME,UAAA,GACJD,UAAA,CAAWC,UAAA,IAAcD,UAAA,CAAWE,aAAA,IAAiBF,UAAA,CAAWG,gBAAA;EAElE,IAAI,CAACF,UAAA,EAAY;IACf,OAAO,EAAC;EACV;EAEA,OAAO;IACLG,QAAA,EAAUH,UAAA,aAAAA,UAAA,uBAAAA,UAAA,CAAYG,QAAA;IACtBC,WAAA,EAAaJ,UAAA,aAAAA,UAAA,uBAAAA,UAAA,CAAYI,WAAA;IACzBC,aAAA,EAAeL,UAAA,aAAAA,UAAA,uBAAAA,UAAA,CAAYK,aAAA;IAC3BC,GAAA,EAAKN,UAAA,aAAAA,UAAA,uBAAAA,UAAA,CAAYM,GAAA;IACjBC,QAAA,EAAUP,UAAA,aAAAA,UAAA,uBAAAA,UAAA,CAAYO,QAAA;IACtBC,IAAA,EAAMR,UAAA,aAAAA,UAAA,uBAAAA,UAAA,CAAYQ;EAAA,CACpB;AACF;AAEO,SAASC,WAAA,EAAqC;EACnD,MAAM,CAACC,MAAA,EAAQC,SAAS,IAAIC,QAAA,CAAiC;IAAEC,MAAA,EAAQ;EAAA,CAAM;EAE7E,MAAMC,sBAAA,GAAyBC,WAAA,CAC7B,MAAMJ,SAAA,CAAWK,OAAA,IAAAC,aAAA,CAAAA,aAAA,KAAkBD,OAAA,GAAYnB,aAAA,EAAc,CAAI,GACjE,EAAC,CACH;EAEAqB,cAAA,CAAe,UAAU,MAAMP,SAAA,CAAAM,aAAA;IAAYJ,MAAA,EAAQ;EAAA,GAAShB,aAAA,EAAc,CAAG,CAAC;EAC9EqB,cAAA,CAAe,WAAW,MAAMP,SAAA,CAAAM,aAAA;IAAYJ,MAAA,EAAQ;EAAA,GAAUhB,aAAA,EAAc,CAAG,CAAC;EAEhFsB,SAAA,CAAU,MAAM;IACd,MAAMpB,UAAA,GAAaD,SAAA;IAEnB,IAAIC,UAAA,CAAWC,UAAA,EAAY;MACzBW,SAAA,CAAAM,aAAA;QAAYJ,MAAA,EAAQd,UAAA,CAAWqB;MAAA,GAAWvB,aAAA,GAAiB;MAC3DE,UAAA,CAAWC,UAAA,CAAWqB,gBAAA,CAAiB,UAAUP,sBAAsB;MACvE,OAAO,MAAMf,UAAA,CAAWC,UAAA,CAAWsB,mBAAA,CAAoB,UAAUR,sBAAsB;IACzF;IAEA,IAAI,OAAOf,UAAA,CAAWqB,MAAA,KAAW,WAAW;MAE1CT,SAAA,CAAWK,OAAA,IAAAC,aAAA,CAAAA,aAAA,KAAkBD,OAAA;QAASH,MAAA,EAAQd,UAAA,CAAWqB;MAAA,EAAS;IACpE;IAEA,OAAO;EACT,GAAG,EAAE;EAEL,OAAOV,MAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}