{"ast":null,"code":"import _objectSpread from\"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";// src/App.js\nimport{useState,useEffect,useRef}from'react';import{MantineProvider,Card,Text,Button,TextInput,Paper,ActionIcon,Group}from'@mantine/core';// prettier-ignore\nimport{IconX,IconMessageCircle,IconSend,IconArrowUp,IconArrowDown}from'@tabler/icons-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const WS_URL='ws://localhost:8000/ws';// === Компонент одного сообщения в чате ===\nfunction Message(_ref){let{message,isHidden}=_ref;const isUser=message.sender==='user';return/*#__PURE__*/_jsx(Paper,{withBorder:true,p:\"xs\",radius:\"md\"// Применяем стили для \"скрытия\" сообщения\n,style:_objectSpread({backgroundColor:isUser?'#228be6':'#e9ecef',// синий для юзера, серый для бота\ncolor:isUser?'white':'black',alignSelf:isUser?'flex-end':'flex-start',// справа для юзера, слева для бота\nmaxWidth:'80%',// Анимация для плавного схлопывания и появления\ntransition:'all 0.3s ease-in-out'},isHidden&&{height:0,paddingTop:0,paddingBottom:0,marginTop:0,marginBottom:0,opacity:0,overflow:'hidden'}),children:/*#__PURE__*/_jsx(Text,{size:\"sm\",children:message.text})});}// === Основной компонент виджета (сам чат) ===\nfunction ChatWidget(_ref2){let{onClose}=_ref2;// Состояние для сообщений и статуса диалога\nconst[messages,setMessages]=useState([]);const[inputValue,setInputValue]=useState('');const[isFinished,setIsFinished]=useState(false);const[vacancyId,setVacancyId]=useState(null);// <-- 1. Добавляем состояние для ID вакансии\nconst[resumeId,setResumeId]=useState(null);// <-- Новое состояние для ID резюме\nconst[topVisibleIndex,setTopVisibleIndex]=useState(0);// <-- НОВОЕ: Индекс верхнего видимого сообщения\nconst socket=useRef(null);const messagesEndRef=useRef(null);// Для прокрутки к последнему сообщению\n// Функции для механической прокрутки\nconst scrollUp=()=>{// Показываем предыдущее сообщение, если мы не в самом верху\nsetTopVisibleIndex(prevIndex=>Math.max(0,prevIndex-1));};const scrollDown=()=>{// Скрываем верхнее сообщение, если есть еще сообщения ниже\n// Мы не можем \"уйти\" дальше предпоследнего сообщения\nsetTopVisibleIndex(prevIndex=>Math.min(messages.length-1,prevIndex+1));};// --- ЛОГИКА РАБОТЫ С LOCALSTORAGE ---\n// <-- 2. Добавляем useEffect для чтения ID вакансии из HTML\nuseEffect(()=>{const vacancyElement=document.getElementById('vacancy-id');if(vacancyElement){setVacancyId(vacancyElement.value);console.log(\"Найден ID вакансии:\",vacancyElement.value);}else{console.warn(\"Элемент с id 'vacancy-id' не найден на странице.\");}const resumeElement=document.getElementById('resume-id');if(resumeElement){setResumeId(resumeElement.value);console.log(\"Найден ID резюме:\",resumeElement.value);}else{console.warn(\"Элемент с id 'resume-id' не найден на странице.\");}},[]);// Пустой массив зависимостей, чтобы выполнилось один раз при монтировании\n// 1. ЗАГРУЗКА истории из localStorage при открытии виджета\nuseEffect(()=>{const savedMessages=localStorage.getItem('chat_messages');if(savedMessages){setMessages(JSON.parse(savedMessages));}const savedIsFinished=localStorage.getItem('chat_finished');if(savedIsFinished==='true'){setIsFinished(true);}},[]);// 2. СОХРАНЕНИЕ истории в localStorage при любом изменении\nuseEffect(()=>{var _messagesEndRef$curre;localStorage.setItem('chat_messages',JSON.stringify(messages));localStorage.setItem('chat_finished',isFinished);// При любом изменении сообщений сбрасываем \"прокрутку\" и показываем все\nsetTopVisibleIndex(0);// Прокручиваем к самому низу\n(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});},[messages,isFinished]);// --- ЛОГИКА РАБОТЫ С WEBSOCKET ---\nuseEffect(()=>{socket.current=new WebSocket(WS_URL);socket.current.onopen=()=>{console.log('WS соединение установлено');// --- NEW: Send initial message to trigger AI ---\n// We use a timeout to ensure vacancyId/resumeId have been set from the other useEffect\nsetTimeout(()=>{setMessages(prev=>{// Only send the initial message if the chat is empty\nif(prev.length===0&&vacancyId&&resumeId){console.log(\"Отправка стартового сообщения для начала диалога с AI\");socket.current.send(JSON.stringify({text:'start',vacancy_id:vacancyId,resume_id:resumeId}));}return prev;});},100);// A small delay is usually sufficient\n};socket.current.onmessage=event=>{const data=JSON.parse(event.data);const botMessage={text:data.message,sender:'bot'};setMessages(prev=>[...prev,botMessage]);// Если бэкенд сказал завершить диалог\nif(data.finish_conversation===true){setIsFinished(true);socket.current.close();}};socket.current.onclose=()=>console.log('WS соединение закрыто');return()=>socket.current.close();},[vacancyId,resumeId]);// Rerun if IDs change (though they shouldn't in this setup)\nconst sendMessage=()=>{if(!inputValue.trim()||isFinished)return;const userMessage={text:inputValue,sender:'user'};setMessages(prev=>[...prev,userMessage]);// <-- 3. Формируем и отправляем JSON вместо простого текста\nif(socket.current.readyState===WebSocket.OPEN){const messagePayload={text:inputValue,vacancy_id:vacancyId,// Добавляем ID вакансии в отправляемые данные\nresume_id:resumeId// Добавляем ID резюме\n};socket.current.send(JSON.stringify(messagePayload));}setInputValue('');};return/*#__PURE__*/_jsxs(Card,{shadow:\"xl\",p:\"lg\",radius:\"md\",withBorder:true,style:{width:350,height:500,display:'flex',flexDirection:'column',overscrollBehavior:'contain'},children:[/*#__PURE__*/_jsxs(Group,{position:\"apart\",mb:\"md\",children:[/*#__PURE__*/_jsx(Text,{weight:500,children:\"\\u0427\\u0430\\u0442-\\u043F\\u043E\\u0434\\u0434\\u0435\\u0440\\u0436\\u043A\\u0430\"}),/*#__PURE__*/_jsxs(Group,{spacing:\"xs\",noWrap:true,children:[/*#__PURE__*/_jsx(ActionIcon,{onClick:scrollUp,title:\"\\u041F\\u0440\\u043E\\u043A\\u0440\\u0443\\u0442\\u0438\\u0442\\u044C \\u0432\\u0432\\u0435\\u0440\\u0445\",children:/*#__PURE__*/_jsx(IconArrowUp,{size:16})}),/*#__PURE__*/_jsx(ActionIcon,{onClick:scrollDown,title:\"\\u041F\\u0440\\u043E\\u043A\\u0440\\u0443\\u0442\\u0438\\u0442\\u044C \\u0432\\u043D\\u0438\\u0437\",children:/*#__PURE__*/_jsx(IconArrowDown,{size:16})}),/*#__PURE__*/_jsx(ActionIcon,{onClick:onClose,title:\"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u0447\\u0430\\u0442\",children:/*#__PURE__*/_jsx(IconX,{size:16})})]})]}),/*#__PURE__*/_jsx(\"div\",{style:{flex:1,marginBottom:'10px',overflowY:'auto',overflowX:'hidden'},children:/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',gap:'10px'},children:[messages.map((msg,index)=>/*#__PURE__*/_jsx(Message,{message:msg,isHidden:index<topVisibleIndex},index)),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]})}),isFinished?/*#__PURE__*/_jsx(Text,{color:\"dimmed\",align:\"center\",size:\"sm\",children:\"\\u0414\\u0438\\u0430\\u043B\\u043E\\u0433 \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D.\"}):/*#__PURE__*/_jsxs(Group,{noWrap:true,children:[/*#__PURE__*/_jsx(TextInput,{placeholder:\"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 'bye' \\u0434\\u043B\\u044F \\u0437\\u0430\\u0432\\u0435\\u0440\\u0448\\u0435\\u043D\\u0438\\u044F\",value:inputValue,onChange:event=>setInputValue(event.currentTarget.value),onKeyDown:event=>event.key==='Enter'&&sendMessage(),style:{flex:1},disabled:isFinished}),/*#__PURE__*/_jsx(Button,{onClick:sendMessage,disabled:isFinished,children:/*#__PURE__*/_jsx(IconSend,{size:16})})]})]});}// === Компонент-обертка, который управляет состоянием ===\nfunction App(){const[isOpen,setIsOpen]=useState(false);const handleClose=()=>{// ОЧИЩАЕМ ВСЕ ДАННЫЕ ПРИ ЗАКРЫТИИ\nlocalStorage.removeItem('chat_messages');localStorage.removeItem('chat_finished');setIsOpen(false);};const widgetContainerStyle={position:'fixed',bottom:'20px',right:'20px',zIndex:1000};return/*#__PURE__*/_jsx(\"div\",{style:widgetContainerStyle,children:isOpen?/*#__PURE__*/_jsx(ChatWidget,{onClose:handleClose}):/*#__PURE__*/_jsx(Button,{onClick:()=>setIsOpen(true),radius:\"xl\",size:\"lg\",shadow:\"xl\",children:/*#__PURE__*/_jsx(IconMessageCircle,{size:24})})});}// Рендерим все с провайдером Mantine\nexport default function MantineApp(){return/*#__PURE__*/_jsx(MantineProvider,{withGlobalStyles:true,withNormalizeCSS:true,children:/*#__PURE__*/_jsx(App,{})});}","map":{"version":3,"names":["useState","useEffect","useRef","MantineProvider","Card","Text","Button","TextInput","Paper","ActionIcon","Group","IconX","IconMessageCircle","IconSend","IconArrowUp","IconArrowDown","jsx","_jsx","jsxs","_jsxs","WS_URL","Message","_ref","message","isHidden","isUser","sender","withBorder","p","radius","style","_objectSpread","backgroundColor","color","alignSelf","maxWidth","transition","height","paddingTop","paddingBottom","marginTop","marginBottom","opacity","overflow","children","size","text","ChatWidget","_ref2","onClose","messages","setMessages","inputValue","setInputValue","isFinished","setIsFinished","vacancyId","setVacancyId","resumeId","setResumeId","topVisibleIndex","setTopVisibleIndex","socket","messagesEndRef","scrollUp","prevIndex","Math","max","scrollDown","min","length","vacancyElement","document","getElementById","value","console","log","warn","resumeElement","savedMessages","localStorage","getItem","JSON","parse","savedIsFinished","_messagesEndRef$curre","setItem","stringify","current","scrollIntoView","behavior","WebSocket","onopen","setTimeout","prev","send","vacancy_id","resume_id","onmessage","event","data","botMessage","finish_conversation","close","onclose","sendMessage","trim","userMessage","readyState","OPEN","messagePayload","shadow","width","display","flexDirection","overscrollBehavior","position","mb","weight","spacing","noWrap","onClick","title","flex","overflowY","overflowX","gap","map","msg","index","ref","align","placeholder","onChange","currentTarget","onKeyDown","key","disabled","App","isOpen","setIsOpen","handleClose","removeItem","widgetContainerStyle","bottom","right","zIndex","MantineApp","withGlobalStyles","withNormalizeCSS"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/src/App.js"],"sourcesContent":["// src/App.js\nimport { useState, useEffect, useRef } from 'react';\nimport { MantineProvider, Card, Text, Button, TextInput, Paper, ActionIcon, Group } from '@mantine/core'; // prettier-ignore\nimport { IconX, IconMessageCircle, IconSend, IconArrowUp, IconArrowDown } from '@tabler/icons-react';\n\nconst WS_URL = 'ws://localhost:8000/ws';\n\n// === Компонент одного сообщения в чате ===\nfunction Message({ message, isHidden }) {\n  const isUser = message.sender === 'user';\n  return (\n    <Paper\n      withBorder\n      p=\"xs\"\n      radius=\"md\"\n      // Применяем стили для \"скрытия\" сообщения\n      style={{\n        backgroundColor: isUser ? '#228be6' : '#e9ecef', // синий для юзера, серый для бота\n        color: isUser ? 'white' : 'black',\n        alignSelf: isUser ? 'flex-end' : 'flex-start', // справа для юзера, слева для бота\n        maxWidth: '80%',\n        // Анимация для плавного схлопывания и появления\n        transition: 'all 0.3s ease-in-out',\n        // Стили для скрытого состояния\n        ...(isHidden && {\n          height: 0,\n          paddingTop: 0,\n          paddingBottom: 0,\n          marginTop: 0,\n          marginBottom: 0,\n          opacity: 0,\n          overflow: 'hidden',\n        }),\n      }}\n    >\n      <Text size=\"sm\">{message.text}</Text>\n    </Paper>\n  );\n}\n\n\n// === Основной компонент виджета (сам чат) ===\nfunction ChatWidget({ onClose }) {\n  // Состояние для сообщений и статуса диалога\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isFinished, setIsFinished] = useState(false);\n  const [vacancyId, setVacancyId] = useState(null); // <-- 1. Добавляем состояние для ID вакансии\n  const [resumeId, setResumeId] = useState(null); // <-- Новое состояние для ID резюме\n  const [topVisibleIndex, setTopVisibleIndex] = useState(0); // <-- НОВОЕ: Индекс верхнего видимого сообщения\n  const socket = useRef(null);\n  const messagesEndRef = useRef(null); // Для прокрутки к последнему сообщению\n\n  // Функции для механической прокрутки\n  const scrollUp = () => {\n    // Показываем предыдущее сообщение, если мы не в самом верху\n    setTopVisibleIndex(prevIndex => Math.max(0, prevIndex - 1));\n  };\n\n  const scrollDown = () => {\n    // Скрываем верхнее сообщение, если есть еще сообщения ниже\n    // Мы не можем \"уйти\" дальше предпоследнего сообщения\n    setTopVisibleIndex(prevIndex => Math.min(messages.length - 1, prevIndex + 1));\n  };\n\n  // --- ЛОГИКА РАБОТЫ С LOCALSTORAGE ---\n\n  // <-- 2. Добавляем useEffect для чтения ID вакансии из HTML\n  useEffect(() => {\n    const vacancyElement = document.getElementById('vacancy-id');\n    if (vacancyElement) {\n      setVacancyId(vacancyElement.value);\n      console.log(\"Найден ID вакансии:\", vacancyElement.value);\n    } else {\n      console.warn(\"Элемент с id 'vacancy-id' не найден на странице.\");\n    }\n\n    const resumeElement = document.getElementById('resume-id');\n    if (resumeElement) {\n      setResumeId(resumeElement.value);\n      console.log(\"Найден ID резюме:\", resumeElement.value);\n    } else {\n      console.warn(\"Элемент с id 'resume-id' не найден на странице.\");\n    }\n  }, []); // Пустой массив зависимостей, чтобы выполнилось один раз при монтировании\n\n  // 1. ЗАГРУЗКА истории из localStorage при открытии виджета\n  useEffect(() => {\n    const savedMessages = localStorage.getItem('chat_messages');\n    if (savedMessages) {\n      setMessages(JSON.parse(savedMessages));\n    }\n    const savedIsFinished = localStorage.getItem('chat_finished');\n    if (savedIsFinished === 'true') {\n      setIsFinished(true);\n    }\n  }, []);\n\n  // 2. СОХРАНЕНИЕ истории в localStorage при любом изменении\n  useEffect(() => {\n    localStorage.setItem('chat_messages', JSON.stringify(messages));\n    localStorage.setItem('chat_finished', isFinished);\n\n    // При любом изменении сообщений сбрасываем \"прокрутку\" и показываем все\n    setTopVisibleIndex(0);\n    // Прокручиваем к самому низу\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages, isFinished]);\n\n\n  // --- ЛОГИКА РАБОТЫ С WEBSOCKET ---\n  useEffect(() => {\n    socket.current = new WebSocket(WS_URL);\n    socket.current.onopen = () => {\n      console.log('WS соединение установлено');\n      // --- NEW: Send initial message to trigger AI ---\n      // We use a timeout to ensure vacancyId/resumeId have been set from the other useEffect\n      setTimeout(() => {\n        setMessages(prev => {\n          // Only send the initial message if the chat is empty\n          if (prev.length === 0 && vacancyId && resumeId) {\n            console.log(\"Отправка стартового сообщения для начала диалога с AI\");\n            socket.current.send(JSON.stringify({ text: 'start', vacancy_id: vacancyId, resume_id: resumeId }));\n          }\n          return prev;\n        });\n      }, 100); // A small delay is usually sufficient\n    };\n\n    socket.current.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      const botMessage = { text: data.message, sender: 'bot' };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Если бэкенд сказал завершить диалог\n      if (data.finish_conversation === true) {\n        setIsFinished(true);\n        socket.current.close();\n      }\n    };\n\n    socket.current.onclose = () => console.log('WS соединение закрыто');\n    return () => socket.current.close();\n  }, [vacancyId, resumeId]); // Rerun if IDs change (though they shouldn't in this setup)\n\n  const sendMessage = () => {\n    if (!inputValue.trim() || isFinished) return;\n\n    const userMessage = { text: inputValue, sender: 'user' };\n    setMessages(prev => [...prev, userMessage]);\n    \n    // <-- 3. Формируем и отправляем JSON вместо простого текста\n    if (socket.current.readyState === WebSocket.OPEN) {\n      const messagePayload = {\n        text: inputValue,\n        vacancy_id: vacancyId, // Добавляем ID вакансии в отправляемые данные\n        resume_id: resumeId // Добавляем ID резюме\n      };\n      socket.current.send(JSON.stringify(messagePayload));\n    }\n    setInputValue('');\n  };\n\n  return (\n    <Card shadow=\"xl\" p=\"lg\" radius=\"md\" withBorder style={{ width: 350, height: 500, display: 'flex', flexDirection: 'column', overscrollBehavior: 'contain' }}>\n      <Group position=\"apart\" mb=\"md\">\n        <Text weight={500}>Чат-поддержка</Text>\n        <Group spacing=\"xs\" noWrap>\n          <ActionIcon onClick={scrollUp} title=\"Прокрутить вверх\"><IconArrowUp size={16} /></ActionIcon>\n          <ActionIcon onClick={scrollDown} title=\"Прокрутить вниз\"><IconArrowDown size={16} /></ActionIcon>\n          <ActionIcon onClick={onClose} title=\"Закрыть чат\"><IconX size={16} /></ActionIcon>\n        </Group>\n      </Group>\n\n      {/* Область с сообщениями */}\n      {/* Убираем ScrollArea, добавляем обычный div с overflow */}\n      <div style={{ flex: 1, marginBottom: '10px', overflowY: 'auto', overflowX: 'hidden' }}>\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '10px' }}>\n          {messages.map((msg, index) => (\n            <Message key={index} message={msg} isHidden={index < topVisibleIndex} />\n          ))}\n          {/* Пустой div для автоматической прокрутки к нему */}\n          <div ref={messagesEndRef} />\n        </div>\n      </div>\n\n      {/* Область ввода */}\n      {isFinished ? (\n        <Text color=\"dimmed\" align=\"center\" size=\"sm\">Диалог завершен.</Text>\n      ) : (\n        <Group noWrap>\n          <TextInput\n            placeholder=\"Введите 'bye' для завершения\"\n            value={inputValue}\n            onChange={(event) => setInputValue(event.currentTarget.value)}\n            onKeyDown={(event) => event.key === 'Enter' && sendMessage()}\n            style={{ flex: 1 }}\n            disabled={isFinished}\n          />\n          <Button onClick={sendMessage} disabled={isFinished}><IconSend size={16}/></Button>\n        </Group>\n      )}\n    </Card>\n  );\n}\n\n\n// === Компонент-обертка, который управляет состоянием ===\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleClose = () => {\n    // ОЧИЩАЕМ ВСЕ ДАННЫЕ ПРИ ЗАКРЫТИИ\n    localStorage.removeItem('chat_messages');\n    localStorage.removeItem('chat_finished');\n    setIsOpen(false);\n  };\n\n  const widgetContainerStyle = {\n    position: 'fixed',\n    bottom: '20px',\n    right: '20px',\n    zIndex: 1000,\n  };\n\n  return (\n    <div style={widgetContainerStyle}>\n      {isOpen ? (\n        <ChatWidget onClose={handleClose} />\n      ) : (\n        <Button onClick={() => setIsOpen(true)} radius=\"xl\" size=\"lg\" shadow=\"xl\">\n          <IconMessageCircle size={24} />\n        </Button>\n      )}\n    </div>\n  );\n}\n\n// Рендерим все с провайдером Mantine\nexport default function MantineApp() {\n  return (\n    <MantineProvider withGlobalStyles withNormalizeCSS>\n      <App />\n    </MantineProvider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}