{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"scrollAreaComponent\", \"position\", \"transitionProps\", \"radius\", \"attributes\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport { getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport { useDirection } from '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ModalBase } from '../ModalBase/ModalBase.mjs';\nimport '../ModalBase/ModalBaseBody.mjs';\nimport '../ModalBase/ModalBaseCloseButton.mjs';\nimport '../ModalBase/ModalBaseContent.mjs';\nimport '../ModalBase/ModalBaseHeader.mjs';\nimport '../ModalBase/ModalBaseOverlay.mjs';\nimport '../ModalBase/ModalBaseTitle.mjs';\nimport { ScrollArea } from '../ScrollArea/ScrollArea.mjs';\nimport { DrawerProvider } from './Drawer.context.mjs';\nimport classes from './Drawer.module.css.mjs';\nfunction getDrawerAlign(position) {\n  switch (position) {\n    case \"top\":\n      return \"flex-start\";\n    case \"bottom\":\n      return \"flex-end\";\n    default:\n      return void 0;\n  }\n}\nfunction getDrawerFlex(position) {\n  if (position === \"top\" || position === \"bottom\") {\n    return \"0 0 calc(100% - var(--drawer-offset, 0rem) * 2)\";\n  }\n  return void 0;\n}\nconst transitions = {\n  top: \"slide-down\",\n  bottom: \"slide-up\",\n  left: \"slide-right\",\n  right: \"slide-left\"\n};\nconst rtlTransitions = {\n  top: \"slide-down\",\n  bottom: \"slide-up\",\n  right: \"slide-right\",\n  left: \"slide-left\"\n};\nconst defaultProps = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex(\"modal\"),\n  position: \"left\"\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    position,\n    size,\n    offset\n  } = _ref;\n  return {\n    root: {\n      \"--drawer-size\": getSize(size, \"drawer-size\"),\n      \"--drawer-flex\": getDrawerFlex(position),\n      \"--drawer-height\": position === \"left\" || position === \"right\" ? void 0 : \"var(--drawer-size)\",\n      \"--drawer-align\": getDrawerAlign(position),\n      \"--drawer-justify\": position === \"right\" ? \"flex-end\" : void 0,\n      \"--drawer-offset\": rem(offset)\n    }\n  };\n});\nconst DrawerRoot = factory((_props, ref) => {\n  const props = useProps(\"DrawerRoot\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      scrollAreaComponent,\n      position,\n      transitionProps,\n      radius,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const {\n    dir\n  } = useDirection();\n  const getStyles = useStyles({\n    name: \"Drawer\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const drawerTransition = (dir === \"rtl\" ? rtlTransitions : transitions)[position];\n  return /* @__PURE__ */jsx(DrawerProvider, {\n    value: {\n      scrollAreaComponent,\n      getStyles,\n      radius\n    },\n    children: /* @__PURE__ */jsx(ModalBase, _objectSpread(_objectSpread({\n      ref\n    }, getStyles(\"root\")), {}, {\n      transitionProps: _objectSpread({\n        transition: drawerTransition\n      }, transitionProps),\n      \"data-offset-scrollbars\": scrollAreaComponent === ScrollArea.Autosize || void 0,\n      unstyled\n    }, others))\n  });\n});\nDrawerRoot.classes = classes;\nDrawerRoot.displayName = \"@mantine/core/DrawerRoot\";\nexport { DrawerRoot };","map":{"version":3,"names":["getDrawerAlign","position","getDrawerFlex","transitions","top","bottom","left","right","rtlTransitions","defaultProps","closeOnClickOutside","withinPortal","lockScroll","trapFocus","returnFocus","closeOnEscape","keepMounted","zIndex","getDefaultZIndex","varsResolver","createVarsResolver","_","_ref","size","offset","root","getSize","rem","DrawerRoot","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","scrollAreaComponent","transitionProps","radius","attributes","others","_objectWithoutProperties","_excluded","dir","useDirection","getStyles","useStyles","name","classes","drawerTransition","jsx","DrawerProvider","value","children","ModalBase","_objectSpread","transition","ScrollArea","Autosize","displayName"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Drawer/DrawerRoot.tsx"],"sourcesContent":["import {\n  createVarsResolver,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  getSize,\n  MantineRadius,\n  rem,\n  StylesApiProps,\n  useDirection,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ModalBase, ModalBaseProps, ModalBaseStylesNames } from '../ModalBase';\nimport { ScrollArea } from '../ScrollArea';\nimport { MantineTransition } from '../Transition';\nimport { DrawerProvider, ScrollAreaComponent } from './Drawer.context';\nimport classes from './Drawer.module.css';\n\ntype DrawerPosition = 'bottom' | 'left' | 'right' | 'top';\n\nfunction getDrawerAlign(position: DrawerPosition | undefined) {\n  switch (position) {\n    case 'top':\n      return 'flex-start';\n    case 'bottom':\n      return 'flex-end';\n    default:\n      return undefined;\n  }\n}\n\nfunction getDrawerFlex(position: DrawerPosition | undefined) {\n  if (position === 'top' || position === 'bottom') {\n    return '0 0 calc(100% - var(--drawer-offset, 0rem) * 2)';\n  }\n\n  return undefined;\n}\n\nexport type DrawerRootStylesNames = ModalBaseStylesNames;\nexport type DrawerRootCssVariables = {\n  root:\n    | '--drawer-size'\n    | '--drawer-flex'\n    | '--drawer-height'\n    | '--drawer-align'\n    | '--drawer-justify'\n    | '--drawer-offset';\n};\n\nexport interface DrawerRootProps extends StylesApiProps<DrawerRootFactory>, ModalBaseProps {\n  /** Scroll area component @default `'div'` */\n  scrollAreaComponent?: ScrollAreaComponent;\n\n  /** Side of the screen on which drawer will be opened @default `'left'` */\n  position?: DrawerPosition;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem @default `0` */\n  radius?: MantineRadius;\n\n  /** Drawer container offset from the viewport end @default `0` */\n  offset?: number | string;\n}\n\nexport type DrawerRootFactory = Factory<{\n  props: DrawerRootProps;\n  ref: HTMLDivElement;\n  stylesNames: DrawerRootStylesNames;\n  vars: DrawerRootCssVariables;\n  compound: true;\n}>;\n\nconst transitions: Record<DrawerPosition, MantineTransition> = {\n  top: 'slide-down',\n  bottom: 'slide-up',\n  left: 'slide-right',\n  right: 'slide-left',\n};\n\nconst rtlTransitions: Record<DrawerPosition, MantineTransition> = {\n  top: 'slide-down',\n  bottom: 'slide-up',\n  right: 'slide-right',\n  left: 'slide-left',\n};\n\nconst defaultProps = {\n  closeOnClickOutside: true,\n  withinPortal: true,\n  lockScroll: true,\n  trapFocus: true,\n  returnFocus: true,\n  closeOnEscape: true,\n  keepMounted: false,\n  zIndex: getDefaultZIndex('modal'),\n  position: 'left',\n} satisfies Partial<DrawerRootProps>;\n\nconst varsResolver = createVarsResolver<DrawerRootFactory>((_, { position, size, offset }) => ({\n  root: {\n    '--drawer-size': getSize(size, 'drawer-size'),\n    '--drawer-flex': getDrawerFlex(position),\n    '--drawer-height':\n      position === 'left' || position === 'right' ? undefined : 'var(--drawer-size)',\n    '--drawer-align': getDrawerAlign(position),\n    '--drawer-justify': position === 'right' ? 'flex-end' : undefined,\n    '--drawer-offset': rem(offset),\n  },\n}));\n\nexport const DrawerRoot = factory<DrawerRootFactory>((_props, ref) => {\n  const props = useProps('DrawerRoot', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    scrollAreaComponent,\n    position,\n    transitionProps,\n    radius,\n    attributes,\n    ...others\n  } = props;\n\n  const { dir } = useDirection();\n\n  const getStyles = useStyles<DrawerRootFactory>({\n    name: 'Drawer',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const drawerTransition = (dir === 'rtl' ? rtlTransitions : transitions)[position];\n\n  return (\n    <DrawerProvider value={{ scrollAreaComponent, getStyles, radius }}>\n      <ModalBase\n        ref={ref}\n        {...getStyles('root')}\n        transitionProps={{ transition: drawerTransition, ...transitionProps }}\n        data-offset-scrollbars={scrollAreaComponent === ScrollArea.Autosize || undefined}\n        unstyled={unstyled}\n        {...others}\n      />\n    </DrawerProvider>\n  );\n});\n\nDrawerRoot.classes = classes;\nDrawerRoot.displayName = '@mantine/core/DrawerRoot';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASA,eAAeC,QAAA,EAAsC;EAC5D,QAAQA,QAAA;IACN,KAAK;MACH,OAAO;IACT,KAAK;MACH,OAAO;IACT;MACE,OAAO;EAAA;AAEb;AAEA,SAASC,cAAcD,QAAA,EAAsC;EAC3D,IAAIA,QAAA,KAAa,SAASA,QAAA,KAAa,UAAU;IAC/C,OAAO;EACT;EAEA,OAAO;AACT;AAmCA,MAAME,WAAA,GAAyD;EAC7DC,GAAA,EAAK;EACLC,MAAA,EAAQ;EACRC,IAAA,EAAM;EACNC,KAAA,EAAO;AACT;AAEA,MAAMC,cAAA,GAA4D;EAChEJ,GAAA,EAAK;EACLC,MAAA,EAAQ;EACRE,KAAA,EAAO;EACPD,IAAA,EAAM;AACR;AAEA,MAAMG,YAAA,GAAe;EACnBC,mBAAA,EAAqB;EACrBC,YAAA,EAAc;EACdC,UAAA,EAAY;EACZC,SAAA,EAAW;EACXC,WAAA,EAAa;EACbC,aAAA,EAAe;EACfC,WAAA,EAAa;EACbC,MAAA,EAAQC,gBAAA,CAAiB,OAAO;EAChCjB,QAAA,EAAU;AACZ;AAEA,MAAMkB,YAAA,GAAeC,kBAAA,CAAsC,CAACC,CAAA,EAAAC,IAAA;EAAA,IAAG;IAAErB,QAAA;IAAUsB,IAAA;IAAMC;EAAA,CAAO,GAAAF,IAAA;EAAA,OAAO;IAC7FG,IAAA,EAAM;MACJ,iBAAiBC,OAAA,CAAQH,IAAA,EAAM,aAAa;MAC5C,iBAAiBrB,aAAA,CAAcD,QAAQ;MACvC,mBACEA,QAAA,KAAa,UAAUA,QAAA,KAAa,UAAU,SAAY;MAC5D,kBAAkBD,cAAA,CAAeC,QAAQ;MACzC,oBAAoBA,QAAA,KAAa,UAAU,aAAa;MACxD,mBAAmB0B,GAAA,CAAIH,MAAM;IAAA;EAEjC;AAAA,CAAE;AAEK,MAAMI,UAAA,GAAaC,OAAA,CAA2B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACpE,MAAMC,KAAA,GAAQC,QAAA,CAAS,cAAcxB,YAAA,EAAcqB,MAAM;EACzD,MAAM;MACJI,UAAA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,IAAA;MACAC,mBAAA;MACAvC,QAAA;MACAwC,eAAA;MACAC,MAAA;MACAC;IACG,CACL,GAAIX,KAAA;IADCY,MAAA,GAAAC,wBAAA,CACDb,KAAA,EAAAc,SAAA;EAEJ,MAAM;IAAEC;EAAA,CAAI,GAAIC,YAAA,EAAa;EAE7B,MAAMC,SAAA,GAAYC,SAAA,CAA6B;IAC7CC,IAAA,EAAM;IACNC,OAAA;IACApB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAK,UAAA;IACAJ,IAAA;IACApB;EAAA,CACD;EAED,MAAMkC,gBAAA,IAAoBN,GAAA,KAAQ,QAAQvC,cAAA,GAAiBL,WAAA,EAAaF,QAAQ;EAEhF,sBAAAqD,GAAA,CACGC,cAAA;IAAeC,KAAA,EAAO;MAAEhB,mBAAA;MAAqBS,SAAA;MAAWP;IAAA,CAAO;IAC9De,QAAA,iBAAAH,GAAA,CAACI,SAAA,EAAAC,aAAA,CAAAA,aAAA;MACC5B;IAAA,GACIkB,SAAA,CAAU,MAAM;MACpBR,eAAA,EAAAkB,aAAA;QAAmBC,UAAA,EAAYP;MAAA,GAAqBZ,eAAA,CAAgB;MACpE,0BAAwBD,mBAAA,KAAwBqB,UAAA,CAAWC,QAAA,IAAY;MACvExB;IAAA,GACIM,MAAA;EACN,CACF;AAEJ,CAAC;AAEDhB,UAAA,CAAWwB,OAAA,GAAUA,OAAA;AACrBxB,UAAA,CAAWmC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}