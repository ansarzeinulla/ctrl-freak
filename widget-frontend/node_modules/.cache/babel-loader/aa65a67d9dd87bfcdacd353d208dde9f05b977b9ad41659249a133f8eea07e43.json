{"ast":null,"code":"'use client';\n\nfunction escapeRegex(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, \"\\\\$&\");\n}\nfunction highlighter(value, _highlight) {\n  if (_highlight == null) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  const highlight = Array.isArray(_highlight) ? _highlight.map(escapeRegex) : escapeRegex(_highlight);\n  const shouldHighlight = Array.isArray(highlight) ? highlight.filter(part => part.trim().length > 0).length > 0 : highlight.trim() !== \"\";\n  if (!shouldHighlight) {\n    return [{\n      chunk: value,\n      highlighted: false\n    }];\n  }\n  const matcher = typeof highlight === \"string\" ? highlight.trim() : highlight.filter(part => part.trim().length !== 0).map(part => part.trim()).sort((a, b) => b.length - a.length).join(\"|\");\n  const re = new RegExp(\"(\".concat(matcher, \")\"), \"gi\");\n  const chunks = value.split(re).map(part => ({\n    chunk: part,\n    highlighted: re.test(part)\n  })).filter(_ref => {\n    let {\n      chunk\n    } = _ref;\n    return chunk;\n  });\n  return chunks;\n}\nexport { highlighter };","map":{"version":3,"names":["escapeRegex","value","replace","highlighter","_highlight","chunk","highlighted","highlight","Array","isArray","map","shouldHighlight","filter","part","trim","length","matcher","sort","a","b","join","re","RegExp","concat","chunks","split","test","_ref"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Highlight/highlighter/highlighter.ts"],"sourcesContent":["function escapeRegex(value: string) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#]/g, '\\\\$&');\n}\n\nexport function highlighter(value: string, _highlight: string | string[]) {\n  if (_highlight == null) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const highlight = Array.isArray(_highlight)\n    ? _highlight.map(escapeRegex)\n    : escapeRegex(_highlight);\n\n  const shouldHighlight = Array.isArray(highlight)\n    ? highlight.filter((part) => part.trim().length > 0).length > 0\n    : highlight.trim() !== '';\n\n  if (!shouldHighlight) {\n    return [{ chunk: value, highlighted: false }];\n  }\n\n  const matcher =\n    typeof highlight === 'string'\n      ? highlight.trim()\n      : highlight\n          .filter((part) => part.trim().length !== 0)\n          .map((part) => part.trim())\n          .sort((a, b) => b.length - a.length)\n          .join('|');\n\n  const re = new RegExp(`(${matcher})`, 'gi');\n  const chunks = value\n    .split(re)\n    .map((part) => ({ chunk: part, highlighted: re.test(part) }))\n    .filter(({ chunk }) => chunk);\n\n  return chunks;\n}\n"],"mappings":";;AAAA,SAASA,YAAYC,KAAA,EAAe;EAClC,OAAOA,KAAA,CAAMC,OAAA,CAAQ,0BAA0B,MAAM;AACvD;AAEO,SAASC,YAAYF,KAAA,EAAeG,UAAA,EAA+B;EACxE,IAAIA,UAAA,IAAc,MAAM;IACtB,OAAO,CAAC;MAAEC,KAAA,EAAOJ,KAAA;MAAOK,WAAA,EAAa;IAAA,CAAO;EAC9C;EAEA,MAAMC,SAAA,GAAYC,KAAA,CAAMC,OAAA,CAAQL,UAAU,IACtCA,UAAA,CAAWM,GAAA,CAAIV,WAAW,IAC1BA,WAAA,CAAYI,UAAU;EAE1B,MAAMO,eAAA,GAAkBH,KAAA,CAAMC,OAAA,CAAQF,SAAS,IAC3CA,SAAA,CAAUK,MAAA,CAAQC,IAAA,IAASA,IAAA,CAAKC,IAAA,EAAK,CAAEC,MAAA,GAAS,CAAC,EAAEA,MAAA,GAAS,IAC5DR,SAAA,CAAUO,IAAA,EAAK,KAAM;EAEzB,IAAI,CAACH,eAAA,EAAiB;IACpB,OAAO,CAAC;MAAEN,KAAA,EAAOJ,KAAA;MAAOK,WAAA,EAAa;IAAA,CAAO;EAC9C;EAEA,MAAMU,OAAA,GACJ,OAAOT,SAAA,KAAc,WACjBA,SAAA,CAAUO,IAAA,EAAK,GACfP,SAAA,CACGK,MAAA,CAAQC,IAAA,IAASA,IAAA,CAAKC,IAAA,EAAK,CAAEC,MAAA,KAAW,CAAC,EACzCL,GAAA,CAAKG,IAAA,IAASA,IAAA,CAAKC,IAAA,EAAM,EACzBG,IAAA,CAAK,CAACC,CAAA,EAAGC,CAAA,KAAMA,CAAA,CAAEJ,MAAA,GAASG,CAAA,CAAEH,MAAM,EAClCK,IAAA,CAAK,GAAG;EAEjB,MAAMC,EAAA,GAAK,IAAIC,MAAA,KAAAC,MAAA,CAAWP,OAAO,QAAK,IAAI;EAC1C,MAAMQ,MAAA,GAASvB,KAAA,CACZwB,KAAA,CAAMJ,EAAE,EACRX,GAAA,CAAKG,IAAA,KAAU;IAAER,KAAA,EAAOQ,IAAA;IAAMP,WAAA,EAAae,EAAA,CAAGK,IAAA,CAAKb,IAAI;EAAA,CAAE,CAAE,EAC3DD,MAAA,CAAOe,IAAA;IAAA,IAAC;MAAEtB;IAAA,CAAM,GAAAsB,IAAA;IAAA,OAAMtB,KAAK;EAAA;EAE9B,OAAOmB,MAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}