{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nfunction getInputOnChange(setValue) {\n  return val => {\n    if (!val) {\n      setValue(val);\n    } else if (typeof val === \"function\") {\n      setValue(val);\n    } else if (typeof val === \"object\" && \"nativeEvent\" in val) {\n      const {\n        currentTarget\n      } = val;\n      if (currentTarget.type === \"checkbox\") {\n        setValue(currentTarget.checked);\n      } else {\n        setValue(currentTarget.value);\n      }\n    } else {\n      setValue(val);\n    }\n  };\n}\nfunction useInputState(initialState) {\n  const [value, setValue] = useState(initialState);\n  return [value, getInputOnChange(setValue)];\n}\nexport { getInputOnChange, useInputState };","map":{"version":3,"names":["getInputOnChange","setValue","val","currentTarget","type","checked","value","useInputState","initialState","useState"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-input-state/use-input-state.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport function getInputOnChange<T>(\n  setValue: (value: null | undefined | T | ((current: T) => T)) => void\n) {\n  return (val: null | undefined | T | React.ChangeEvent<any> | ((current: T) => T)) => {\n    if (!val) {\n      setValue(val as T);\n    } else if (typeof val === 'function') {\n      setValue(val);\n    } else if (typeof val === 'object' && 'nativeEvent' in val) {\n      const { currentTarget } = val;\n\n      if (currentTarget.type === 'checkbox') {\n        setValue((currentTarget as any).checked as any);\n      } else {\n        setValue(currentTarget.value as any);\n      }\n    } else {\n      setValue(val);\n    }\n  };\n}\n\nexport type UseInputStateReturnValue<T> = [\n  T,\n  (value: null | undefined | T | React.ChangeEvent<any>) => void,\n];\n\nexport function useInputState<T>(initialState: T): UseInputStateReturnValue<T> {\n  const [value, setValue] = useState<T>(initialState);\n  return [value, getInputOnChange<T>(setValue as any)];\n}\n"],"mappings":";;;AAEO,SAASA,iBACdC,QAAA,EACA;EACA,OAAQC,GAAA,IAA6E;IACnF,IAAI,CAACA,GAAA,EAAK;MACRD,QAAA,CAASC,GAAQ;IACnB,WAAW,OAAOA,GAAA,KAAQ,YAAY;MACpCD,QAAA,CAASC,GAAG;IACd,WAAW,OAAOA,GAAA,KAAQ,YAAY,iBAAiBA,GAAA,EAAK;MAC1D,MAAM;QAAEC;MAAA,CAAc,GAAID,GAAA;MAE1B,IAAIC,aAAA,CAAcC,IAAA,KAAS,YAAY;QACrCH,QAAA,CAAUE,aAAA,CAAsBE,OAAc;MAChD,OAAO;QACLJ,QAAA,CAASE,aAAA,CAAcG,KAAY;MACrC;IACF,OAAO;MACLL,QAAA,CAASC,GAAG;IACd;EACF;AACF;AAOO,SAASK,cAAiBC,YAAA,EAA8C;EAC7E,MAAM,CAACF,KAAA,EAAOL,QAAQ,IAAIQ,QAAA,CAAYD,YAAY;EAClD,OAAO,CAACF,KAAA,EAAON,gBAAA,CAAoBC,QAAe,CAAC;AACrD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}