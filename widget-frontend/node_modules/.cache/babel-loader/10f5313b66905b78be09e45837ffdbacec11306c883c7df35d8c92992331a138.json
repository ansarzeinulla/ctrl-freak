{"ast":null,"code":"'use client';\n\nimport { findTabbableDescendants } from './tabbable.mjs';\nfunction scopeTab(node, event) {\n  const tabbable = findTabbableDescendants(node);\n  if (!tabbable.length) {\n    event.preventDefault();\n    return;\n  }\n  const finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];\n  const root = node.getRootNode();\n  let leavingFinalTabbable = finalTabbable === root.activeElement || node === root.activeElement;\n  const activeElement = root.activeElement;\n  const activeElementIsRadio = activeElement.tagName === \"INPUT\" && activeElement.getAttribute(\"type\") === \"radio\";\n  if (activeElementIsRadio) {\n    const activeRadioGroup = tabbable.filter(element => element.getAttribute(\"type\") === \"radio\" && element.getAttribute(\"name\") === activeElement.getAttribute(\"name\"));\n    leavingFinalTabbable = activeRadioGroup.includes(finalTabbable);\n  }\n  if (!leavingFinalTabbable) {\n    return;\n  }\n  event.preventDefault();\n  const target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];\n  if (target) {\n    target.focus();\n  }\n}\nexport { scopeTab };","map":{"version":3,"names":["scopeTab","node","event","tabbable","findTabbableDescendants","length","preventDefault","finalTabbable","shiftKey","root","getRootNode","leavingFinalTabbable","activeElement","activeElementIsRadio","tagName","getAttribute","activeRadioGroup","filter","element","includes","target","focus"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-focus-trap/scope-tab.ts"],"sourcesContent":["import { findTabbableDescendants } from './tabbable';\n\nexport function scopeTab(node: HTMLElement, event: KeyboardEvent) {\n  const tabbable = findTabbableDescendants(node);\n  if (!tabbable.length) {\n    event.preventDefault();\n    return;\n  }\n  const finalTabbable = tabbable[event.shiftKey ? 0 : tabbable.length - 1];\n  const root = node.getRootNode() as unknown as DocumentOrShadowRoot;\n  let leavingFinalTabbable = finalTabbable === root.activeElement || node === root.activeElement;\n\n  const activeElement = root.activeElement as Element;\n  const activeElementIsRadio =\n    activeElement.tagName === 'INPUT' && activeElement.getAttribute('type') === 'radio';\n  if (activeElementIsRadio) {\n    const activeRadioGroup = tabbable.filter(\n      (element) =>\n        element.getAttribute('type') === 'radio' &&\n        element.getAttribute('name') === activeElement.getAttribute('name')\n    );\n    leavingFinalTabbable = activeRadioGroup.includes(finalTabbable);\n  }\n\n  if (!leavingFinalTabbable) {\n    return;\n  }\n\n  event.preventDefault();\n\n  const target = tabbable[event.shiftKey ? tabbable.length - 1 : 0];\n\n  if (target) {\n    target.focus();\n  }\n}\n"],"mappings":";;;AAEO,SAASA,SAASC,IAAA,EAAmBC,KAAA,EAAsB;EAChE,MAAMC,QAAA,GAAWC,uBAAA,CAAwBH,IAAI;EAC7C,IAAI,CAACE,QAAA,CAASE,MAAA,EAAQ;IACpBH,KAAA,CAAMI,cAAA,EAAe;IACrB;EACF;EACA,MAAMC,aAAA,GAAgBJ,QAAA,CAASD,KAAA,CAAMM,QAAA,GAAW,IAAIL,QAAA,CAASE,MAAA,GAAS,CAAC;EACvE,MAAMI,IAAA,GAAOR,IAAA,CAAKS,WAAA,EAAY;EAC9B,IAAIC,oBAAA,GAAuBJ,aAAA,KAAkBE,IAAA,CAAKG,aAAA,IAAiBX,IAAA,KAASQ,IAAA,CAAKG,aAAA;EAEjF,MAAMA,aAAA,GAAgBH,IAAA,CAAKG,aAAA;EAC3B,MAAMC,oBAAA,GACJD,aAAA,CAAcE,OAAA,KAAY,WAAWF,aAAA,CAAcG,YAAA,CAAa,MAAM,MAAM;EAC9E,IAAIF,oBAAA,EAAsB;IACxB,MAAMG,gBAAA,GAAmBb,QAAA,CAASc,MAAA,CAC/BC,OAAA,IACCA,OAAA,CAAQH,YAAA,CAAa,MAAM,MAAM,WACjCG,OAAA,CAAQH,YAAA,CAAa,MAAM,MAAMH,aAAA,CAAcG,YAAA,CAAa,MAAM,EACtE;IACAJ,oBAAA,GAAuBK,gBAAA,CAAiBG,QAAA,CAASZ,aAAa;EAChE;EAEA,IAAI,CAACI,oBAAA,EAAsB;IACzB;EACF;EAEAT,KAAA,CAAMI,cAAA,EAAe;EAErB,MAAMc,MAAA,GAASjB,QAAA,CAASD,KAAA,CAAMM,QAAA,GAAWL,QAAA,CAASE,MAAA,GAAS,IAAI,CAAC;EAEhE,IAAIe,MAAA,EAAQ;IACVA,MAAA,CAAOC,KAAA,EAAM;EACf;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}