{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"forceMount\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, useState, useEffect } from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nimport { ScrollAreaScrollbarAuto } from './ScrollAreaScrollbarAuto.mjs';\nconst ScrollAreaScrollbarHover = forwardRef((props, ref) => {\n  const {\n      forceMount\n    } = props,\n    scrollbarProps = _objectWithoutProperties(props, _excluded);\n  const context = useScrollAreaContext();\n  const [visible, setVisible] = useState(false);\n  useEffect(() => {\n    const {\n      scrollArea\n    } = context;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener(\"pointerenter\", handlePointerEnter);\n      scrollArea.addEventListener(\"pointerleave\", handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener(\"pointerenter\", handlePointerEnter);\n        scrollArea.removeEventListener(\"pointerleave\", handlePointerLeave);\n      };\n    }\n    return void 0;\n  }, [context.scrollArea, context.scrollHideDelay]);\n  if (forceMount || visible) {\n    return /* @__PURE__ */jsx(ScrollAreaScrollbarAuto, _objectSpread(_objectSpread({\n      \"data-state\": visible ? \"visible\" : \"hidden\"\n    }, scrollbarProps), {}, {\n      ref\n    }));\n  }\n  return null;\n});\nScrollAreaScrollbarHover.displayName = \"@mantine/core/ScrollAreaScrollbarHover\";\nexport { ScrollAreaScrollbarHover };","map":{"version":3,"names":["ScrollAreaScrollbarHover","forwardRef","props","ref","forceMount","scrollbarProps","_objectWithoutProperties","_excluded","context","useScrollAreaContext","visible","setVisible","useState","useEffect","scrollArea","hideTimer","handlePointerEnter","window","clearTimeout","handlePointerLeave","setTimeout","scrollHideDelay","addEventListener","removeEventListener","jsx","ScrollAreaScrollbarAuto","_objectSpread","displayName"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/ScrollArea/ScrollAreaScrollbar/ScrollAreaScrollbarHover.tsx"],"sourcesContent":["import { forwardRef, useEffect, useState } from 'react';\nimport { useScrollAreaContext } from '../ScrollArea.context';\nimport { ScrollAreaScrollbarAuto, ScrollAreaScrollbarAutoProps } from './ScrollAreaScrollbarAuto';\n\ninterface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {\n  forceMount?: true;\n}\n\nexport const ScrollAreaScrollbarHover = forwardRef<HTMLDivElement, ScrollAreaScrollbarHoverProps>(\n  (props, ref) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext();\n    const [visible, setVisible] = useState(false);\n\n    useEffect(() => {\n      const { scrollArea } = context;\n      let hideTimer = 0;\n      if (scrollArea) {\n        const handlePointerEnter = () => {\n          window.clearTimeout(hideTimer);\n          setVisible(true);\n        };\n        const handlePointerLeave = () => {\n          hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n        };\n        scrollArea.addEventListener('pointerenter', handlePointerEnter);\n        scrollArea.addEventListener('pointerleave', handlePointerLeave);\n\n        return () => {\n          window.clearTimeout(hideTimer);\n          scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n          scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n        };\n      }\n\n      return undefined;\n    }, [context.scrollArea, context.scrollHideDelay]);\n\n    if (forceMount || visible) {\n      return (\n        <ScrollAreaScrollbarAuto\n          data-state={visible ? 'visible' : 'hidden'}\n          {...scrollbarProps}\n          ref={ref}\n        />\n      );\n    }\n\n    return null;\n  }\n);\n\nScrollAreaScrollbarHover.displayName = '@mantine/core/ScrollAreaScrollbarHover';\n"],"mappings":";;;;;;;;;AAQO,MAAMA,wBAAA,GAA2BC,UAAA,CACtC,CAACC,KAAA,EAAOC,GAAA,KAAQ;EACd,MAAM;MAAEC;IAAe,CAAe,GAAIF,KAAA;IAAnBG,cAAA,GAAAC,wBAAA,CAAmBJ,KAAA,EAAAK,SAAA;EAC1C,MAAMC,OAAA,GAAUC,oBAAA,EAAqB;EACrC,MAAM,CAACC,OAAA,EAASC,UAAU,IAAIC,QAAA,CAAS,KAAK;EAE5CC,SAAA,CAAU,MAAM;IACd,MAAM;MAAEC;IAAA,CAAW,GAAIN,OAAA;IACvB,IAAIO,SAAA,GAAY;IAChB,IAAID,UAAA,EAAY;MACd,MAAME,kBAAA,GAAqBA,CAAA,KAAM;QAC/BC,MAAA,CAAOC,YAAA,CAAaH,SAAS;QAC7BJ,UAAA,CAAW,IAAI;MACjB;MACA,MAAMQ,kBAAA,GAAqBA,CAAA,KAAM;QAC/BJ,SAAA,GAAYE,MAAA,CAAOG,UAAA,CAAW,MAAMT,UAAA,CAAW,KAAK,GAAGH,OAAA,CAAQa,eAAe;MAChF;MACAP,UAAA,CAAWQ,gBAAA,CAAiB,gBAAgBN,kBAAkB;MAC9DF,UAAA,CAAWQ,gBAAA,CAAiB,gBAAgBH,kBAAkB;MAE9D,OAAO,MAAM;QACXF,MAAA,CAAOC,YAAA,CAAaH,SAAS;QAC7BD,UAAA,CAAWS,mBAAA,CAAoB,gBAAgBP,kBAAkB;QACjEF,UAAA,CAAWS,mBAAA,CAAoB,gBAAgBJ,kBAAkB;MACnE;IACF;IAEA,OAAO;EACT,GAAG,CAACX,OAAA,CAAQM,UAAA,EAAYN,OAAA,CAAQa,eAAe,CAAC;EAEhD,IAAIjB,UAAA,IAAcM,OAAA,EAAS;IACzB,sBACEc,GAAA,CAACC,uBAAA,EAAAC,aAAA,CAAAA,aAAA;MACC,cAAYhB,OAAA,GAAU,YAAY;IAAA,GAC9BL,cAAA;MACJF;IAAA,GACF;EAEJ;EAEA,OAAO;AACT,CACF;AAEAH,wBAAA,CAAyB2B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}