{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useId } from 'react';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport classes from '../Combobox.module.css.mjs';\nconst ComboboxOption = factory((_props, ref) => {\n  const props = useProps(\"ComboboxOption\", null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onClick,\n    id,\n    active,\n    onMouseDown,\n    onMouseOver,\n    disabled,\n    selected,\n    mod,\n    ...others\n  } = props;\n  const ctx = useComboboxContext();\n  const uuid = useId();\n  const _id = id || uuid;\n  return /* @__PURE__ */jsx(Box, {\n    ...ctx.getStyles(\"option\", {\n      className,\n      classNames,\n      styles,\n      style\n    }),\n    ...others,\n    ref,\n    id: _id,\n    mod: [\"combobox-option\", {\n      \"combobox-active\": active,\n      \"combobox-disabled\": disabled,\n      \"combobox-selected\": selected\n    }, mod],\n    role: \"option\",\n    onClick: event => {\n      if (!disabled) {\n        ctx.onOptionSubmit?.(props.value, props);\n        onClick?.(event);\n      } else {\n        event.preventDefault();\n      }\n    },\n    onMouseDown: event => {\n      event.preventDefault();\n      onMouseDown?.(event);\n    },\n    onMouseOver: event => {\n      if (ctx.resetSelectionOnOptionHover) {\n        ctx.store.resetSelectedOption();\n      }\n      onMouseOver?.(event);\n    }\n  });\n});\nComboboxOption.classes = classes;\nComboboxOption.displayName = \"@mantine/core/ComboboxOption\";\nexport { ComboboxOption };","map":{"version":3,"names":["ComboboxOption","factory","_props","ref","props","useProps","classNames","className","style","styles","vars","onClick","id","active","onMouseDown","onMouseOver","disabled","selected","mod","others","ctx","useComboboxContext","uuid","useId","_id","jsx","Box","getStyles","role","event","onOptionSubmit","value","preventDefault","resetSelectionOnOptionHover","store","resetSelectedOption","classes","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Combobox/ComboboxOption/ComboboxOption.tsx"],"sourcesContent":["import { useId } from 'react';\nimport {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useComboboxContext } from '../Combobox.context';\nimport classes from '../Combobox.module.css';\n\nexport type ComboboxOptionStylesNames = 'option';\n\nexport interface ComboboxOptionProps\n  extends BoxProps,\n    CompoundStylesApiProps<ComboboxOptionFactory>,\n    ElementProps<'div'> {\n  /** Option value */\n  value: string;\n\n  /** Current active state */\n  active?: boolean;\n\n  /** Disabled state */\n  disabled?: boolean;\n\n  /** Current selected state */\n  selected?: boolean;\n}\n\nexport type ComboboxOptionFactory = Factory<{\n  props: ComboboxOptionProps;\n  ref: HTMLDivElement;\n  stylesNames: ComboboxOptionStylesNames;\n  compound: true;\n}>;\n\nexport const ComboboxOption = factory<ComboboxOptionFactory>((_props, ref) => {\n  const props = useProps('ComboboxOption', null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    vars,\n    onClick,\n    id,\n    active,\n    onMouseDown,\n    onMouseOver,\n    disabled,\n    selected,\n    mod,\n    ...others\n  } = props;\n\n  const ctx = useComboboxContext();\n  const uuid = useId();\n  const _id = id || uuid;\n\n  return (\n    <Box\n      {...ctx.getStyles('option', { className, classNames, styles, style })}\n      {...others}\n      ref={ref}\n      id={_id}\n      mod={[\n        'combobox-option',\n        { 'combobox-active': active, 'combobox-disabled': disabled, 'combobox-selected': selected },\n        mod,\n      ]}\n      role=\"option\"\n      onClick={(event) => {\n        if (!disabled) {\n          ctx.onOptionSubmit?.(props.value, props);\n          onClick?.(event);\n        } else {\n          event.preventDefault();\n        }\n      }}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        onMouseDown?.(event);\n      }}\n      onMouseOver={(event) => {\n        if (ctx.resetSelectionOnOptionHover) {\n          ctx.store.resetSelectedOption();\n        }\n        onMouseOver?.(event);\n      }}\n    />\n  );\n});\n\nComboboxOption.classes = classes;\nComboboxOption.displayName = '@mantine/core/ComboboxOption';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAuCO,MAAMA,cAAA,GAAiBC,OAAA,CAA+B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAC5E,MAAMC,KAAA,GAAQC,QAAA,CAAS,kBAAkB,MAAMH,MAAM;EACrD,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,IAAA;IACAC,OAAA;IACAC,EAAA;IACAC,MAAA;IACAC,WAAA;IACAC,WAAA;IACAC,QAAA;IACAC,QAAA;IACAC,GAAA;IACA,GAAGC;EAAA,CACL,GAAIf,KAAA;EAEJ,MAAMgB,GAAA,GAAMC,kBAAA,EAAmB;EAC/B,MAAMC,IAAA,GAAOC,KAAA,EAAM;EACnB,MAAMC,GAAA,GAAMZ,EAAA,IAAMU,IAAA;EAElB,sBACEG,GAAA,CAACC,GAAA;IACE,GAAGN,GAAA,CAAIO,SAAA,CAAU,UAAU;MAAEpB,SAAA;MAAWD,UAAA;MAAYG,MAAA;MAAQD;IAAA,CAAO;IACnE,GAAGW,MAAA;IACJhB,GAAA;IACAS,EAAA,EAAIY,GAAA;IACJN,GAAA,EAAK,CACH,mBACA;MAAE,mBAAmBL,MAAA;MAAQ,qBAAqBG,QAAA;MAAU,qBAAqBC;IAAA,CAAS,EAC1FC,GAAA,CACF;IACAU,IAAA,EAAK;IACLjB,OAAA,EAAUkB,KAAA,IAAU;MAClB,IAAI,CAACb,QAAA,EAAU;QACbI,GAAA,CAAIU,cAAA,GAAiB1B,KAAA,CAAM2B,KAAA,EAAO3B,KAAK;QACvCO,OAAA,GAAUkB,KAAK;MACjB,OAAO;QACLA,KAAA,CAAMG,cAAA,EAAe;MACvB;IACF;IACAlB,WAAA,EAAce,KAAA,IAAU;MACtBA,KAAA,CAAMG,cAAA,EAAe;MACrBlB,WAAA,GAAce,KAAK;IACrB;IACAd,WAAA,EAAcc,KAAA,IAAU;MACtB,IAAIT,GAAA,CAAIa,2BAAA,EAA6B;QACnCb,GAAA,CAAIc,KAAA,CAAMC,mBAAA,EAAoB;MAChC;MACApB,WAAA,GAAcc,KAAK;IACrB;EAAA,EACF;AAEJ,CAAC;AAED7B,cAAA,CAAeoC,OAAA,GAAUA,OAAA;AACzBpC,cAAA,CAAeqC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}