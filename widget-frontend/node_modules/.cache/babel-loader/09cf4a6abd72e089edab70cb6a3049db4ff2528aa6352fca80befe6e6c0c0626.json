{"ast":null,"code":"function scaleRem(remValue) {\n  if (remValue === \"0rem\") {\n    return \"0rem\";\n  }\n  return \"calc(\".concat(remValue, \" * var(--mantine-scale))\");\n}\nfunction createConverter(units) {\n  let {\n    shouldScale = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  function converter(value) {\n    if (value === 0 || value === \"0\") {\n      return \"0\".concat(units);\n    }\n    if (typeof value === \"number\") {\n      const val = \"\".concat(value / 16).concat(units);\n      return shouldScale ? scaleRem(val) : val;\n    }\n    if (typeof value === \"string\") {\n      if (value === \"\") {\n        return value;\n      }\n      if (value.startsWith(\"calc(\") || value.startsWith(\"clamp(\") || value.includes(\"rgba(\")) {\n        return value;\n      }\n      if (value.includes(\",\")) {\n        return value.split(\",\").map(val => converter(val)).join(\",\");\n      }\n      if (value.includes(\" \")) {\n        return value.split(\" \").map(val => converter(val)).join(\" \");\n      }\n      const replaced = value.replace(\"px\", \"\");\n      if (!Number.isNaN(Number(replaced))) {\n        const val = \"\".concat(Number(replaced) / 16).concat(units);\n        return shouldScale ? scaleRem(val) : val;\n      }\n    }\n    return value;\n  }\n  return converter;\n}\nconst rem = createConverter(\"rem\", {\n  shouldScale: true\n});\nconst em = createConverter(\"em\");\nexport { em, rem };","map":{"version":3,"names":["scaleRem","remValue","concat","createConverter","units","shouldScale","arguments","length","undefined","converter","value","val","startsWith","includes","split","map","join","replaced","replace","Number","isNaN","rem","em"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/core/utils/units-converters/rem.ts"],"sourcesContent":["function scaleRem(remValue: string) {\n  if (remValue === '0rem') {\n    return '0rem';\n  }\n\n  return `calc(${remValue} * var(--mantine-scale))`;\n}\n\nfunction createConverter(units: string, { shouldScale = false } = {}) {\n  function converter(value: unknown): string {\n    if (value === 0 || value === '0') {\n      return `0${units}`;\n    }\n\n    if (typeof value === 'number') {\n      const val = `${value / 16}${units}`;\n      return shouldScale ? scaleRem(val) : val;\n    }\n\n    if (typeof value === 'string') {\n      // Number(\"\") === 0 so exit early\n      if (value === '') {\n        return value;\n      }\n\n      if (value.startsWith('calc(') || value.startsWith('clamp(') || value.includes('rgba(')) {\n        return value;\n      }\n\n      if (value.includes(',')) {\n        return value\n          .split(',')\n          .map((val) => converter(val))\n          .join(',');\n      }\n\n      if (value.includes(' ')) {\n        return value\n          .split(' ')\n          .map((val) => converter(val))\n          .join(' ');\n      }\n\n      const replaced = value.replace('px', '');\n      if (!Number.isNaN(Number(replaced))) {\n        const val = `${Number(replaced) / 16}${units}`;\n        return shouldScale ? scaleRem(val) : val;\n      }\n    }\n\n    return value as string;\n  }\n\n  return converter;\n}\n\nexport const rem = createConverter('rem', { shouldScale: true });\nexport const em = createConverter('em');\n"],"mappings":"AAAA,SAASA,SAASC,QAAA,EAAkB;EAClC,IAAIA,QAAA,KAAa,QAAQ;IACvB,OAAO;EACT;EAEA,eAAAC,MAAA,CAAeD,QAAQ;AACzB;AAEA,SAASE,gBAAgBC,KAAA,EAA6C;EAAA,IAA9B;IAAEC,WAAA,GAAc;EAAA,CAAM,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAI,EAAC;EACjE,SAASG,UAAUC,KAAA,EAAwB;IACzC,IAAIA,KAAA,KAAU,KAAKA,KAAA,KAAU,KAAK;MAChC,WAAAR,MAAA,CAAWE,KAAK;IAClB;IAEA,IAAI,OAAOM,KAAA,KAAU,UAAU;MAC7B,MAAMC,GAAA,MAAAT,MAAA,CAASQ,KAAA,GAAQ,EAAE,EAAAR,MAAA,CAAGE,KAAK;MACjC,OAAOC,WAAA,GAAcL,QAAA,CAASW,GAAG,IAAIA,GAAA;IACvC;IAEA,IAAI,OAAOD,KAAA,KAAU,UAAU;MAE7B,IAAIA,KAAA,KAAU,IAAI;QAChB,OAAOA,KAAA;MACT;MAEA,IAAIA,KAAA,CAAME,UAAA,CAAW,OAAO,KAAKF,KAAA,CAAME,UAAA,CAAW,QAAQ,KAAKF,KAAA,CAAMG,QAAA,CAAS,OAAO,GAAG;QACtF,OAAOH,KAAA;MACT;MAEA,IAAIA,KAAA,CAAMG,QAAA,CAAS,GAAG,GAAG;QACvB,OAAOH,KAAA,CACJI,KAAA,CAAM,GAAG,EACTC,GAAA,CAAKJ,GAAA,IAAQF,SAAA,CAAUE,GAAG,CAAC,EAC3BK,IAAA,CAAK,GAAG;MACb;MAEA,IAAIN,KAAA,CAAMG,QAAA,CAAS,GAAG,GAAG;QACvB,OAAOH,KAAA,CACJI,KAAA,CAAM,GAAG,EACTC,GAAA,CAAKJ,GAAA,IAAQF,SAAA,CAAUE,GAAG,CAAC,EAC3BK,IAAA,CAAK,GAAG;MACb;MAEA,MAAMC,QAAA,GAAWP,KAAA,CAAMQ,OAAA,CAAQ,MAAM,EAAE;MACvC,IAAI,CAACC,MAAA,CAAOC,KAAA,CAAMD,MAAA,CAAOF,QAAQ,CAAC,GAAG;QACnC,MAAMN,GAAA,MAAAT,MAAA,CAASiB,MAAA,CAAOF,QAAQ,IAAI,EAAE,EAAAf,MAAA,CAAGE,KAAK;QAC5C,OAAOC,WAAA,GAAcL,QAAA,CAASW,GAAG,IAAIA,GAAA;MACvC;IACF;IAEA,OAAOD,KAAA;EACT;EAEA,OAAOD,SAAA;AACT;AAEO,MAAMY,GAAA,GAAMlB,eAAA,CAAgB,OAAO;EAAEE,WAAA,EAAa;AAAA,CAAM;AACxD,MAAMiB,EAAA,GAAKnB,eAAA,CAAgB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}