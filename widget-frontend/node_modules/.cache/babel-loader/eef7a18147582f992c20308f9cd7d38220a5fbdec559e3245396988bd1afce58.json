{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useMergedRef } from '@mantine/hooks';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../../Input/Input.mjs';\nimport '../../Input/InputWrapper/InputWrapper.mjs';\nimport '../../Input/InputDescription/InputDescription.mjs';\nimport '../../Input/InputError/InputError.mjs';\nimport '../../Input/InputLabel/InputLabel.mjs';\nimport '../../Input/InputPlaceholder/InputPlaceholder.mjs';\nimport '../../Input/InputClearButton/InputClearButton.mjs';\nimport { useInputWrapperContext } from '../../Input/InputWrapper.context.mjs';\nimport { usePillsInputContext } from '../PillsInput.context.mjs';\nimport classes from '../PillsInput.module.css.mjs';\nconst defaultProps = {\n  type: \"visible\"\n};\nconst PillsInputField = factory((_props, ref) => {\n  const props = useProps(\"PillsInputField\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    type,\n    disabled,\n    id,\n    pointer,\n    mod,\n    attributes,\n    ...others\n  } = props;\n  const ctx = usePillsInputContext();\n  const inputWrapperCtx = useInputWrapperContext();\n  const getStyles = useStyles({\n    name: \"PillsInputField\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    rootSelector: \"field\"\n  });\n  const _disabled = disabled || ctx?.disabled;\n  return /* @__PURE__ */jsx(Box, {\n    component: \"input\",\n    ref: useMergedRef(ref, ctx?.fieldRef),\n    \"data-type\": type,\n    disabled: _disabled,\n    mod: [{\n      disabled: _disabled,\n      pointer\n    }, mod],\n    ...getStyles(\"field\"),\n    ...others,\n    id: inputWrapperCtx?.inputId || id,\n    \"aria-invalid\": ctx?.hasError,\n    \"aria-describedby\": inputWrapperCtx?.describedBy,\n    type: \"text\",\n    onMouseDown: event => !pointer && event.stopPropagation()\n  });\n});\nPillsInputField.classes = classes;\nPillsInputField.displayName = \"@mantine/core/PillsInputField\";\nexport { PillsInputField };","map":{"version":3,"names":["defaultProps","type","PillsInputField","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","disabled","id","pointer","mod","attributes","others","ctx","usePillsInputContext","inputWrapperCtx","useInputWrapperContext","getStyles","useStyles","name","classes","rootSelector","_disabled","jsx","Box","component","useMergedRef","fieldRef","inputId","hasError","describedBy","onMouseDown","event","stopPropagation","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/PillsInput/PillsInputField/PillsInputField.tsx"],"sourcesContent":["import { useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { useInputWrapperContext } from '../../Input';\nimport { usePillsInputContext } from '../PillsInput.context';\nimport classes from '../PillsInput.module.css';\n\nexport type PillsInputFieldStylesNames = 'field';\n\nexport interface PillsInputFieldProps\n  extends BoxProps,\n    StylesApiProps<PillsInputFieldFactory>,\n    ElementProps<'input', 'type'> {\n  /** Controls input styles when focused. If `auto` the input is hidden when not focused. If `visible` the input will always remain visible. @default `'visible'` */\n  type?: 'auto' | 'visible' | 'hidden';\n\n  /** If set, cursor is changed to pointer */\n  pointer?: boolean;\n}\n\nexport type PillsInputFieldFactory = Factory<{\n  props: PillsInputFieldProps;\n  ref: HTMLInputElement;\n  stylesNames: PillsInputFieldStylesNames;\n}>;\n\nconst defaultProps = {\n  type: 'visible',\n} satisfies Partial<PillsInputFieldProps>;\n\nexport const PillsInputField = factory<PillsInputFieldFactory>((_props, ref) => {\n  const props = useProps('PillsInputField', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    type,\n    disabled,\n    id,\n    pointer,\n    mod,\n    attributes,\n    ...others\n  } = props;\n  const ctx = usePillsInputContext();\n  const inputWrapperCtx = useInputWrapperContext();\n\n  const getStyles = useStyles<PillsInputFieldFactory>({\n    name: 'PillsInputField',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    rootSelector: 'field',\n  });\n\n  const _disabled = disabled || ctx?.disabled;\n\n  return (\n    <Box\n      component=\"input\"\n      ref={useMergedRef(ref, ctx?.fieldRef)}\n      data-type={type}\n      disabled={_disabled}\n      mod={[{ disabled: _disabled, pointer }, mod]}\n      {...getStyles('field')}\n      {...others}\n      id={inputWrapperCtx?.inputId || id}\n      aria-invalid={ctx?.hasError}\n      aria-describedby={inputWrapperCtx?.describedBy}\n      type=\"text\"\n      onMouseDown={(event) => !pointer && event.stopPropagation()}\n    />\n  );\n});\n\nPillsInputField.classes = classes;\nPillsInputField.displayName = '@mantine/core/PillsInputField';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,MAAMA,YAAA,GAAe;EACnBC,IAAA,EAAM;AACR;AAEO,MAAMC,eAAA,GAAkBC,OAAA,CAAgC,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAC9E,MAAMC,KAAA,GAAQC,QAAA,CAAS,mBAAmBP,YAAA,EAAcI,MAAM;EAC9D,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAZ,IAAA;IACAa,QAAA;IACAC,EAAA;IACAC,OAAA;IACAC,GAAA;IACAC,UAAA;IACA,GAAGC;EAAA,CACL,GAAIb,KAAA;EACJ,MAAMc,GAAA,GAAMC,oBAAA,EAAqB;EACjC,MAAMC,eAAA,GAAkBC,sBAAA,EAAuB;EAE/C,MAAMC,SAAA,GAAYC,SAAA,CAAkC;IAClDC,IAAA,EAAM;IACNC,OAAA;IACArB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAM,UAAA;IACAU,YAAA,EAAc;EAAA,CACf;EAED,MAAMC,SAAA,GAAYf,QAAA,IAAYM,GAAA,EAAKN,QAAA;EAEnC,sBACEgB,GAAA,CAACC,GAAA;IACCC,SAAA,EAAU;IACV3B,GAAA,EAAK4B,YAAA,CAAa5B,GAAA,EAAKe,GAAA,EAAKc,QAAQ;IACpC,aAAWjC,IAAA;IACXa,QAAA,EAAUe,SAAA;IACVZ,GAAA,EAAK,CAAC;MAAEH,QAAA,EAAUe,SAAA;MAAWb;IAAA,GAAWC,GAAG;IAC1C,GAAGO,SAAA,CAAU,OAAO;IACpB,GAAGL,MAAA;IACJJ,EAAA,EAAIO,eAAA,EAAiBa,OAAA,IAAWpB,EAAA;IAChC,gBAAcK,GAAA,EAAKgB,QAAA;IACnB,oBAAkBd,eAAA,EAAiBe,WAAA;IACnCpC,IAAA,EAAK;IACLqC,WAAA,EAAcC,KAAA,IAAU,CAACvB,OAAA,IAAWuB,KAAA,CAAMC,eAAA;EAAgB,EAC5D;AAEJ,CAAC;AAEDtC,eAAA,CAAgByB,OAAA,GAAUA,OAAA;AAC1BzB,eAAA,CAAgBuC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}