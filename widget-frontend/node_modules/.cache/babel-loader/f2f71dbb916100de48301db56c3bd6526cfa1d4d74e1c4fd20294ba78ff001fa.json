{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useReducedMotion, useDidUpdate } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react/jsx-runtime';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nfunction useTransition(_ref) {\n  let {\n    duration,\n    exitDuration,\n    timingFunction,\n    mounted,\n    onEnter,\n    onExit,\n    onEntered,\n    onExited,\n    enterDelay,\n    exitDelay\n  } = _ref;\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const [transitionDuration, setTransitionDuration] = useState(reduceMotion ? 0 : duration);\n  const [transitionStatus, setStatus] = useState(mounted ? \"entered\" : \"exited\");\n  const transitionTimeoutRef = useRef(-1);\n  const delayTimeoutRef = useRef(-1);\n  const rafRef = useRef(-1);\n  function clearAllTimeouts() {\n    window.clearTimeout(transitionTimeoutRef.current);\n    window.clearTimeout(delayTimeoutRef.current);\n    cancelAnimationFrame(rafRef.current);\n  }\n  const handleStateChange = shouldMount => {\n    clearAllTimeouts();\n    const preHandler = shouldMount ? onEnter : onExit;\n    const handler = shouldMount ? onEntered : onExited;\n    const newTransitionDuration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;\n    setTransitionDuration(newTransitionDuration);\n    if (newTransitionDuration === 0) {\n      typeof preHandler === \"function\" && preHandler();\n      typeof handler === \"function\" && handler();\n      setStatus(shouldMount ? \"entered\" : \"exited\");\n    } else {\n      rafRef.current = requestAnimationFrame(() => {\n        ReactDOM.flushSync(() => {\n          setStatus(shouldMount ? \"pre-entering\" : \"pre-exiting\");\n        });\n        rafRef.current = requestAnimationFrame(() => {\n          typeof preHandler === \"function\" && preHandler();\n          setStatus(shouldMount ? \"entering\" : \"exiting\");\n          transitionTimeoutRef.current = window.setTimeout(() => {\n            typeof handler === \"function\" && handler();\n            setStatus(shouldMount ? \"entered\" : \"exited\");\n          }, newTransitionDuration);\n        });\n      });\n    }\n  };\n  const handleTransitionWithDelay = shouldMount => {\n    clearAllTimeouts();\n    const delay = shouldMount ? enterDelay : exitDelay;\n    if (typeof delay !== \"number\") {\n      handleStateChange(shouldMount);\n      return;\n    }\n    delayTimeoutRef.current = window.setTimeout(() => {\n      handleStateChange(shouldMount);\n    }, shouldMount ? enterDelay : exitDelay);\n  };\n  useDidUpdate(() => {\n    handleTransitionWithDelay(mounted);\n  }, [mounted]);\n  useEffect(() => () => {\n    clearAllTimeouts();\n  }, []);\n  return {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction: timingFunction || \"ease\"\n  };\n}\nexport { useTransition };","map":{"version":3,"names":["useTransition","_ref","duration","exitDuration","timingFunction","mounted","onEnter","onExit","onEntered","onExited","enterDelay","exitDelay","theme","useMantineTheme","shouldReduceMotion","useReducedMotion","reduceMotion","respectReducedMotion","transitionDuration","setTransitionDuration","useState","transitionStatus","setStatus","transitionTimeoutRef","useRef","delayTimeoutRef","rafRef","clearAllTimeouts","window","clearTimeout","current","cancelAnimationFrame","handleStateChange","shouldMount","preHandler","handler","newTransitionDuration","requestAnimationFrame","ReactDOM","flushSync","setTimeout","handleTransitionWithDelay","delay","useDidUpdate","useEffect","transitionTimingFunction"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Transition/use-transition.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { useDidUpdate, useReducedMotion } from '@mantine/hooks';\nimport { useMantineTheme } from '../../core';\n\nexport type TransitionStatus =\n  | 'entered'\n  | 'exited'\n  | 'entering'\n  | 'exiting'\n  | 'pre-exiting'\n  | 'pre-entering';\n\ninterface UseTransition {\n  duration: number;\n  exitDuration: number;\n  timingFunction: string;\n  mounted: boolean;\n  onEnter?: () => void;\n  onExit?: () => void;\n  onEntered?: () => void;\n  onExited?: () => void;\n  enterDelay?: number;\n  exitDelay?: number;\n}\n\nexport function useTransition({\n  duration,\n  exitDuration,\n  timingFunction,\n  mounted,\n  onEnter,\n  onExit,\n  onEntered,\n  onExited,\n  enterDelay,\n  exitDelay,\n}: UseTransition) {\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const [transitionDuration, setTransitionDuration] = useState(reduceMotion ? 0 : duration);\n  const [transitionStatus, setStatus] = useState<TransitionStatus>(mounted ? 'entered' : 'exited');\n  const transitionTimeoutRef = useRef<number>(-1);\n  const delayTimeoutRef = useRef<number>(-1);\n  const rafRef = useRef(-1);\n\n  function clearAllTimeouts() {\n    window.clearTimeout(transitionTimeoutRef.current);\n    window.clearTimeout(delayTimeoutRef.current);\n    cancelAnimationFrame(rafRef.current);\n  }\n\n  const handleStateChange = (shouldMount: boolean) => {\n    clearAllTimeouts();\n    const preHandler = shouldMount ? onEnter : onExit;\n    const handler = shouldMount ? onEntered : onExited;\n    const newTransitionDuration = reduceMotion ? 0 : shouldMount ? duration : exitDuration;\n    setTransitionDuration(newTransitionDuration);\n\n    if (newTransitionDuration === 0) {\n      typeof preHandler === 'function' && preHandler();\n      typeof handler === 'function' && handler();\n      setStatus(shouldMount ? 'entered' : 'exited');\n    } else {\n      rafRef.current = requestAnimationFrame(() => {\n        ReactDOM.flushSync(() => {\n          setStatus(shouldMount ? 'pre-entering' : 'pre-exiting');\n        });\n        rafRef.current = requestAnimationFrame(() => {\n          typeof preHandler === 'function' && preHandler();\n          setStatus(shouldMount ? 'entering' : 'exiting');\n          transitionTimeoutRef.current = window.setTimeout(() => {\n            typeof handler === 'function' && handler();\n            setStatus(shouldMount ? 'entered' : 'exited');\n          }, newTransitionDuration);\n        });\n      });\n    }\n  };\n\n  const handleTransitionWithDelay = (shouldMount: boolean) => {\n    clearAllTimeouts();\n    const delay = shouldMount ? enterDelay : exitDelay;\n    if (typeof delay !== 'number') {\n      handleStateChange(shouldMount);\n      return;\n    }\n    delayTimeoutRef.current = window.setTimeout(\n      () => {\n        handleStateChange(shouldMount);\n      },\n      shouldMount ? enterDelay : exitDelay\n    );\n  };\n\n  useDidUpdate(() => {\n    handleTransitionWithDelay(mounted);\n  }, [mounted]);\n\n  useEffect(\n    () => () => {\n      clearAllTimeouts();\n    },\n    []\n  );\n\n  return {\n    transitionDuration,\n    transitionStatus,\n    transitionTimingFunction: timingFunction || 'ease',\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}