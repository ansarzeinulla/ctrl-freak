{"ast":null,"code":"'use client';\n\nimport { useState, useCallback } from 'react';\nfunction useDisclosure(initialState = false, options = {}) {\n  const [opened, setOpened] = useState(initialState);\n  const open = useCallback(() => {\n    setOpened(isOpened => {\n      if (!isOpened) {\n        options.onOpen?.();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [options.onOpen]);\n  const close = useCallback(() => {\n    setOpened(isOpened => {\n      if (isOpened) {\n        options.onClose?.();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [options.onClose]);\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n  return [opened, {\n    open,\n    close,\n    toggle\n  }];\n}\nexport { useDisclosure };","map":{"version":3,"names":["useDisclosure","initialState","options","opened","setOpened","useState","open","useCallback","isOpened","onOpen","close","onClose","toggle"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-disclosure/use-disclosure.ts"],"sourcesContent":["import { useCallback, useState } from 'react';\n\nexport interface UseDisclosureOptions {\n  onOpen?: () => void;\n  onClose?: () => void;\n}\n\nexport interface UseDisclosureHandlers {\n  open: () => void;\n  close: () => void;\n  toggle: () => void;\n}\n\nexport type UseDisclosureReturnValue = [boolean, UseDisclosureHandlers];\n\nexport function useDisclosure(\n  initialState = false,\n  options: UseDisclosureOptions = {}\n): UseDisclosureReturnValue {\n  const [opened, setOpened] = useState(initialState);\n\n  const open = useCallback(() => {\n    setOpened((isOpened) => {\n      if (!isOpened) {\n        options.onOpen?.();\n        return true;\n      }\n      return isOpened;\n    });\n  }, [options.onOpen]);\n\n  const close = useCallback(() => {\n    setOpened((isOpened) => {\n      if (isOpened) {\n        options.onClose?.();\n        return false;\n      }\n      return isOpened;\n    });\n  }, [options.onClose]);\n\n  const toggle = useCallback(() => {\n    opened ? close() : open();\n  }, [close, open, opened]);\n\n  return [opened, { open, close, toggle }];\n}\n"],"mappings":";;;AAeO,SAASA,cACdC,YAAA,GAAe,OACfC,OAAA,GAAgC,EAAC,EACP;EAC1B,MAAM,CAACC,MAAA,EAAQC,SAAS,IAAIC,QAAA,CAASJ,YAAY;EAEjD,MAAMK,IAAA,GAAOC,WAAA,CAAY,MAAM;IAC7BH,SAAA,CAAWI,QAAA,IAAa;MACtB,IAAI,CAACA,QAAA,EAAU;QACbN,OAAA,CAAQO,MAAA,IAAS;QACjB,OAAO;MACT;MACA,OAAOD,QAAA;IACT,CAAC;EACH,GAAG,CAACN,OAAA,CAAQO,MAAM,CAAC;EAEnB,MAAMC,KAAA,GAAQH,WAAA,CAAY,MAAM;IAC9BH,SAAA,CAAWI,QAAA,IAAa;MACtB,IAAIA,QAAA,EAAU;QACZN,OAAA,CAAQS,OAAA,IAAU;QAClB,OAAO;MACT;MACA,OAAOH,QAAA;IACT,CAAC;EACH,GAAG,CAACN,OAAA,CAAQS,OAAO,CAAC;EAEpB,MAAMC,MAAA,GAASL,WAAA,CAAY,MAAM;IAC/BJ,MAAA,GAASO,KAAA,KAAUJ,IAAA,EAAK;EAC1B,GAAG,CAACI,KAAA,EAAOJ,IAAA,EAAMH,MAAM,CAAC;EAExB,OAAO,CAACA,MAAA,EAAQ;IAAEG,IAAA;IAAMI,KAAA;IAAOE;EAAA,CAAQ;AACzC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}