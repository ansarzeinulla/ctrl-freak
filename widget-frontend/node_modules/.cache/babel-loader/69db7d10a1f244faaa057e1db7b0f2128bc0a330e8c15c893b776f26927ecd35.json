{"ast":null,"code":"'use client';\n\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { extractStyleProps } from '../../core/Box/style-props/extract-style-props/extract-style-props.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InlineInput, InlineInputClasses } from '../../utils/InlineInput/InlineInput.mjs';\nimport { useSwitchGroupContext } from './SwitchGroup.context.mjs';\nimport { SwitchGroup } from './SwitchGroup/SwitchGroup.mjs';\nimport classes from './Switch.module.css.mjs';\nconst defaultProps = {\n  labelPosition: \"right\",\n  withThumbIndicator: true\n};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  size\n}) => ({\n  root: {\n    \"--switch-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--switch-height\": getSize(size, \"switch-height\"),\n    \"--switch-width\": getSize(size, \"switch-width\"),\n    \"--switch-thumb-size\": getSize(size, \"switch-thumb-size\"),\n    \"--switch-label-font-size\": getSize(size, \"switch-label-font-size\"),\n    \"--switch-track-label-padding\": getSize(size, \"switch-track-label-padding\"),\n    \"--switch-color\": color ? getThemeColor(color, theme) : void 0\n  }\n}));\nconst Switch = factory((_props, ref) => {\n  const props = useProps(\"Switch\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    label,\n    offLabel,\n    onLabel,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    thumbIcon,\n    checked,\n    defaultChecked,\n    onChange,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    rootRef,\n    mod,\n    withThumbIndicator,\n    attributes,\n    ...others\n  } = props;\n  const ctx = useSwitchGroupContext();\n  const _size = size || ctx?.size;\n  const getStyles = useStyles({\n    name: \"Switch\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const {\n    styleProps,\n    rest\n  } = extractStyleProps(others);\n  const uuid = useId(id);\n  const contextProps = ctx ? {\n    checked: ctx.value.includes(rest.value),\n    onChange: ctx.onChange\n  } : {};\n  const [_checked, handleChange] = useUncontrolled({\n    value: contextProps.checked ?? checked,\n    defaultValue: defaultChecked,\n    finalValue: false\n  });\n  return /* @__PURE__ */jsxs(InlineInput, {\n    ...getStyles(\"root\"),\n    __staticSelector: \"Switch\",\n    __stylesApiProps: props,\n    id: uuid,\n    size: _size,\n    labelPosition,\n    label,\n    description,\n    error,\n    disabled,\n    bodyElement: \"label\",\n    labelElement: \"span\",\n    classNames,\n    styles,\n    unstyled,\n    \"data-checked\": contextProps.checked || checked || void 0,\n    variant,\n    ref: rootRef,\n    mod,\n    ...styleProps,\n    ...wrapperProps,\n    children: [/* @__PURE__ */jsx(\"input\", {\n      ...rest,\n      disabled,\n      checked: _checked,\n      \"data-checked\": contextProps.checked || checked || void 0,\n      onChange: event => {\n        ctx ? contextProps.onChange?.(event) : onChange?.(event);\n        handleChange(event.currentTarget.checked);\n      },\n      id: uuid,\n      ref,\n      type: \"checkbox\",\n      role: \"switch\",\n      ...getStyles(\"input\")\n    }), /* @__PURE__ */jsxs(Box, {\n      \"aria-hidden\": \"true\",\n      component: \"span\",\n      mod: {\n        error,\n        \"label-position\": labelPosition,\n        \"without-labels\": !onLabel && !offLabel\n      },\n      ...getStyles(\"track\"),\n      children: [/* @__PURE__ */jsx(Box, {\n        component: \"span\",\n        mod: {\n          \"reduce-motion\": true,\n          \"with-thumb-indicator\": withThumbIndicator && !thumbIcon\n        },\n        ...getStyles(\"thumb\"),\n        children: thumbIcon\n      }), /* @__PURE__ */jsx(\"span\", {\n        ...getStyles(\"trackLabel\"),\n        children: _checked ? onLabel : offLabel\n      })]\n    })]\n  });\n});\nSwitch.classes = {\n  ...classes,\n  ...InlineInputClasses\n};\nSwitch.displayName = \"@mantine/core/Switch\";\nSwitch.Group = SwitchGroup;\nexport { Switch };","map":{"version":3,"names":["defaultProps","labelPosition","withThumbIndicator","varsResolver","createVarsResolver","theme","radius","color","size","root","getRadius","getSize","getThemeColor","Switch","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","label","offLabel","onLabel","id","wrapperProps","thumbIcon","checked","defaultChecked","onChange","description","error","disabled","variant","rootRef","mod","attributes","others","ctx","useSwitchGroupContext","_size","getStyles","useStyles","name","classes","styleProps","rest","extractStyleProps","uuid","useId","contextProps","value","includes","_checked","handleChange","useUncontrolled","defaultValue","finalValue","jsxs","InlineInput","__staticSelector","__stylesApiProps","bodyElement","labelElement","children","jsx","event","currentTarget","type","role","Box","component","InlineInputClasses","displayName","Group","SwitchGroup"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Switch/Switch.tsx"],"sourcesContent":["import { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  DataAttributes,\n  ElementProps,\n  extractStyleProps,\n  factory,\n  Factory,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { InlineInput, InlineInputClasses, InlineInputStylesNames } from '../../utils/InlineInput';\nimport { useSwitchGroupContext } from './SwitchGroup.context';\nimport { SwitchGroup } from './SwitchGroup/SwitchGroup';\nimport classes from './Switch.module.css';\n\nexport type SwitchStylesNames =\n  | 'root'\n  | 'track'\n  | 'trackLabel'\n  | 'thumb'\n  | 'input'\n  | InlineInputStylesNames;\n\nexport type SwitchCssVariables = {\n  root:\n    | '--switch-radius'\n    | '--switch-height'\n    | '--switch-width'\n    | '--switch-thumb-size'\n    | '--switch-label-font-size'\n    | '--switch-track-label-padding'\n    | '--switch-color';\n};\n\nexport interface SwitchProps\n  extends BoxProps,\n    StylesApiProps<SwitchFactory>,\n    ElementProps<'input', 'size' | 'children'> {\n  /** Id used to bind input and label, if not passed, unique id will be generated instead */\n  id?: string;\n\n  /** Content of the `label` associated with the radio */\n  label?: React.ReactNode;\n\n  /** Inner label when the `Switch` is in unchecked state */\n  offLabel?: React.ReactNode;\n\n  /** Inner label when the `Switch` is in checked state */\n  onLabel?: React.ReactNode;\n\n  /** Key of `theme.colors` or any valid CSS color to set input color in checked state @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Controls size of all elements */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius,` @default `'xl'` */\n  radius?: MantineRadius;\n\n  /** Props passed down to the root element */\n  wrapperProps?: React.ComponentPropsWithoutRef<'div'> & DataAttributes;\n\n  /** Icon inside the thumb of the switch */\n  thumbIcon?: React.ReactNode;\n\n  /** Position of the label relative to the input @default `'right'` */\n  labelPosition?: 'left' | 'right';\n\n  /** Description displayed below the label */\n  description?: React.ReactNode;\n\n  /** Error displayed below the label */\n  error?: React.ReactNode;\n\n  /** Assigns ref of the root element */\n  rootRef?: React.ForwardedRef<HTMLDivElement>;\n\n  /** If set, the indicator will be displayed inside thumb @default `true` */\n  withThumbIndicator?: boolean;\n}\n\nexport type SwitchFactory = Factory<{\n  props: SwitchProps;\n  ref: HTMLInputElement;\n  stylesNames: SwitchStylesNames;\n  vars: SwitchCssVariables;\n  staticComponents: {\n    Group: typeof SwitchGroup;\n  };\n}>;\n\nconst defaultProps = {\n  labelPosition: 'right',\n  withThumbIndicator: true,\n} satisfies Partial<SwitchProps>;\n\nconst varsResolver = createVarsResolver<SwitchFactory>((theme, { radius, color, size }) => ({\n  root: {\n    '--switch-radius': radius === undefined ? undefined : getRadius(radius),\n    '--switch-height': getSize(size, 'switch-height'),\n    '--switch-width': getSize(size, 'switch-width'),\n    '--switch-thumb-size': getSize(size, 'switch-thumb-size'),\n    '--switch-label-font-size': getSize(size, 'switch-label-font-size'),\n    '--switch-track-label-padding': getSize(size, 'switch-track-label-padding'),\n    '--switch-color': color ? getThemeColor(color, theme) : undefined,\n  },\n}));\n\nexport const Switch = factory<SwitchFactory>((_props, ref) => {\n  const props = useProps('Switch', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    label,\n    offLabel,\n    onLabel,\n    id,\n    size,\n    radius,\n    wrapperProps,\n    thumbIcon,\n    checked,\n    defaultChecked,\n    onChange,\n    labelPosition,\n    description,\n    error,\n    disabled,\n    variant,\n    rootRef,\n    mod,\n    withThumbIndicator,\n    attributes,\n    ...others\n  } = props;\n\n  const ctx = useSwitchGroupContext();\n  const _size = size || ctx?.size;\n\n  const getStyles = useStyles<SwitchFactory>({\n    name: 'Switch',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const { styleProps, rest } = extractStyleProps(others);\n  const uuid = useId(id);\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.value.includes(rest.value as string),\n        onChange: ctx.onChange,\n      }\n    : {};\n\n  const [_checked, handleChange] = useUncontrolled({\n    value: contextProps.checked ?? checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n  });\n\n  return (\n    <InlineInput\n      {...getStyles('root')}\n      __staticSelector=\"Switch\"\n      __stylesApiProps={props}\n      id={uuid}\n      size={_size}\n      labelPosition={labelPosition}\n      label={label}\n      description={description}\n      error={error}\n      disabled={disabled}\n      bodyElement=\"label\"\n      labelElement=\"span\"\n      classNames={classNames}\n      styles={styles}\n      unstyled={unstyled}\n      data-checked={contextProps.checked || checked || undefined}\n      variant={variant}\n      ref={rootRef}\n      mod={mod}\n      {...styleProps}\n      {...wrapperProps}\n    >\n      <input\n        {...rest}\n        disabled={disabled}\n        checked={_checked}\n        data-checked={contextProps.checked || checked || undefined}\n        onChange={(event) => {\n          ctx ? contextProps.onChange?.(event) : onChange?.(event);\n          handleChange(event.currentTarget.checked);\n        }}\n        id={uuid}\n        ref={ref}\n        type=\"checkbox\"\n        role=\"switch\"\n        {...getStyles('input')}\n      />\n\n      <Box\n        aria-hidden=\"true\"\n        component=\"span\"\n        mod={{ error, 'label-position': labelPosition, 'without-labels': !onLabel && !offLabel }}\n        {...getStyles('track')}\n      >\n        <Box\n          component=\"span\"\n          mod={{ 'reduce-motion': true, 'with-thumb-indicator': withThumbIndicator && !thumbIcon }}\n          {...getStyles('thumb')}\n        >\n          {thumbIcon}\n        </Box>\n        <span {...getStyles('trackLabel')}>{_checked ? onLabel : offLabel}</span>\n      </Box>\n    </InlineInput>\n  );\n});\n\nSwitch.classes = { ...classes, ...InlineInputClasses };\nSwitch.displayName = '@mantine/core/Switch';\nSwitch.Group = SwitchGroup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}