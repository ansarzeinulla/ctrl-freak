{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nfunction identity(value) {\n  return value;\n}\nfunction getWithProps(Component) {\n  const _Component = Component;\n  return fixedProps => {\n    const Extended = forwardRef((props, ref) => /* @__PURE__ */jsx(_Component, _objectSpread(_objectSpread(_objectSpread({}, fixedProps), props), {}, {\n      ref\n    })));\n    Extended.extend = _Component.extend;\n    Extended.displayName = \"WithProps(\".concat(_Component.displayName, \")\");\n    return Extended;\n  };\n}\nfunction factory(ui) {\n  const Component = forwardRef(ui);\n  Component.extend = identity;\n  Component.withProps = fixedProps => {\n    const Extended = forwardRef((props, ref) => /* @__PURE__ */jsx(Component, _objectSpread(_objectSpread(_objectSpread({}, fixedProps), props), {}, {\n      ref\n    })));\n    Extended.extend = Component.extend;\n    Extended.displayName = \"WithProps(\".concat(Component.displayName, \")\");\n    return Extended;\n  };\n  return Component;\n}\nexport { factory, getWithProps, identity };","map":{"version":3,"names":["identity","value","getWithProps","Component","_Component","fixedProps","Extended","forwardRef","props","ref","jsx","_objectSpread","extend","displayName","concat","factory","ui","withProps"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/core/factory/factory.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport type { MantineThemeComponent } from '../MantineProvider';\nimport type { ClassNames, PartialVarsResolver, Styles } from '../styles-api';\n\nexport type DataAttributes = Record<`data-${string}`, any>;\n\nexport interface FactoryPayload {\n  props: Record<string, any>;\n  ctx?: any;\n  ref?: any;\n  stylesNames?: string;\n  vars?: any;\n  variant?: string;\n  staticComponents?: Record<string, any>;\n  // Compound components cannot have classNames, styles and vars on MantineProvider\n  compound?: boolean;\n}\n\nexport interface ExtendCompoundComponent<Payload extends FactoryPayload> {\n  defaultProps?: Partial<Payload['props']> & DataAttributes;\n}\n\nexport interface ExtendsRootComponent<Payload extends FactoryPayload> {\n  defaultProps?: Partial<Payload['props']> & DataAttributes & { component?: any };\n  classNames?: ClassNames<Payload>;\n  styles?: Styles<Payload>;\n  vars?: PartialVarsResolver<Payload>;\n}\n\nexport type ExtendComponent<Payload extends FactoryPayload> = Payload['compound'] extends true\n  ? ExtendCompoundComponent<Payload>\n  : ExtendsRootComponent<Payload>;\n\nexport type StaticComponents<Input> =\n  Input extends Record<string, any> ? Input : Record<string, never>;\n\nexport interface ThemeExtend<Payload extends FactoryPayload> {\n  extend: (input: ExtendComponent<Payload>) => MantineThemeComponent;\n}\n\nexport type ComponentClasses<Payload extends FactoryPayload> = {\n  classes: Payload['stylesNames'] extends string ? Record<string, string> : never;\n};\n\nexport type MantineComponentStaticProperties<Payload extends FactoryPayload> =\n  ThemeExtend<Payload> &\n    ComponentClasses<Payload> &\n    StaticComponents<Payload['staticComponents']> &\n    FactoryComponentWithProps<Payload>;\n\nexport type FactoryComponentWithProps<Payload extends FactoryPayload> = {\n  withProps: (props: Partial<Payload['props']>) => React.ForwardRefExoticComponent<\n    Payload['props'] &\n      React.RefAttributes<Payload['ref']> & {\n        component?: any;\n        renderRoot?: (props: Record<string, any>) => React.ReactNode;\n      }\n  >;\n};\n\nexport type MantineComponent<Payload extends FactoryPayload> = React.ForwardRefExoticComponent<\n  Payload['props'] &\n    React.RefAttributes<Payload['ref']> & {\n      component?: any;\n      renderRoot?: (props: Record<string, any>) => React.ReactNode;\n    }\n> &\n  MantineComponentStaticProperties<Payload>;\n\nexport function identity<T>(value: T): T {\n  return value;\n}\n\nexport function getWithProps<T, Props>(Component: T): (props: Partial<Props>) => T {\n  const _Component = Component as any;\n  return (fixedProps: any) => {\n    const Extended = forwardRef((props, ref) => (\n      <_Component {...fixedProps} {...props} ref={ref as any} />\n    )) as any;\n    Extended.extend = _Component.extend;\n    Extended.displayName = `WithProps(${_Component.displayName})`;\n    return Extended;\n  };\n}\n\nexport function factory<Payload extends FactoryPayload>(\n  ui: React.ForwardRefRenderFunction<Payload['ref'], Payload['props']>\n) {\n  const Component = forwardRef(ui) as any;\n\n  Component.extend = identity as any;\n  Component.withProps = (fixedProps: any) => {\n    const Extended = forwardRef((props, ref) => (\n      <Component {...fixedProps} {...props} ref={ref as any} />\n    )) as any;\n    Extended.extend = Component.extend;\n    Extended.displayName = `WithProps(${Component.displayName})`;\n    return Extended;\n  };\n\n  return Component as MantineComponent<Payload>;\n}\n"],"mappings":";;;;;AAqEO,SAASA,SAAYC,KAAA,EAAa;EACvC,OAAOA,KAAA;AACT;AAEO,SAASC,aAAuBC,SAAA,EAA4C;EACjF,MAAMC,UAAA,GAAaD,SAAA;EACnB,OAAQE,UAAA,IAAoB;IAC1B,MAAMC,QAAA,GAAWC,UAAA,CAAW,CAACC,KAAA,EAAOC,GAAA,oBAClCC,GAAA,CAACN,UAAA,EAAAO,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAAeN,UAAA,GAAgBG,KAAA;MAAOC;IAAA,EAAiB,CACzD;IACDH,QAAA,CAASM,MAAA,GAASR,UAAA,CAAWQ,MAAA;IAC7BN,QAAA,CAASO,WAAA,gBAAAC,MAAA,CAA2BV,UAAA,CAAWS,WAAW;IAC1D,OAAOP,QAAA;EACT;AACF;AAEO,SAASS,QACdC,EAAA,EACA;EACA,MAAMb,SAAA,GAAYI,UAAA,CAAWS,EAAE;EAE/Bb,SAAA,CAAUS,MAAA,GAASZ,QAAA;EACnBG,SAAA,CAAUc,SAAA,GAAaZ,UAAA,IAAoB;IACzC,MAAMC,QAAA,GAAWC,UAAA,CAAW,CAACC,KAAA,EAAOC,GAAA,oBAClCC,GAAA,CAACP,SAAA,EAAAQ,aAAA,CAAAA,aAAA,CAAAA,aAAA,KAAcN,UAAA,GAAgBG,KAAA;MAAOC;IAAA,EAAiB,CACxD;IACDH,QAAA,CAASM,MAAA,GAAST,SAAA,CAAUS,MAAA;IAC5BN,QAAA,CAASO,WAAA,gBAAAC,MAAA,CAA2BX,SAAA,CAAUU,WAAW;IACzD,OAAOP,QAAA;EACT;EAEA,OAAOH,SAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}