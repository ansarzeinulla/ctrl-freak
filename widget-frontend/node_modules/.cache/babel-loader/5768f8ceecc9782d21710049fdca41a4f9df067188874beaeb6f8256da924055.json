{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { createContext, useContext } from 'react';\nfunction createOptionalContext() {\n  let initialValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  const Context = createContext(initialValue);\n  const useOptionalContext = () => useContext(Context);\n  const Provider = _ref => {\n    let {\n      children,\n      value\n    } = _ref;\n    return /* @__PURE__ */jsx(Context.Provider, {\n      value,\n      children\n    });\n  };\n  return [Provider, useOptionalContext];\n}\nexport { createOptionalContext };","map":{"version":3,"names":["createOptionalContext","initialValue","arguments","length","undefined","Context","createContext","useOptionalContext","useContext","Provider","_ref","children","value","jsx"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/core/utils/create-optional-context/create-optional-context.tsx"],"sourcesContent":["import { createContext, useContext } from 'react';\n\nexport function createOptionalContext<ContextValue>(initialValue: ContextValue | null = null) {\n  const Context = createContext<ContextValue | null>(initialValue);\n\n  const useOptionalContext = () => useContext(Context);\n\n  const Provider = ({ children, value }: { value: ContextValue; children: React.ReactNode }) => (\n    <Context.Provider value={value}>{children}</Context.Provider>\n  );\n\n  return [Provider, useOptionalContext] as const;\n}\n"],"mappings":";;;;AAEO,SAASA,sBAAA,EAA8E;EAAA,IAA1CC,YAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAoC;EACtF,MAAMG,OAAA,GAAUC,aAAA,CAAmCL,YAAY;EAE/D,MAAMM,kBAAA,GAAqBA,CAAA,KAAMC,UAAA,CAAWH,OAAO;EAEnD,MAAMI,QAAA,GAAWC,IAAA;IAAA,IAAC;MAAEC,QAAA;MAAUC;IAAA,CAAM,GAAAF,IAAA;IAAA,sBAClCG,GAAA,CAACR,OAAA,CAAQI,QAAA,EAAR;MAAiBG,KAAA;MAAeD;IAAA,CAAS;EAAA;EAG5C,OAAO,CAACF,QAAA,EAAUF,kBAAkB;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}