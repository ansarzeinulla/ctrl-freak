{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"radius\", \"color\", \"gradient\", \"leftSection\", \"rightSection\", \"children\", \"variant\", \"fullWidth\", \"autoContrast\", \"circle\", \"mod\", \"attributes\"];\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius, getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Badge.module.css.mjs';\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    radius,\n    color,\n    gradient,\n    variant,\n    size,\n    autoContrast\n  } = _ref;\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    gradient,\n    variant: variant || \"filled\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--badge-height\": getSize(size, \"badge-height\"),\n      \"--badge-padding-x\": getSize(size, \"badge-padding-x\"),\n      \"--badge-fz\": getSize(size, \"badge-fz\"),\n      \"--badge-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--badge-bg\": color || variant ? colors.background : void 0,\n      \"--badge-color\": color || variant ? colors.color : void 0,\n      \"--badge-bd\": color || variant ? colors.border : void 0,\n      \"--badge-dot-color\": variant === \"dot\" ? getThemeColor(color, theme) : void 0\n    }\n  };\n});\nconst Badge = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Badge\", null, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      radius,\n      color,\n      gradient,\n      leftSection,\n      rightSection,\n      children,\n      variant,\n      fullWidth,\n      autoContrast,\n      circle,\n      mod,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"Badge\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsxs(Box, _objectSpread(_objectSpread(_objectSpread({\n    variant,\n    mod: [{\n      block: fullWidth,\n      circle,\n      \"with-right-section\": !!rightSection,\n      \"with-left-section\": !!leftSection\n    }, mod]\n  }, getStyles(\"root\", {\n    variant\n  })), {}, {\n    ref\n  }, others), {}, {\n    children: [leftSection && /* @__PURE__ */jsx(\"span\", _objectSpread(_objectSpread({}, getStyles(\"section\")), {}, {\n      \"data-position\": \"left\",\n      children: leftSection\n    })), /* @__PURE__ */jsx(\"span\", _objectSpread(_objectSpread({}, getStyles(\"label\")), {}, {\n      children\n    })), rightSection && /* @__PURE__ */jsx(\"span\", _objectSpread(_objectSpread({}, getStyles(\"section\")), {}, {\n      \"data-position\": \"right\",\n      children: rightSection\n    }))]\n  }));\n});\nBadge.classes = classes;\nBadge.displayName = \"@mantine/core/Badge\";\nexport { Badge };","map":{"version":3,"names":["varsResolver","createVarsResolver","theme","_ref","radius","color","gradient","variant","size","autoContrast","colors","variantColorResolver","primaryColor","root","getSize","getRadius","background","border","getThemeColor","Badge","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","leftSection","rightSection","children","fullWidth","circle","mod","attributes","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","jsxs","Box","_objectSpread","block","jsx","displayName"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Badge/Badge.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Badge.module.css';\n\nexport type BadgeStylesNames = 'root' | 'section' | 'label';\nexport type BadgeVariant =\n  | 'filled'\n  | 'light'\n  | 'outline'\n  | 'dot'\n  | 'transparent'\n  | 'white'\n  | 'default'\n  | 'gradient';\n\nexport type BadgeCssVariables = {\n  root:\n    | '--badge-height'\n    | '--badge-padding-x'\n    | '--badge-fz'\n    | '--badge-radius'\n    | '--badge-bg'\n    | '--badge-color'\n    | '--badge-bd'\n    | '--badge-dot-color';\n};\n\nexport interface BadgeProps extends BoxProps, StylesApiProps<BadgeFactory> {\n  /** Controls `font-size`, `height` and horizontal `padding` @default `'md'` */\n  size?: MantineSize | (string & {});\n\n  /** If set, badge `min-width` becomes equal to its `height` and horizontal padding is removed */\n  circle?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius` @default `'xl'` */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Gradient configuration used when `variant=\\\"gradient\\\"` @default `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Content displayed on the left side of the badge label */\n  leftSection?: React.ReactNode;\n\n  /** Content displayed on the right side of the badge label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether Badge should take 100% of its parent width @default `false` */\n  fullWidth?: boolean;\n\n  /** Main badge content */\n  children?: React.ReactNode;\n\n  /** If set, adjusts text color based on background color for `filled` variant */\n  autoContrast?: boolean;\n}\n\nexport type BadgeFactory = PolymorphicFactory<{\n  props: BadgeProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: BadgeStylesNames;\n  vars: BadgeCssVariables;\n  variant: BadgeVariant;\n}>;\n\nconst varsResolver = createVarsResolver<BadgeFactory>(\n  (theme, { radius, color, gradient, variant, size, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      gradient,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--badge-height': getSize(size, 'badge-height'),\n        '--badge-padding-x': getSize(size, 'badge-padding-x'),\n        '--badge-fz': getSize(size, 'badge-fz'),\n        '--badge-radius': radius === undefined ? undefined : getRadius(radius),\n        '--badge-bg': color || variant ? colors.background : undefined,\n        '--badge-color': color || variant ? colors.color : undefined,\n        '--badge-bd': color || variant ? colors.border : undefined,\n        '--badge-dot-color': variant === 'dot' ? getThemeColor(color, theme) : undefined,\n      },\n    };\n  }\n);\n\nexport const Badge = polymorphicFactory<BadgeFactory>((_props, ref) => {\n  const props = useProps('Badge', null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    gradient,\n    leftSection,\n    rightSection,\n    children,\n    variant,\n    fullWidth,\n    autoContrast,\n    circle,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<BadgeFactory>({\n    name: 'Badge',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      variant={variant}\n      mod={[\n        {\n          block: fullWidth,\n          circle,\n          'with-right-section': !!rightSection,\n          'with-left-section': !!leftSection,\n        },\n        mod,\n      ]}\n      {...getStyles('root', { variant })}\n      ref={ref}\n      {...others}\n    >\n      {leftSection && (\n        <span {...getStyles('section')} data-position=\"left\">\n          {leftSection}\n        </span>\n      )}\n      <span {...getStyles('label')}>{children}</span>\n      {rightSection && (\n        <span {...getStyles('section')} data-position=\"right\">\n          {rightSection}\n        </span>\n      )}\n    </Box>\n  );\n});\n\nBadge.classes = classes;\nBadge.displayName = '@mantine/core/Badge';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}