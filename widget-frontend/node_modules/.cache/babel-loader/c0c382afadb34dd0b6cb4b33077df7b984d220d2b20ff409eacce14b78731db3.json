{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect, useMemo } from 'react';\nfunction useLongPress(onLongPress, options = {}) {\n  const {\n    threshold = 400,\n    onStart,\n    onFinish,\n    onCancel\n  } = options;\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timeout = useRef(-1);\n  useEffect(() => () => window.clearTimeout(timeout.current), []);\n  return useMemo(() => {\n    if (typeof onLongPress !== \"function\") {\n      return {};\n    }\n    const start = event => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) {\n        return;\n      }\n      if (onStart) {\n        onStart(event);\n      }\n      isPressed.current = true;\n      timeout.current = window.setTimeout(() => {\n        onLongPress(event);\n        isLongPressActive.current = true;\n      }, threshold);\n    };\n    const cancel = event => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) {\n        return;\n      }\n      if (isLongPressActive.current) {\n        if (onFinish) {\n          onFinish(event);\n        }\n      } else if (isPressed.current) {\n        if (onCancel) {\n          onCancel(event);\n        }\n      }\n      isLongPressActive.current = false;\n      isPressed.current = false;\n      if (timeout.current) {\n        window.clearTimeout(timeout.current);\n      }\n    };\n    return {\n      onMouseDown: start,\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchStart: start,\n      onTouchEnd: cancel\n    };\n  }, [onLongPress, threshold, onCancel, onFinish, onStart]);\n}\nfunction isTouchEvent(event) {\n  return window.TouchEvent ? event.nativeEvent instanceof TouchEvent : \"touches\" in event.nativeEvent;\n}\nfunction isMouseEvent(event) {\n  return event.nativeEvent instanceof MouseEvent;\n}\nexport { useLongPress };","map":{"version":3,"names":["useLongPress","onLongPress","options","threshold","onStart","onFinish","onCancel","isLongPressActive","useRef","isPressed","timeout","useEffect","window","clearTimeout","current","useMemo","start","event","isMouseEvent","isTouchEvent","setTimeout","cancel","onMouseDown","onMouseUp","onMouseLeave","onTouchStart","onTouchEnd","TouchEvent","nativeEvent","MouseEvent"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-long-press/use-long-press.ts"],"sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\n\nexport interface UseLongPressOptions {\n  /** Time in milliseconds to trigger the long press, default is 400ms */\n  threshold?: number;\n\n  /** Callback triggered when the long press starts */\n  onStart?: (event: React.MouseEvent | React.TouchEvent) => void;\n\n  /** Callback triggered when the long press finishes */\n  onFinish?: (event: React.MouseEvent | React.TouchEvent) => void;\n\n  /** Callback triggered when the long press is canceled */\n  onCancel?: (event: React.MouseEvent | React.TouchEvent) => void;\n}\n\nexport interface UseLongPressReturnValue {\n  onMouseDown: (event: React.MouseEvent) => void;\n  onMouseUp: (event: React.MouseEvent) => void;\n  onMouseLeave: (event: React.MouseEvent) => void;\n  onTouchStart: (event: React.TouchEvent) => void;\n  onTouchEnd: (event: React.TouchEvent) => void;\n}\n\nexport function useLongPress(\n  onLongPress: (event: React.MouseEvent | React.TouchEvent) => void,\n  options: UseLongPressOptions = {}\n): UseLongPressReturnValue {\n  const { threshold = 400, onStart, onFinish, onCancel } = options;\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timeout = useRef<number>(-1);\n\n  useEffect(() => () => window.clearTimeout(timeout.current), []);\n\n  return useMemo(() => {\n    if (typeof onLongPress !== 'function') {\n      return {} as UseLongPressReturnValue;\n    }\n\n    const start = (event: React.MouseEvent | React.TouchEvent) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) {\n        return;\n      }\n\n      if (onStart) {\n        onStart(event);\n      }\n\n      isPressed.current = true;\n      timeout.current = window.setTimeout(() => {\n        onLongPress(event);\n        isLongPressActive.current = true;\n      }, threshold);\n    };\n\n    const cancel = (event: React.MouseEvent | React.TouchEvent) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) {\n        return;\n      }\n\n      if (isLongPressActive.current) {\n        if (onFinish) {\n          onFinish(event);\n        }\n      } else if (isPressed.current) {\n        if (onCancel) {\n          onCancel(event);\n        }\n      }\n\n      isLongPressActive.current = false;\n      isPressed.current = false;\n\n      if (timeout.current) {\n        window.clearTimeout(timeout.current);\n      }\n    };\n\n    return {\n      onMouseDown: start,\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n      onTouchStart: start,\n      onTouchEnd: cancel,\n    };\n  }, [onLongPress, threshold, onCancel, onFinish, onStart]);\n}\n\nfunction isTouchEvent(event: React.MouseEvent | React.TouchEvent): event is React.TouchEvent {\n  return window.TouchEvent\n    ? event.nativeEvent instanceof TouchEvent\n    : 'touches' in event.nativeEvent;\n}\n\nfunction isMouseEvent(event: React.MouseEvent | React.TouchEvent): event is React.MouseEvent {\n  return event.nativeEvent instanceof MouseEvent;\n}\n"],"mappings":";;;AAwBO,SAASA,aACdC,WAAA,EACAC,OAAA,GAA+B,EAAC,EACP;EACzB,MAAM;IAAEC,SAAA,GAAY;IAAKC,OAAA;IAASC,QAAA;IAAUC;EAAA,CAAS,GAAIJ,OAAA;EACzD,MAAMK,iBAAA,GAAoBC,MAAA,CAAO,KAAK;EACtC,MAAMC,SAAA,GAAYD,MAAA,CAAO,KAAK;EAC9B,MAAME,OAAA,GAAUF,MAAA,CAAe,EAAE;EAEjCG,SAAA,CAAU,MAAM,MAAMC,MAAA,CAAOC,YAAA,CAAaH,OAAA,CAAQI,OAAO,GAAG,EAAE;EAE9D,OAAOC,OAAA,CAAQ,MAAM;IACnB,IAAI,OAAOd,WAAA,KAAgB,YAAY;MACrC,OAAO,EAAC;IACV;IAEA,MAAMe,KAAA,GAASC,KAAA,IAA+C;MAC5D,IAAI,CAACC,YAAA,CAAaD,KAAK,KAAK,CAACE,YAAA,CAAaF,KAAK,GAAG;QAChD;MACF;MAEA,IAAIb,OAAA,EAAS;QACXA,OAAA,CAAQa,KAAK;MACf;MAEAR,SAAA,CAAUK,OAAA,GAAU;MACpBJ,OAAA,CAAQI,OAAA,GAAUF,MAAA,CAAOQ,UAAA,CAAW,MAAM;QACxCnB,WAAA,CAAYgB,KAAK;QACjBV,iBAAA,CAAkBO,OAAA,GAAU;MAC9B,GAAGX,SAAS;IACd;IAEA,MAAMkB,MAAA,GAAUJ,KAAA,IAA+C;MAC7D,IAAI,CAACC,YAAA,CAAaD,KAAK,KAAK,CAACE,YAAA,CAAaF,KAAK,GAAG;QAChD;MACF;MAEA,IAAIV,iBAAA,CAAkBO,OAAA,EAAS;QAC7B,IAAIT,QAAA,EAAU;UACZA,QAAA,CAASY,KAAK;QAChB;MACF,WAAWR,SAAA,CAAUK,OAAA,EAAS;QAC5B,IAAIR,QAAA,EAAU;UACZA,QAAA,CAASW,KAAK;QAChB;MACF;MAEAV,iBAAA,CAAkBO,OAAA,GAAU;MAC5BL,SAAA,CAAUK,OAAA,GAAU;MAEpB,IAAIJ,OAAA,CAAQI,OAAA,EAAS;QACnBF,MAAA,CAAOC,YAAA,CAAaH,OAAA,CAAQI,OAAO;MACrC;IACF;IAEA,OAAO;MACLQ,WAAA,EAAaN,KAAA;MACbO,SAAA,EAAWF,MAAA;MACXG,YAAA,EAAcH,MAAA;MACdI,YAAA,EAAcT,KAAA;MACdU,UAAA,EAAYL;IAAA,CACd;EACF,GAAG,CAACpB,WAAA,EAAaE,SAAA,EAAWG,QAAA,EAAUD,QAAA,EAAUD,OAAO,CAAC;AAC1D;AAEA,SAASe,aAAaF,KAAA,EAAuE;EAC3F,OAAOL,MAAA,CAAOe,UAAA,GACVV,KAAA,CAAMW,WAAA,YAAuBD,UAAA,GAC7B,aAAaV,KAAA,CAAMW,WAAA;AACzB;AAEA,SAASV,aAAaD,KAAA,EAAuE;EAC3F,OAAOA,KAAA,CAAMW,WAAA,YAAuBC,UAAA;AACtC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}