{"ast":null,"code":"/**\n * @license @tabler/icons-react v3.35.0 - MIT\n *\n * This source code is licensed under the MIT license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes.mjs';\nconst createReactComponent = (type, iconName, iconNamePascal, iconNode) => {\n  const Component = forwardRef(({\n    color = \"currentColor\",\n    size = 24,\n    stroke = 2,\n    title,\n    className,\n    children,\n    ...rest\n  }, ref) => createElement(\"svg\", {\n    ref,\n    ...defaultAttributes[type],\n    width: size,\n    height: size,\n    className: [`tabler-icon`, `tabler-icon-${iconName}`, className].join(\" \"),\n    ...(type === \"filled\" ? {\n      fill: color\n    } : {\n      strokeWidth: stroke,\n      stroke: color\n    }),\n    ...rest\n  }, [title && createElement(\"title\", {\n    key: \"svg-title\"\n  }, title), ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)), ...(Array.isArray(children) ? children : [children])]));\n  Component.displayName = `${iconNamePascal}`;\n  return Component;\n};\nexport { createReactComponent as default };","map":{"version":3,"names":["createReactComponent","type","iconName","iconNamePascal","iconNode","Component","forwardRef","color","size","stroke","title","className","children","rest","ref","createElement","defaultAttributes","width","height","join","fill","strokeWidth","key","map","tag","attrs","Array","isArray","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@tabler/icons-react/src/createReactComponent.ts"],"sourcesContent":["import { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes';\nimport type { IconNode, IconProps, Icon } from './types';\n\nconst createReactComponent = (\n  type: 'outline' | 'filled',\n  iconName: string,\n  iconNamePascal: string,\n  iconNode: IconNode,\n) => {\n  const Component = forwardRef<Icon, IconProps>(\n    (\n      { color = 'currentColor', size = 24, stroke = 2, title, className, children, ...rest }: IconProps,\n      ref,\n    ) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes[type],\n          width: size,\n          height: size,\n          className: [`tabler-icon`, `tabler-icon-${iconName}`, className].join(' '),\n          ...(type === 'filled'\n            ? {\n                fill: color,\n              }\n            : {\n                strokeWidth: stroke,\n                stroke: color,\n              }),\n          ...rest,\n        },\n        [\n          title && createElement('title', { key: 'svg-title' }, title),\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(Array.isArray(children) ? children : [children]),\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n\nexport default createReactComponent;\n"],"mappings":";;;;;;;;;AAIA,MAAMA,oBAAA,GAAuBA,CAC3BC,IAAA,EACAC,QAAA,EACAC,cAAA,EACAC,QAAA,KACG;EACH,MAAMC,SAAA,GAAYC,UAAA,CAChB,CACE;IAAEC,KAAA,GAAQ;IAAgBC,IAAA,GAAO;IAAIC,MAAA,GAAS;IAAGC,KAAA;IAAOC,SAAA;IAAWC,QAAA;IAAU,GAAGC;EAAA,GAChFC,GAAA,KAEAC,aAAA,CACE,OACA;IACED,GAAA;IACA,GAAGE,iBAAA,CAAkBf,IAAI;IACzBgB,KAAA,EAAOT,IAAA;IACPU,MAAA,EAAQV,IAAA;IACRG,SAAA,EAAW,CAAC,eAAe,eAAeT,QAAQ,IAAIS,SAAS,EAAEQ,IAAA,CAAK,GAAG;IACzE,IAAIlB,IAAA,KAAS,WACT;MACEmB,IAAA,EAAMb;IAAA,CACR,GACA;MACEc,WAAA,EAAaZ,MAAA;MACbA,MAAA,EAAQF;IAAA,CACV;IACJ,GAAGM;EAAA,CACL,EACA,CACEH,KAAA,IAASK,aAAA,CAAc,SAAS;IAAEO,GAAA,EAAK;EAAA,GAAeZ,KAAK,GAC3D,GAAGN,QAAA,CAASmB,GAAA,CAAI,CAAC,CAACC,GAAA,EAAKC,KAAK,MAAMV,aAAA,CAAcS,GAAA,EAAKC,KAAK,CAAC,GAC3D,IAAIC,KAAA,CAAMC,OAAA,CAAQf,QAAQ,IAAIA,QAAA,GAAW,CAACA,QAAQ,GACpD,CACF,CACJ;EAEAP,SAAA,CAAUuB,WAAA,GAAc,GAAGzB,cAAc;EAEzC,OAAOE,SAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}