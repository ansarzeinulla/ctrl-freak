{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"grow\", \"gutter\", \"columns\", \"align\", \"justify\", \"children\", \"breakpoints\", \"type\", \"attributes\"];\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { useRandomClassName } from '../../core/Box/use-random-classname/use-random-classname.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { GridProvider } from './Grid.context.mjs';\nimport { GridCol } from './GridCol/GridCol.mjs';\nimport { GridVariables } from './GridVariables.mjs';\nimport classes from './Grid.module.css.mjs';\nconst defaultProps = {\n  gutter: \"md\",\n  grow: false,\n  columns: 12\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    justify,\n    align,\n    overflow\n  } = _ref;\n  return {\n    root: {\n      \"--grid-justify\": justify,\n      \"--grid-align\": align,\n      \"--grid-overflow\": overflow\n    }\n  };\n});\nconst Grid = factory((_props, ref) => {\n  const props = useProps(\"Grid\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      grow,\n      gutter,\n      columns,\n      align,\n      justify,\n      children,\n      breakpoints,\n      type,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"Grid\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const responsiveClassName = useRandomClassName();\n  if (type === \"container\" && breakpoints) {\n    return /* @__PURE__ */jsxs(GridProvider, {\n      value: {\n        getStyles,\n        grow,\n        columns,\n        breakpoints,\n        type\n      },\n      children: [/* @__PURE__ */jsx(GridVariables, _objectSpread({\n        selector: \".\".concat(responsiveClassName)\n      }, props)), /* @__PURE__ */jsx(\"div\", _objectSpread(_objectSpread({}, getStyles(\"container\")), {}, {\n        children: /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread(_objectSpread({\n          ref\n        }, getStyles(\"root\", {\n          className: responsiveClassName\n        })), others), {}, {\n          children: /* @__PURE__ */jsx(\"div\", _objectSpread(_objectSpread({}, getStyles(\"inner\")), {}, {\n            children\n          }))\n        }))\n      }))]\n    });\n  }\n  return /* @__PURE__ */jsxs(GridProvider, {\n    value: {\n      getStyles,\n      grow,\n      columns,\n      breakpoints,\n      type\n    },\n    children: [/* @__PURE__ */jsx(GridVariables, _objectSpread({\n      selector: \".\".concat(responsiveClassName)\n    }, props)), /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread(_objectSpread({\n      ref\n    }, getStyles(\"root\", {\n      className: responsiveClassName\n    })), others), {}, {\n      children: /* @__PURE__ */jsx(\"div\", _objectSpread(_objectSpread({}, getStyles(\"inner\")), {}, {\n        children\n      }))\n    }))]\n  });\n});\nGrid.classes = classes;\nGrid.displayName = \"@mantine/core/Grid\";\nGrid.Col = GridCol;\nexport { Grid };","map":{"version":3,"names":["defaultProps","gutter","grow","columns","varsResolver","createVarsResolver","_","_ref","justify","align","overflow","root","Grid","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","breakpoints","type","attributes","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","responsiveClassName","useRandomClassName","jsxs","GridProvider","value","jsx","GridVariables","_objectSpread","selector","concat","Box","displayName","Col","GridCol"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Grid/Grid.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  MantineSpacing,\n  StyleProp,\n  StylesApiProps,\n  useProps,\n  useRandomClassName,\n  useStyles,\n} from '../../core';\nimport { GridBreakpoints, GridProvider } from './Grid.context';\nimport { GridCol } from './GridCol/GridCol';\nimport { GridVariables } from './GridVariables';\nimport classes from './Grid.module.css';\n\nexport type GridStylesNames = 'root' | 'col' | 'inner' | 'container';\nexport type GridCssVariables = {\n  root: '--grid-justify' | '--grid-align' | '--grid-overflow';\n};\n\nexport interface GridProps extends BoxProps, StylesApiProps<GridFactory>, ElementProps<'div'> {\n  /** Gutter between columns, key of `theme.spacing` or any valid CSS value @default `'md'` */\n  gutter?: StyleProp<MantineSpacing>;\n\n  /** If set, columns in the last row expand to fill all available space @default `false` */\n  grow?: boolean;\n\n  /** Sets `justify-content` @default `flex-start` */\n  justify?: React.CSSProperties['justifyContent'];\n\n  /** Sets `align-items` @default `stretch` */\n  align?: React.CSSProperties['alignItems'];\n\n  /** Number of columns in each row @default `12` */\n  columns?: number;\n\n  /** Sets `overflow` CSS property on the root element @default `'visible'` */\n  overflow?: React.CSSProperties['overflow'];\n\n  /** Type of queries used for responsive styles @default `'media'` */\n  type?: 'media' | 'container';\n\n  /** Breakpoints values, only used with `type=\"container\"` */\n  breakpoints?: GridBreakpoints;\n}\n\nexport type GridFactory = Factory<{\n  props: GridProps;\n  ref: HTMLDivElement;\n  stylesNames: GridStylesNames;\n  vars: GridCssVariables;\n  staticComponents: {\n    Col: typeof GridCol;\n  };\n}>;\n\nconst defaultProps = {\n  gutter: 'md',\n  grow: false,\n  columns: 12,\n} satisfies Partial<GridProps>;\n\nconst varsResolver = createVarsResolver<GridFactory>((_, { justify, align, overflow }) => ({\n  root: {\n    '--grid-justify': justify,\n    '--grid-align': align,\n    '--grid-overflow': overflow,\n  },\n}));\n\nexport const Grid = factory<GridFactory>((_props, ref) => {\n  const props = useProps('Grid', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    grow,\n    gutter,\n    columns,\n    align,\n    justify,\n    children,\n    breakpoints,\n    type,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<GridFactory>({\n    name: 'Grid',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const responsiveClassName = useRandomClassName();\n\n  if (type === 'container' && breakpoints) {\n    return (\n      <GridProvider value={{ getStyles, grow, columns, breakpoints, type }}>\n        <GridVariables selector={`.${responsiveClassName}`} {...props} />\n        <div {...getStyles('container')}>\n          <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others}>\n            <div {...getStyles('inner')}>{children}</div>\n          </Box>\n        </div>\n      </GridProvider>\n    );\n  }\n\n  return (\n    <GridProvider value={{ getStyles, grow, columns, breakpoints, type }}>\n      <GridVariables selector={`.${responsiveClassName}`} {...props} />\n      <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others}>\n        <div {...getStyles('inner')}>{children}</div>\n      </Box>\n    </GridProvider>\n  );\n});\n\nGrid.classes = classes;\nGrid.displayName = '@mantine/core/Grid';\nGrid.Col = GridCol;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}