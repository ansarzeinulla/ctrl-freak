{"ast":null,"code":"'use client';\n\nimport { round } from './parsers.mjs';\nfunction hsvaToRgbaObject(_ref) {\n  let {\n    h,\n    s,\n    v,\n    a\n  } = _ref;\n  const _h = h / 360 * 6;\n  const _s = s / 100;\n  const _v = v / 100;\n  const hh = Math.floor(_h);\n  const l = _v * (1 - _s);\n  const c = _v * (1 - (_h - hh) * _s);\n  const d = _v * (1 - (1 - _h + hh) * _s);\n  const module = hh % 6;\n  return {\n    r: round([_v, c, l, l, d, _v][module] * 255),\n    g: round([d, _v, _v, c, l, l][module] * 255),\n    b: round([l, l, d, _v, _v, c][module] * 255),\n    a: round(a, 2)\n  };\n}\nfunction hsvaToRgba(color, includeAlpha) {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = hsvaToRgbaObject(color);\n  if (!includeAlpha) {\n    return \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\");\n  }\n  return \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", \").concat(round(a, 2), \")\");\n}\nfunction hsvaToHsl(_ref2, includeAlpha) {\n  let {\n    h,\n    s,\n    v,\n    a\n  } = _ref2;\n  const hh = (200 - s) * v / 100;\n  const result = {\n    h: Math.round(h),\n    s: Math.round(hh > 0 && hh < 200 ? s * v / 100 / (hh <= 100 ? hh : 200 - hh) * 100 : 0),\n    l: Math.round(hh / 2)\n  };\n  if (!includeAlpha) {\n    return \"hsl(\".concat(result.h, \", \").concat(result.s, \"%, \").concat(result.l, \"%)\");\n  }\n  return \"hsla(\".concat(result.h, \", \").concat(result.s, \"%, \").concat(result.l, \"%, \").concat(round(a, 2), \")\");\n}\nfunction formatHexPart(number) {\n  const hex = number.toString(16);\n  return hex.length < 2 ? \"0\".concat(hex) : hex;\n}\nfunction hsvaToHex(color) {\n  const {\n    r,\n    g,\n    b\n  } = hsvaToRgbaObject(color);\n  return \"#\".concat(formatHexPart(r)).concat(formatHexPart(g)).concat(formatHexPart(b));\n}\nfunction hsvaToHexa(color) {\n  const a = Math.round(color.a * 255);\n  return \"\".concat(hsvaToHex(color)).concat(formatHexPart(a));\n}\nconst CONVERTERS = {\n  hex: hsvaToHex,\n  hexa: color => hsvaToHexa(color),\n  rgb: color => hsvaToRgba(color, false),\n  rgba: color => hsvaToRgba(color, true),\n  hsl: color => hsvaToHsl(color, false),\n  hsla: color => hsvaToHsl(color, true)\n};\nfunction convertHsvaTo(format, color) {\n  if (!color) {\n    return \"#000000\";\n  }\n  if (!(format in CONVERTERS)) {\n    return CONVERTERS.hex(color);\n  }\n  return CONVERTERS[format](color);\n}\nexport { convertHsvaTo, hsvaToHex, hsvaToHexa, hsvaToHsl, hsvaToRgba, hsvaToRgbaObject };","map":{"version":3,"names":["hsvaToRgbaObject","_ref","h","s","v","a","_h","_s","_v","hh","Math","floor","l","c","d","module","r","round","g","b","hsvaToRgba","color","includeAlpha","concat","hsvaToHsl","_ref2","result","formatHexPart","number","hex","toString","length","hsvaToHex","hsvaToHexa","CONVERTERS","hexa","rgb","rgba","hsl","hsla","convertHsvaTo","format"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/ColorPicker/converters/converters.ts"],"sourcesContent":["import { ColorFormat, HsvaColor, RgbaColor } from '../ColorPicker.types';\nimport { round } from './parsers';\n\nexport function hsvaToRgbaObject({ h, s, v, a }: HsvaColor): RgbaColor {\n  const _h = (h / 360) * 6;\n  const _s = s / 100;\n  const _v = v / 100;\n\n  const hh = Math.floor(_h);\n  const l = _v * (1 - _s);\n  const c = _v * (1 - (_h - hh) * _s);\n  const d = _v * (1 - (1 - _h + hh) * _s);\n  const module = hh % 6;\n\n  return {\n    r: round([_v, c, l, l, d, _v][module] * 255),\n    g: round([d, _v, _v, c, l, l][module] * 255),\n    b: round([l, l, d, _v, _v, c][module] * 255),\n    a: round(a, 2),\n  };\n}\n\nexport function hsvaToRgba(color: HsvaColor, includeAlpha: boolean) {\n  const { r, g, b, a } = hsvaToRgbaObject(color);\n\n  if (!includeAlpha) {\n    return `rgb(${r}, ${g}, ${b})`;\n  }\n\n  return `rgba(${r}, ${g}, ${b}, ${round(a, 2)})`;\n}\n\nexport function hsvaToHsl({ h, s, v, a }: HsvaColor, includeAlpha: boolean) {\n  const hh = ((200 - s) * v) / 100;\n\n  const result = {\n    h: Math.round(h),\n    s: Math.round(hh > 0 && hh < 200 ? ((s * v) / 100 / (hh <= 100 ? hh : 200 - hh)) * 100 : 0),\n    l: Math.round(hh / 2),\n  };\n\n  if (!includeAlpha) {\n    return `hsl(${result.h}, ${result.s}%, ${result.l}%)`;\n  }\n\n  return `hsla(${result.h}, ${result.s}%, ${result.l}%, ${round(a, 2)})`;\n}\n\nfunction formatHexPart(number: number) {\n  const hex = number.toString(16);\n  return hex.length < 2 ? `0${hex}` : hex;\n}\n\nexport function hsvaToHex(color: HsvaColor) {\n  const { r, g, b } = hsvaToRgbaObject(color);\n  return `#${formatHexPart(r)}${formatHexPart(g)}${formatHexPart(b)}`;\n}\n\nexport function hsvaToHexa(color: HsvaColor) {\n  const a = Math.round(color.a * 255);\n\n  return `${hsvaToHex(color)}${formatHexPart(a)}`;\n}\n\nconst CONVERTERS: Record<ColorFormat, (color: HsvaColor) => string> = {\n  hex: hsvaToHex,\n  hexa: (color) => hsvaToHexa(color),\n  rgb: (color) => hsvaToRgba(color, false),\n  rgba: (color) => hsvaToRgba(color, true),\n  hsl: (color) => hsvaToHsl(color, false),\n  hsla: (color) => hsvaToHsl(color, true),\n};\n\nexport function convertHsvaTo(format: ColorFormat, color: HsvaColor) {\n  if (!color) {\n    return '#000000';\n  }\n\n  if (!(format in CONVERTERS)) {\n    return CONVERTERS.hex(color);\n  }\n\n  return CONVERTERS[format](color);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}