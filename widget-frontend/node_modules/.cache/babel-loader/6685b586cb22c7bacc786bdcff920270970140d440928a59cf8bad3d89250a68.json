{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useMenuContext } from '../Menu.context.mjs';\nfunction MenuSubTarget(_ref) {\n  let {\n    children,\n    refProp\n  } = _ref;\n  if (!isElement(children)) {\n    throw new Error(\"Menu.Sub.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  useMenuContext();\n  return /* @__PURE__ */jsx(Popover.Target, {\n    refProp,\n    popupType: \"menu\",\n    children\n  });\n}\nMenuSubTarget.displayName = \"@mantine/core/MenuSubTarget\";\nexport { MenuSubTarget };","map":{"version":3,"names":["MenuSubTarget","_ref","children","refProp","isElement","Error","useMenuContext","jsx","Popover","Target","popupType","displayName"],"sources":["/Users/ansarzeinulla/Desktop/ctrl-freak/widget-frontend/node_modules/@mantine/core/src/components/Menu/MenuSubTarget/MenuSubTarget.tsx"],"sourcesContent":["import { isElement } from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useMenuContext } from '../Menu.context';\n\nexport interface MenuSubTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop used to get element ref @default 'ref' */\n  refProp?: string;\n}\n\nexport function MenuSubTarget({ children, refProp }: MenuSubTargetProps) {\n  if (!isElement(children)) {\n    throw new Error(\n      'Menu.Sub.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  useMenuContext();\n\n  return (\n    <Popover.Target refProp={refProp} popupType=\"menu\">\n      {children}\n    </Popover.Target>\n  );\n}\n\nMenuSubTarget.displayName = '@mantine/core/MenuSubTarget';\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAYO,SAASA,cAAAC,IAAA,EAAyD;EAAA,IAA3C;IAAEC,QAAA;IAAUC;EAAA,CAAQ,GAAAF,IAAA;EAChD,IAAI,CAACG,SAAA,CAAUF,QAAQ,GAAG;IACxB,MAAM,IAAIG,KAAA,CACR,oKACF;EACF;EAEAC,cAAA,EAAe;EAEf,sBAAAC,GAAA,CACGC,OAAA,CAAQC,MAAA,EAAR;IAAeN,OAAA;IAAkBO,SAAA,EAAU;IACzCR;EAAA,CACH;AAEJ;AAEAF,aAAA,CAAcW,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}