{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nfunction horizontalSide(placement, arrowY, arrowOffset, arrowPosition) {\n  if (placement === \"center\" || arrowPosition === \"center\") {\n    return {\n      top: arrowY\n    };\n  }\n  if (placement === \"end\") {\n    return {\n      bottom: arrowOffset\n    };\n  }\n  if (placement === \"start\") {\n    return {\n      top: arrowOffset\n    };\n  }\n  return {};\n}\nfunction verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir) {\n  if (placement === \"center\" || arrowPosition === \"center\") {\n    return {\n      left: arrowX\n    };\n  }\n  if (placement === \"end\") {\n    return {\n      [dir === \"ltr\" ? \"right\" : \"left\"]: arrowOffset\n    };\n  }\n  if (placement === \"start\") {\n    return {\n      [dir === \"ltr\" ? \"left\" : \"right\"]: arrowOffset\n    };\n  }\n  return {};\n}\nconst radiusByFloatingSide = {\n  bottom: \"borderTopLeftRadius\",\n  left: \"borderTopRightRadius\",\n  right: \"borderBottomLeftRadius\",\n  top: \"borderBottomRightRadius\"\n};\nfunction getArrowPositionStyles(_ref) {\n  let {\n    position,\n    arrowSize,\n    arrowOffset,\n    arrowRadius,\n    arrowPosition,\n    arrowX,\n    arrowY,\n    dir\n  } = _ref;\n  const [side, placement = \"center\"] = position.split(\"-\");\n  const baseStyles = {\n    width: arrowSize,\n    height: arrowSize,\n    transform: \"rotate(45deg)\",\n    position: \"absolute\",\n    [radiusByFloatingSide[side]]: arrowRadius\n  };\n  const arrowPlacement = -arrowSize / 2;\n  if (side === \"left\") {\n    return _objectSpread(_objectSpread(_objectSpread({}, baseStyles), horizontalSide(placement, arrowY, arrowOffset, arrowPosition)), {}, {\n      right: arrowPlacement,\n      borderLeftColor: \"transparent\",\n      borderBottomColor: \"transparent\",\n      clipPath: \"polygon(100% 0, 0 0, 100% 100%)\"\n    });\n  }\n  if (side === \"right\") {\n    return _objectSpread(_objectSpread(_objectSpread({}, baseStyles), horizontalSide(placement, arrowY, arrowOffset, arrowPosition)), {}, {\n      left: arrowPlacement,\n      borderRightColor: \"transparent\",\n      borderTopColor: \"transparent\",\n      clipPath: \"polygon(0 100%, 0 0, 100% 100%)\"\n    });\n  }\n  if (side === \"top\") {\n    return _objectSpread(_objectSpread(_objectSpread({}, baseStyles), verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir)), {}, {\n      bottom: arrowPlacement,\n      borderTopColor: \"transparent\",\n      borderLeftColor: \"transparent\",\n      clipPath: \"polygon(0 100%, 100% 100%, 100% 0)\"\n    });\n  }\n  if (side === \"bottom\") {\n    return _objectSpread(_objectSpread(_objectSpread({}, baseStyles), verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir)), {}, {\n      top: arrowPlacement,\n      borderBottomColor: \"transparent\",\n      borderRightColor: \"transparent\",\n      clipPath: \"polygon(0 100%, 0 0, 100% 0)\"\n    });\n  }\n  return {};\n}\nexport { getArrowPositionStyles };","map":{"version":3,"names":["horizontalSide","placement","arrowY","arrowOffset","arrowPosition","top","bottom","verticalSide","arrowX","dir","left","radiusByFloatingSide","right","getArrowPositionStyles","_ref","position","arrowSize","arrowRadius","side","split","baseStyles","width","height","transform","arrowPlacement","_objectSpread","borderLeftColor","borderBottomColor","clipPath","borderRightColor","borderTopColor"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/utils/Floating/FloatingArrow/get-arrow-position-styles.ts"],"sourcesContent":["import type { ArrowPosition, FloatingPlacement, FloatingPosition, FloatingSide } from '../types';\n\nfunction horizontalSide(\n  placement: FloatingPlacement | 'center',\n  arrowY: number | undefined,\n  arrowOffset: number,\n  arrowPosition: ArrowPosition\n) {\n  if (placement === 'center' || arrowPosition === 'center') {\n    return { top: arrowY };\n  }\n\n  if (placement === 'end') {\n    return { bottom: arrowOffset };\n  }\n\n  if (placement === 'start') {\n    return { top: arrowOffset };\n  }\n\n  return {};\n}\n\nfunction verticalSide(\n  placement: FloatingPlacement | 'center',\n  arrowX: number | undefined,\n  arrowOffset: number,\n  arrowPosition: ArrowPosition,\n  dir: 'rtl' | 'ltr'\n) {\n  if (placement === 'center' || arrowPosition === 'center') {\n    return { left: arrowX };\n  }\n\n  if (placement === 'end') {\n    return { [dir === 'ltr' ? 'right' : 'left']: arrowOffset };\n  }\n\n  if (placement === 'start') {\n    return { [dir === 'ltr' ? 'left' : 'right']: arrowOffset };\n  }\n\n  return {};\n}\n\nconst radiusByFloatingSide: Record<\n  FloatingSide,\n  keyof Pick<\n    React.CSSProperties,\n    | 'borderBottomLeftRadius'\n    | 'borderBottomRightRadius'\n    | 'borderTopLeftRadius'\n    | 'borderTopRightRadius'\n  >\n> = {\n  bottom: 'borderTopLeftRadius',\n  left: 'borderTopRightRadius',\n  right: 'borderBottomLeftRadius',\n  top: 'borderBottomRightRadius',\n};\n\nexport function getArrowPositionStyles({\n  position,\n  arrowSize,\n  arrowOffset,\n  arrowRadius,\n  arrowPosition,\n  arrowX,\n  arrowY,\n  dir,\n}: {\n  position: FloatingPosition;\n  arrowSize: number;\n  arrowOffset: number;\n  arrowRadius: number;\n  arrowPosition: ArrowPosition;\n  arrowX: number | undefined;\n  arrowY: number | undefined;\n  dir: 'rtl' | 'ltr';\n}) {\n  const [side, placement = 'center'] = position.split('-') as [FloatingSide, FloatingPlacement];\n  const baseStyles = {\n    width: arrowSize,\n    height: arrowSize,\n    transform: 'rotate(45deg)',\n    position: 'absolute',\n    [radiusByFloatingSide[side]]: arrowRadius,\n  };\n\n  const arrowPlacement = -arrowSize / 2;\n\n  if (side === 'left') {\n    return {\n      ...baseStyles,\n      ...horizontalSide(placement, arrowY, arrowOffset, arrowPosition),\n      right: arrowPlacement,\n      borderLeftColor: 'transparent',\n      borderBottomColor: 'transparent',\n      clipPath: 'polygon(100% 0, 0 0, 100% 100%)',\n    };\n  }\n\n  if (side === 'right') {\n    return {\n      ...baseStyles,\n      ...horizontalSide(placement, arrowY, arrowOffset, arrowPosition),\n      left: arrowPlacement,\n      borderRightColor: 'transparent',\n      borderTopColor: 'transparent',\n      clipPath: 'polygon(0 100%, 0 0, 100% 100%)',\n    };\n  }\n\n  if (side === 'top') {\n    return {\n      ...baseStyles,\n      ...verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir),\n      bottom: arrowPlacement,\n      borderTopColor: 'transparent',\n      borderLeftColor: 'transparent',\n      clipPath: 'polygon(0 100%, 100% 100%, 100% 0)',\n    };\n  }\n\n  if (side === 'bottom') {\n    return {\n      ...baseStyles,\n      ...verticalSide(placement, arrowX, arrowOffset, arrowPosition, dir),\n      top: arrowPlacement,\n      borderBottomColor: 'transparent',\n      borderRightColor: 'transparent',\n      clipPath: 'polygon(0 100%, 0 0, 100% 0)',\n    };\n  }\n\n  return {};\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}