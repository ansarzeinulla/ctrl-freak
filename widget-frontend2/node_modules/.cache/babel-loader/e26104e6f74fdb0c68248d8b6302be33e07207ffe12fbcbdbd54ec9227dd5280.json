{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef, createElement } from 'react';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport { luminance } from '../../../core/MantineProvider/color-functions/luminance/luminance.mjs';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../../Checkbox/Checkbox.mjs';\nimport '../../Checkbox/CheckboxGroup/CheckboxGroup.mjs';\nimport { CheckIcon } from '../../Checkbox/CheckIcon.mjs';\nimport '../../Checkbox/CheckboxIndicator/CheckboxIndicator.mjs';\nimport '../../Checkbox/CheckboxCard/CheckboxCard.mjs';\nimport '../../Checkbox/CheckboxCard/CheckboxCard.context.mjs';\nimport '../../Checkbox/CheckboxGroup.context.mjs';\nimport { ColorSwatch } from '../../ColorSwatch/ColorSwatch.mjs';\nimport { useColorPickerContext } from '../ColorPicker.context.mjs';\nconst Swatches = forwardRef(({\n  className,\n  datatype,\n  setValue,\n  onChangeEnd,\n  size,\n  focusable,\n  data,\n  swatchesPerRow,\n  value,\n  ...others\n}, ref) => {\n  const ctx = useColorPickerContext();\n  const colors = data.map((color, index) => /* @__PURE__ */createElement(ColorSwatch, {\n    ...ctx.getStyles(\"swatch\"),\n    unstyled: ctx.unstyled,\n    component: \"button\",\n    type: \"button\",\n    color,\n    key: index,\n    radius: \"sm\",\n    onClick: () => {\n      setValue(color);\n      onChangeEnd?.(color);\n    },\n    \"aria-label\": color,\n    tabIndex: focusable ? 0 : -1,\n    \"data-swatch\": true\n  }, value === color && /* @__PURE__ */jsx(CheckIcon, {\n    size: \"35%\",\n    color: luminance(color) < 0.5 ? \"white\" : \"black\"\n  })));\n  return /* @__PURE__ */jsx(Box, {\n    ...ctx.getStyles(\"swatches\"),\n    ref,\n    ...others,\n    children: colors\n  });\n});\nSwatches.displayName = \"@mantine/core/Swatches\";\nexport { Swatches };","map":{"version":3,"names":["Swatches","forwardRef","className","datatype","setValue","onChangeEnd","size","focusable","data","swatchesPerRow","value","others","ref","ctx","useColorPickerContext","colors","map","color","index","createElement","ColorSwatch","getStyles","unstyled","component","type","key","radius","onClick","tabIndex","jsx","CheckIcon","luminance","Box","children","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/ColorPicker/Swatches/Swatches.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { Box, ElementProps, luminance } from '../../../core';\nimport { CheckIcon } from '../../Checkbox';\nimport { ColorSwatch } from '../../ColorSwatch';\nimport { useColorPickerContext } from '../ColorPicker.context';\n\nexport interface SwatchesProps extends ElementProps<'div'> {\n  size?: string | number;\n  data: string[];\n  swatchesPerRow?: number;\n  focusable?: boolean;\n  value?: string;\n  onChangeEnd?: (color: string) => void;\n  setValue: (value: string) => void;\n}\n\nexport const Swatches = forwardRef<HTMLDivElement, SwatchesProps>(\n  (\n    {\n      className,\n      datatype,\n      setValue,\n      onChangeEnd,\n      size,\n      focusable,\n      data,\n      swatchesPerRow,\n      value,\n      ...others\n    },\n    ref\n  ) => {\n    const ctx = useColorPickerContext()!;\n\n    const colors = data.map((color, index) => (\n      <ColorSwatch\n        {...ctx.getStyles('swatch')}\n        unstyled={ctx.unstyled}\n        component=\"button\"\n        type=\"button\"\n        color={color}\n        key={index}\n        radius=\"sm\"\n        onClick={() => {\n          setValue(color);\n          onChangeEnd?.(color);\n        }}\n        aria-label={color}\n        tabIndex={focusable ? 0 : -1}\n        data-swatch\n      >\n        {value === color && (\n          <CheckIcon size=\"35%\" color={luminance(color) < 0.5 ? 'white' : 'black'} />\n        )}\n      </ColorSwatch>\n    ));\n\n    return (\n      <Box {...ctx.getStyles('swatches')} ref={ref} {...others}>\n        {colors}\n      </Box>\n    );\n  }\n);\n\nSwatches.displayName = '@mantine/core/Swatches';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAgBO,MAAMA,QAAA,GAAWC,UAAA,CACtB,CACE;EACEC,SAAA;EACAC,QAAA;EACAC,QAAA;EACAC,WAAA;EACAC,IAAA;EACAC,SAAA;EACAC,IAAA;EACAC,cAAA;EACAC,KAAA;EACA,GAAGC;AAAA,GAELC,GAAA,KACG;EACH,MAAMC,GAAA,GAAMC,qBAAA,EAAsB;EAElC,MAAMC,MAAA,GAASP,IAAA,CAAKQ,GAAA,CAAI,CAACC,KAAA,EAAOC,KAAA,oBAC9BC,aAAA,CAACC,WAAA;IACE,GAAGP,GAAA,CAAIQ,SAAA,CAAU,QAAQ;IAC1BC,QAAA,EAAUT,GAAA,CAAIS,QAAA;IACdC,SAAA,EAAU;IACVC,IAAA,EAAK;IACLP,KAAA;IACAQ,GAAA,EAAKP,KAAA;IACLQ,MAAA,EAAO;IACPC,OAAA,EAASA,CAAA,KAAM;MACbvB,QAAA,CAASa,KAAK;MACdZ,WAAA,GAAcY,KAAK;IACrB;IACA,cAAYA,KAAA;IACZW,QAAA,EAAUrB,SAAA,GAAY,IAAI;IAC1B,eAAW;EAAA,GAEVG,KAAA,KAAUO,KAAA,mBACTY,GAAA,CAACC,SAAA;IAAUxB,IAAA,EAAK;IAAMW,KAAA,EAAOc,SAAA,CAAUd,KAAK,IAAI,MAAM,UAAU;EAAA,CAAS,EAG9E;EAED,sBACEY,GAAA,CAACG,GAAA;IAAK,GAAGnB,GAAA,CAAIQ,SAAA,CAAU,UAAU;IAAGT,GAAA;IAAW,GAAGD,MAAA;IAC/CsB,QAAA,EAAAlB;EAAA,CACH;AAEJ,CACF;AAEAf,QAAA,CAASkC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}