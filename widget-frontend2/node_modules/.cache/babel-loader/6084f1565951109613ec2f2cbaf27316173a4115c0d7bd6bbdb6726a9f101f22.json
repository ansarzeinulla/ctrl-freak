{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"refProp\", \"withKeyboardNavigation\", \"withAriaAttributes\", \"withExpandedAttribute\", \"targetType\", \"autoComplete\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Popover } from '../../Popover/Popover.mjs';\nimport '../../Popover/PopoverDropdown/PopoverDropdown.mjs';\nimport '../../Popover/PopoverTarget/PopoverTarget.mjs';\nimport { useComboboxContext } from '../Combobox.context.mjs';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props.mjs';\nconst defaultProps = {\n  refProp: \"ref\",\n  targetType: \"input\",\n  withKeyboardNavigation: true,\n  withAriaAttributes: true,\n  withExpandedAttribute: false,\n  autoComplete: \"off\"\n};\nconst ComboboxTarget = factory((props, ref) => {\n  const _useProps = useProps(\"ComboboxTarget\", defaultProps, props),\n    {\n      children,\n      refProp,\n      withKeyboardNavigation,\n      withAriaAttributes,\n      withExpandedAttribute,\n      targetType,\n      autoComplete\n    } = _useProps,\n    others = _objectWithoutProperties(_useProps, _excluded);\n  if (!isElement(children)) {\n    throw new Error(\"Combobox.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported\");\n  }\n  const ctx = useComboboxContext();\n  const targetProps = useComboboxTargetProps({\n    targetType,\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute,\n    onKeyDown: children.props.onKeyDown,\n    autoComplete\n  });\n  const clonedElement = cloneElement(children, _objectSpread(_objectSpread({}, targetProps), others));\n  return /* @__PURE__ */jsx(Popover.Target, {\n    ref: useMergedRef(ref, ctx.store.targetRef),\n    children: clonedElement\n  });\n});\nComboboxTarget.displayName = \"@mantine/core/ComboboxTarget\";\nexport { ComboboxTarget };","map":{"version":3,"names":["defaultProps","refProp","targetType","withKeyboardNavigation","withAriaAttributes","withExpandedAttribute","autoComplete","ComboboxTarget","factory","props","ref","_useProps","useProps","children","others","_objectWithoutProperties","_excluded","isElement","Error","ctx","useComboboxContext","targetProps","useComboboxTargetProps","onKeyDown","clonedElement","cloneElement","_objectSpread","jsx","Popover","Target","useMergedRef","store","targetRef","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Combobox/ComboboxTarget/ComboboxTarget.tsx"],"sourcesContent":["import { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { factory, Factory, isElement, useProps } from '../../../core';\nimport { Popover } from '../../Popover';\nimport { useComboboxContext } from '../Combobox.context';\nimport { useComboboxTargetProps } from '../use-combobox-target-props/use-combobox-target-props';\n\nexport interface ComboboxTargetProps {\n  /** Target element */\n  children: React.ReactNode;\n\n  /** Key of the prop that is used to access element ref */\n  refProp?: string;\n\n  /** If set, the component responds to keyboard events @default `true` */\n  withKeyboardNavigation?: boolean;\n\n  /** If set, the target has `aria-` attributes @default `true` */\n  withAriaAttributes?: boolean;\n\n  /** If set, the target has `aria-expanded` attribute @default `false` */\n  withExpandedAttribute?: boolean;\n\n  /** Determines which events is handled by the target element.\n   * `button` target type handles `Space` and `Enter` keys to toggle dropdown opened state.\n   * @default `input`\n   * */\n  targetType?: 'button' | 'input';\n\n  /** Input autocomplete attribute */\n  autoComplete?: string;\n}\n\nconst defaultProps = {\n  refProp: 'ref',\n  targetType: 'input',\n  withKeyboardNavigation: true,\n  withAriaAttributes: true,\n  withExpandedAttribute: false,\n  autoComplete: 'off',\n} satisfies Partial<ComboboxTargetProps>;\n\nexport type ComboboxTargetFactory = Factory<{\n  props: ComboboxTargetProps;\n  ref: HTMLElement;\n  compound: true;\n}>;\n\nexport const ComboboxTarget = factory<ComboboxTargetFactory>((props, ref) => {\n  const {\n    children,\n    refProp,\n    withKeyboardNavigation,\n    withAriaAttributes,\n    withExpandedAttribute,\n    targetType,\n    autoComplete,\n    ...others\n  } = useProps('ComboboxTarget', defaultProps, props);\n\n  if (!isElement(children)) {\n    throw new Error(\n      'Combobox.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const ctx = useComboboxContext();\n\n  const targetProps = useComboboxTargetProps({\n    targetType,\n    withAriaAttributes,\n    withKeyboardNavigation,\n    withExpandedAttribute,\n    onKeyDown: (children.props as any).onKeyDown,\n    autoComplete,\n  });\n\n  const clonedElement = cloneElement(children, {\n    ...targetProps,\n    ...others,\n  });\n\n  return (\n    <Popover.Target ref={useMergedRef(ref, ctx.store.targetRef)}>{clonedElement}</Popover.Target>\n  );\n});\n\nComboboxTarget.displayName = '@mantine/core/ComboboxTarget';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,MAAMA,YAAA,GAAe;EACnBC,OAAA,EAAS;EACTC,UAAA,EAAY;EACZC,sBAAA,EAAwB;EACxBC,kBAAA,EAAoB;EACpBC,qBAAA,EAAuB;EACvBC,YAAA,EAAc;AAChB;AAQO,MAAMC,cAAA,GAAiBC,OAAA,CAA+B,CAACC,KAAA,EAAOC,GAAA,KAAQ;EAC3E,MAAAC,SAAA,GASIC,QAAA,CAAS,kBAAkBZ,YAAA,EAAcS,KAAK;IAT5C;MACJI,QAAA;MACAZ,OAAA;MACAE,sBAAA;MACAC,kBAAA;MACAC,qBAAA;MACAH,UAAA;MACAI;IACG,CACL,GAAAK,SAAA;IADKG,MAAA,GAAAC,wBAAA,CAAAJ,SAAA,EAAAK,SAAA;EAGL,IAAI,CAACC,SAAA,CAAUJ,QAAQ,GAAG;IACxB,MAAM,IAAIK,KAAA,CACR,oKACF;EACF;EAEA,MAAMC,GAAA,GAAMC,kBAAA,EAAmB;EAE/B,MAAMC,WAAA,GAAcC,sBAAA,CAAuB;IACzCpB,UAAA;IACAE,kBAAA;IACAD,sBAAA;IACAE,qBAAA;IACAkB,SAAA,EAAYV,QAAA,CAASJ,KAAA,CAAcc,SAAA;IACnCjB;EAAA,CACD;EAED,MAAMkB,aAAA,GAAgBC,YAAA,CAAaZ,QAAA,EAAAa,aAAA,CAAAA,aAAA,KAC9BL,WAAA,GACAP,MAAA,CACJ;EAED,sBACEa,GAAA,CAACC,OAAA,CAAQC,MAAA,EAAR;IAAenB,GAAA,EAAKoB,YAAA,CAAapB,GAAA,EAAKS,GAAA,CAAIY,KAAA,CAAMC,SAAS;IAAInB,QAAA,EAAAW;EAAA,CAAc;AAEhF,CAAC;AAEDjB,cAAA,CAAe0B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}