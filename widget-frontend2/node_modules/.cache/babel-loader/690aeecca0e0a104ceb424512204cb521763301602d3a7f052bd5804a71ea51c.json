{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"children\", \"gap\", \"align\", \"justify\", \"wrap\", \"grow\", \"preventGrowOverflow\", \"vars\", \"variant\", \"__size\", \"mod\", \"attributes\"];\nimport { jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { filterFalsyChildren } from './filter-falsy-children/filter-falsy-children.mjs';\nimport classes from './Group.module.css.mjs';\nconst defaultProps = {\n  preventGrowOverflow: true,\n  gap: \"md\",\n  align: \"center\",\n  justify: \"flex-start\",\n  wrap: \"wrap\"\n};\nconst varsResolver = createVarsResolver((_, _ref, _ref2) => {\n  let {\n    grow,\n    preventGrowOverflow,\n    gap,\n    align,\n    justify,\n    wrap\n  } = _ref;\n  let {\n    childWidth\n  } = _ref2;\n  return {\n    root: {\n      \"--group-child-width\": grow && preventGrowOverflow ? childWidth : void 0,\n      \"--group-gap\": getSpacing(gap),\n      \"--group-align\": align,\n      \"--group-justify\": justify,\n      \"--group-wrap\": wrap\n    }\n  };\n});\nconst Group = factory((_props, ref) => {\n  const props = useProps(\"Group\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      children,\n      gap,\n      align,\n      justify,\n      wrap,\n      grow,\n      preventGrowOverflow,\n      vars,\n      variant,\n      __size,\n      mod,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const filteredChildren = filterFalsyChildren(children);\n  const childrenCount = filteredChildren.length;\n  const resolvedGap = getSpacing(gap !== null && gap !== void 0 ? gap : \"md\");\n  const childWidth = \"calc(\".concat(100 / childrenCount, \"% - (\").concat(resolvedGap, \" - \").concat(resolvedGap, \" / \").concat(childrenCount, \"))\");\n  const stylesCtx = {\n    childWidth\n  };\n  const getStyles = useStyles({\n    name: \"Group\",\n    props,\n    stylesCtx,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread(_objectSpread({}, getStyles(\"root\")), {}, {\n    ref,\n    variant,\n    mod: [{\n      grow\n    }, mod],\n    size: __size\n  }, others), {}, {\n    children: filteredChildren\n  }));\n});\nGroup.classes = classes;\nGroup.displayName = \"@mantine/core/Group\";\nexport { Group };","map":{"version":3,"names":["defaultProps","preventGrowOverflow","gap","align","justify","wrap","varsResolver","createVarsResolver","_","_ref","_ref2","grow","childWidth","root","getSpacing","Group","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","children","vars","variant","__size","mod","attributes","others","_objectWithoutProperties","_excluded","filteredChildren","filterFalsyChildren","childrenCount","length","resolvedGap","concat","stylesCtx","getStyles","useStyles","name","classes","jsx","Box","_objectSpread","size","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Group/Group.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { filterFalsyChildren } from './filter-falsy-children/filter-falsy-children';\nimport classes from './Group.module.css';\n\nexport type GroupStylesNames = 'root';\nexport type GroupCssVariables = {\n  root:\n    | '--group-gap'\n    | '--group-align'\n    | '--group-justify'\n    | '--group-wrap'\n    | '--group-child-width';\n};\n\nexport interface GroupStylesCtx {\n  childWidth: string;\n}\n\nexport interface GroupProps extends BoxProps, StylesApiProps<GroupFactory>, ElementProps<'div'> {\n  __size?: any;\n\n  /** Controls `justify-content` CSS property @default `'flex-start'` */\n  justify?: React.CSSProperties['justifyContent'];\n\n  /** Controls `align-items` CSS property @default `'center'` */\n  align?: React.CSSProperties['alignItems'];\n\n  /** Controls `flex-wrap` CSS property @default `'wrap'` */\n  wrap?: React.CSSProperties['flexWrap'];\n\n  /** Key of `theme.spacing` or any valid CSS value for `gap`, numbers are converted to rem @default `'md'` */\n  gap?: MantineSpacing;\n\n  /** Determines whether each child element should have `flex-grow: 1` style @default `false` */\n  grow?: boolean;\n\n  /** Determines whether children should take only dedicated amount of space (`max-width` style is set based on the number of children) @default `true` */\n  preventGrowOverflow?: boolean;\n}\n\nexport type GroupFactory = Factory<{\n  props: GroupProps;\n  ref: HTMLDivElement;\n  stylesNames: GroupStylesNames;\n  vars: GroupCssVariables;\n  ctx: GroupStylesCtx;\n}>;\n\nconst defaultProps = {\n  preventGrowOverflow: true,\n  gap: 'md',\n  align: 'center',\n  justify: 'flex-start',\n  wrap: 'wrap',\n} satisfies Partial<GroupProps>;\n\nconst varsResolver = createVarsResolver<GroupFactory>(\n  (_, { grow, preventGrowOverflow, gap, align, justify, wrap }, { childWidth }) => ({\n    root: {\n      '--group-child-width': grow && preventGrowOverflow ? childWidth : undefined,\n      '--group-gap': getSpacing(gap),\n      '--group-align': align,\n      '--group-justify': justify,\n      '--group-wrap': wrap,\n    },\n  })\n);\n\nexport const Group = factory<GroupFactory>((_props, ref) => {\n  const props = useProps('Group', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    children,\n    gap,\n    align,\n    justify,\n    wrap,\n    grow,\n    preventGrowOverflow,\n    vars,\n    variant,\n    __size,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const filteredChildren = filterFalsyChildren(children);\n  const childrenCount = filteredChildren.length;\n  const resolvedGap = getSpacing(gap ?? 'md');\n  const childWidth = `calc(${\n    100 / childrenCount\n  }% - (${resolvedGap} - ${resolvedGap} / ${childrenCount}))`;\n\n  const stylesCtx: GroupStylesCtx = { childWidth };\n\n  const getStyles = useStyles<GroupFactory>({\n    name: 'Group',\n    props,\n    stylesCtx,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root')}\n      ref={ref}\n      variant={variant}\n      mod={[{ grow }, mod]}\n      size={__size}\n      {...others}\n    >\n      {filteredChildren}\n    </Box>\n  );\n});\n\nGroup.classes = classes;\nGroup.displayName = '@mantine/core/Group';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AA4DA,MAAMA,YAAA,GAAe;EACnBC,mBAAA,EAAqB;EACrBC,GAAA,EAAK;EACLC,KAAA,EAAO;EACPC,OAAA,EAAS;EACTC,IAAA,EAAM;AACR;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CACnB,CAACC,CAAA,EAAAC,IAAA,EAAAC,KAAA;EAAA,IAAG;IAAEC,IAAA;IAAMV,mBAAA;IAAqBC,GAAA;IAAKC,KAAA;IAAOC,OAAA;IAASC;EAAA,CAAK,GAAAI,IAAA;EAAA,IAAG;IAAEG;EAAA,CAAW,GAAAF,KAAA;EAAA,OAAO;IAChFG,IAAA,EAAM;MACJ,uBAAuBF,IAAA,IAAQV,mBAAA,GAAsBW,UAAA,GAAa;MAClE,eAAeE,UAAA,CAAWZ,GAAG;MAC7B,iBAAiBC,KAAA;MACjB,mBAAmBC,OAAA;MACnB,gBAAgBC;IAAA;EAClB,CACF;AAAA,CACF;AAEO,MAAMU,KAAA,GAAQC,OAAA,CAAsB,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAC1D,MAAMC,KAAA,GAAQC,QAAA,CAAS,SAASpB,YAAA,EAAciB,MAAM;EACpD,MAAM;MACJI,UAAA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,QAAA;MACAxB,GAAA;MACAC,KAAA;MACAC,OAAA;MACAC,IAAA;MACAM,IAAA;MACAV,mBAAA;MACA0B,IAAA;MACAC,OAAA;MACAC,MAAA;MACAC,GAAA;MACAC;IACG,CACL,GAAIZ,KAAA;IADCa,MAAA,GAAAC,wBAAA,CACDd,KAAA,EAAAe,SAAA;EAEJ,MAAMC,gBAAA,GAAmBC,mBAAA,CAAoBV,QAAQ;EACrD,MAAMW,aAAA,GAAgBF,gBAAA,CAAiBG,MAAA;EACvC,MAAMC,WAAA,GAAczB,UAAA,CAAWZ,GAAA,aAAAA,GAAA,cAAAA,GAAA,GAAO,IAAI;EAC1C,MAAMU,UAAA,WAAA4B,MAAA,CACJ,MAAMH,aACR,WAAAG,MAAA,CAAQD,WAAW,SAAAC,MAAA,CAAMD,WAAW,SAAAC,MAAA,CAAMH,aAAa;EAEvD,MAAMI,SAAA,GAA4B;IAAE7B;EAAA,CAAW;EAE/C,MAAM8B,SAAA,GAAYC,SAAA,CAAwB;IACxCC,IAAA,EAAM;IACNzB,KAAA;IACAsB,SAAA;IACAnB,SAAA;IACAC,KAAA;IACAsB,OAAA;IACAxB,UAAA;IACAG,MAAA;IACAC,QAAA;IACAM,UAAA;IACAJ,IAAA;IACArB;EAAA,CACD;EAED,sBACEwC,GAAA,CAACC,GAAA,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACKN,SAAA,CAAU,MAAM;IACpBxB,GAAA;IACAU,OAAA;IACAE,GAAA,EAAK,CAAC;MAAEnB;IAAA,GAAQmB,GAAG;IACnBmB,IAAA,EAAMpB;EAAA,GACFG,MAAA;IAEHN,QAAA,EAAAS;EAAA,GACH;AAEJ,CAAC;AAEDpB,KAAA,CAAM8B,OAAA,GAAUA,OAAA;AAChB9B,KAAA,CAAMmC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}