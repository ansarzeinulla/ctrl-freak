{"ast":null,"code":"'use client';\n\nimport { useRef, useEffect } from 'react';\nimport { useFloating, autoUpdate, offset, hide, shift, limitShift, flip, inline, arrow, size } from '@floating-ui/react';\nimport { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react/jsx-runtime';\nimport 'clsx';\nimport { useMantineEnv } from '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nfunction getDefaultMiddlewares(middlewares) {\n  if (middlewares === void 0) {\n    return {\n      shift: true,\n      flip: true\n    };\n  }\n  const result = {\n    ...middlewares\n  };\n  if (middlewares.shift === void 0) {\n    result.shift = true;\n  }\n  if (middlewares.flip === void 0) {\n    result.flip = true;\n  }\n  return result;\n}\nfunction getPopoverMiddlewares(options, getFloating, env) {\n  const middlewaresOptions = getDefaultMiddlewares(options.middlewares);\n  const middlewares = [offset(options.offset), hide()];\n  if (options.dropdownVisible && env !== \"test\" && options.preventPositionChangeWhenVisible) {\n    middlewaresOptions.flip = false;\n  }\n  if (middlewaresOptions.shift) {\n    middlewares.push(shift(typeof middlewaresOptions.shift === \"boolean\" ? {\n      limiter: limitShift(),\n      padding: 5\n    } : {\n      limiter: limitShift(),\n      padding: 5,\n      ...middlewaresOptions.shift\n    }));\n  }\n  if (middlewaresOptions.flip) {\n    middlewares.push(typeof middlewaresOptions.flip === \"boolean\" ? flip() : flip(middlewaresOptions.flip));\n  }\n  if (middlewaresOptions.inline) {\n    middlewares.push(typeof middlewaresOptions.inline === \"boolean\" ? inline() : inline(middlewaresOptions.inline));\n  }\n  middlewares.push(arrow({\n    element: options.arrowRef,\n    padding: options.arrowOffset\n  }));\n  if (middlewaresOptions.size || options.width === \"target\") {\n    middlewares.push(size({\n      ...(typeof middlewaresOptions.size === \"boolean\" ? {} : middlewaresOptions.size),\n      apply({\n        rects,\n        availableWidth,\n        availableHeight,\n        ...rest\n      }) {\n        const floating = getFloating();\n        const styles = floating.refs.floating.current?.style ?? {};\n        if (middlewaresOptions.size) {\n          if (typeof middlewaresOptions.size === \"object\" && !!middlewaresOptions.size.apply) {\n            middlewaresOptions.size.apply({\n              rects,\n              availableWidth,\n              availableHeight,\n              ...rest\n            });\n          } else {\n            Object.assign(styles, {\n              maxWidth: `${availableWidth}px`,\n              maxHeight: `${availableHeight}px`\n            });\n          }\n        }\n        if (options.width === \"target\") {\n          Object.assign(styles, {\n            width: `${rects.reference.width}px`\n          });\n        }\n      }\n    }));\n  }\n  return middlewares;\n}\nfunction usePopover(options) {\n  const env = useMantineEnv();\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange\n  });\n  const previouslyOpened = useRef(_opened);\n  const onClose = () => {\n    if (_opened && !options.disabled) {\n      setOpened(false);\n    }\n  };\n  const onToggle = () => {\n    if (!options.disabled) {\n      setOpened(!_opened);\n    }\n  };\n  const floating = useFloating({\n    strategy: options.strategy,\n    placement: options.preventPositionChangeWhenVisible ? options.positionRef.current : options.position,\n    middleware: getPopoverMiddlewares(options, () => floating, env),\n    whileElementsMounted: !options.keepMounted ? autoUpdate : void 0\n  });\n  useEffect(() => {\n    if (!floating.refs.reference.current || !floating.refs.floating.current) {\n      return;\n    }\n    if (_opened) {\n      return autoUpdate(floating.refs.reference.current, floating.refs.floating.current, floating.update);\n    }\n  }, [_opened, floating.update]);\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n    options.positionRef.current = floating.placement;\n  }, [floating.placement, options.preventPositionChangeWhenVisible]);\n  useDidUpdate(() => {\n    if (_opened !== previouslyOpened.current) {\n      if (!_opened) {\n        options.onClose?.();\n      } else {\n        options.onOpen?.();\n      }\n    }\n    previouslyOpened.current = _opened;\n  }, [_opened, options.onClose, options.onOpen]);\n  useDidUpdate(() => {\n    let timeout = -1;\n    if (_opened) {\n      timeout = window.setTimeout(() => options.setDropdownVisible(true), 4);\n    }\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, [_opened, options.position]);\n  return {\n    floating,\n    controlled: typeof options.opened === \"boolean\",\n    opened: _opened,\n    onClose,\n    onToggle\n  };\n}\nexport { usePopover };","map":{"version":3,"names":["getDefaultMiddlewares","middlewares","shift","flip","result","getPopoverMiddlewares","options","getFloating","env","middlewaresOptions","offset","hide","dropdownVisible","preventPositionChangeWhenVisible","push","limiter","limitShift","padding","inline","arrow","element","arrowRef","arrowOffset","size","width","apply","rects","availableWidth","availableHeight","rest","floating","styles","refs","current","style","Object","assign","maxWidth","maxHeight","reference","usePopover","useMantineEnv","_opened","setOpened","useUncontrolled","value","opened","defaultValue","defaultOpened","finalValue","onChange","previouslyOpened","useRef","onClose","disabled","onToggle","useFloating","strategy","placement","positionRef","position","middleware","whileElementsMounted","keepMounted","autoUpdate","useEffect","update","useDidUpdate","onPositionChange","onOpen","timeout","window","setTimeout","setDropdownVisible","clearTimeout","controlled"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Popover/use-popover.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport {\n  arrow,\n  autoUpdate,\n  flip,\n  hide,\n  inline,\n  limitShift,\n  Middleware,\n  offset,\n  shift,\n  size,\n  useFloating,\n  UseFloatingReturn,\n} from '@floating-ui/react';\nimport { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport { useMantineEnv } from '../../core';\nimport { FloatingAxesOffsets, FloatingPosition, FloatingStrategy } from '../../utils/Floating';\nimport { PopoverMiddlewares, PopoverWidth } from './Popover.types';\n\ninterface UsePopoverOptions {\n  offset: number | FloatingAxesOffsets;\n  position: FloatingPosition;\n  positionDependencies: any[] | undefined;\n  onPositionChange?: (position: FloatingPosition) => void;\n  opened: boolean | undefined;\n  defaultOpened: boolean | undefined;\n  onChange?: (opened: boolean) => void;\n  onClose?: () => void;\n  onDismiss?: () => void;\n  onOpen?: () => void;\n  width: PopoverWidth;\n  middlewares: PopoverMiddlewares | undefined;\n  arrowRef: React.RefObject<HTMLDivElement | null>;\n  arrowOffset: number;\n  strategy?: FloatingStrategy;\n  dropdownVisible: boolean;\n  setDropdownVisible: (visible: boolean) => void;\n  positionRef: React.RefObject<FloatingPosition>;\n  disabled: boolean | undefined;\n  preventPositionChangeWhenVisible: boolean | undefined;\n  keepMounted: boolean | undefined;\n}\n\nfunction getDefaultMiddlewares(middlewares: PopoverMiddlewares | undefined): PopoverMiddlewares {\n  if (middlewares === undefined) {\n    return { shift: true, flip: true };\n  }\n\n  const result = { ...middlewares };\n  if (middlewares.shift === undefined) {\n    result.shift = true;\n  }\n\n  if (middlewares.flip === undefined) {\n    result.flip = true;\n  }\n\n  return result;\n}\n\nfunction getPopoverMiddlewares(\n  options: UsePopoverOptions,\n  getFloating: () => UseFloatingReturn<Element>,\n  env: 'test' | 'default'\n) {\n  const middlewaresOptions = getDefaultMiddlewares(options.middlewares);\n  const middlewares: Middleware[] = [offset(options.offset), hide()];\n\n  if (options.dropdownVisible && env !== 'test' && options.preventPositionChangeWhenVisible) {\n    middlewaresOptions.flip = false;\n  }\n\n  if (middlewaresOptions.shift) {\n    middlewares.push(\n      shift(\n        typeof middlewaresOptions.shift === 'boolean'\n          ? { limiter: limitShift(), padding: 5 }\n          : { limiter: limitShift(), padding: 5, ...middlewaresOptions.shift }\n      )\n    );\n  }\n\n  if (middlewaresOptions.flip) {\n    middlewares.push(\n      typeof middlewaresOptions.flip === 'boolean' ? flip() : flip(middlewaresOptions.flip)\n    );\n  }\n\n  if (middlewaresOptions.inline) {\n    middlewares.push(\n      typeof middlewaresOptions.inline === 'boolean' ? inline() : inline(middlewaresOptions.inline)\n    );\n  }\n\n  middlewares.push(arrow({ element: options.arrowRef, padding: options.arrowOffset }));\n\n  if (middlewaresOptions.size || options.width === 'target') {\n    middlewares.push(\n      size({\n        ...(typeof middlewaresOptions.size === 'boolean' ? {} : middlewaresOptions.size),\n        apply({ rects, availableWidth, availableHeight, ...rest }) {\n          const floating = getFloating();\n          const styles = floating.refs.floating.current?.style ?? {};\n\n          if (middlewaresOptions.size) {\n            //If custom apply function is given use that else set defaults\n            if (typeof middlewaresOptions.size === 'object' && !!middlewaresOptions.size.apply) {\n              middlewaresOptions.size.apply({ rects, availableWidth, availableHeight, ...rest });\n            } else {\n              Object.assign(styles, {\n                maxWidth: `${availableWidth}px`,\n                maxHeight: `${availableHeight}px`,\n              });\n            }\n          }\n\n          if (options.width === 'target') {\n            Object.assign(styles, {\n              width: `${rects.reference.width}px`,\n            });\n          }\n        },\n      })\n    );\n  }\n\n  return middlewares;\n}\n\nexport function usePopover(options: UsePopoverOptions) {\n  const env = useMantineEnv();\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange,\n  });\n\n  const previouslyOpened = useRef(_opened);\n\n  const onClose = () => {\n    if (_opened && !options.disabled) {\n      setOpened(false);\n    }\n  };\n\n  const onToggle = () => {\n    if (!options.disabled) {\n      setOpened(!_opened);\n    }\n  };\n\n  const floating: UseFloatingReturn<Element> = useFloating({\n    strategy: options.strategy,\n    placement: options.preventPositionChangeWhenVisible\n      ? options.positionRef.current\n      : options.position,\n    middleware: getPopoverMiddlewares(options, () => floating, env),\n    whileElementsMounted: !options.keepMounted ? autoUpdate : undefined,\n  });\n\n  useEffect(() => {\n    if (!floating.refs.reference.current || !floating.refs.floating.current) {\n      return;\n    }\n\n    if (_opened) {\n      return autoUpdate(\n        floating.refs.reference.current,\n        floating.refs.floating.current,\n        floating.update\n      );\n    }\n  }, [_opened, floating.update]);\n\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n    options.positionRef.current = floating.placement;\n  }, [floating.placement, options.preventPositionChangeWhenVisible]);\n\n  useDidUpdate(() => {\n    if (_opened !== previouslyOpened.current) {\n      if (!_opened) {\n        options.onClose?.();\n      } else {\n        options.onOpen?.();\n      }\n    }\n\n    previouslyOpened.current = _opened;\n  }, [_opened, options.onClose, options.onOpen]);\n\n  useDidUpdate(() => {\n    let timeout: number = -1;\n\n    if (_opened) {\n      // Required to be in timeout to give floating ui render time to flip/shift popover\n      timeout = window.setTimeout(() => options.setDropdownVisible(true), 4);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n    };\n  }, [_opened, options.position]);\n\n  return {\n    floating,\n    controlled: typeof options.opened === 'boolean',\n    opened: _opened,\n    onClose,\n    onToggle,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}