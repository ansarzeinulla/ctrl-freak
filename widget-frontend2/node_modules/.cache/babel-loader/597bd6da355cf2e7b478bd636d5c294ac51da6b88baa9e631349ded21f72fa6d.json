{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSpacing, getLineHeight, getFontSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { ListProvider } from './List.context.mjs';\nimport { ListItem } from './ListItem/ListItem.mjs';\nimport classes from './List.module.css.mjs';\nconst defaultProps = {\n  type: \"unordered\"\n};\nconst varsResolver = createVarsResolver((_, {\n  size,\n  spacing\n}) => ({\n  root: {\n    \"--list-fz\": getFontSize(size),\n    \"--list-lh\": getLineHeight(size),\n    \"--list-spacing\": getSpacing(spacing)\n  }\n}));\nconst List = factory((_props, ref) => {\n  const props = useProps(\"List\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    type,\n    withPadding,\n    icon,\n    spacing,\n    center,\n    listStyleType,\n    mod,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"List\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(ListProvider, {\n    value: {\n      center,\n      icon,\n      getStyles\n    },\n    children: /* @__PURE__ */jsx(Box, {\n      ...getStyles(\"root\", {\n        style: {\n          listStyleType\n        }\n      }),\n      component: type === \"unordered\" ? \"ul\" : \"ol\",\n      mod: [{\n        \"with-padding\": withPadding\n      }, mod],\n      ref,\n      ...others,\n      children\n    })\n  });\n});\nList.classes = classes;\nList.displayName = \"@mantine/core/List\";\nList.Item = ListItem;\nexport { List };","map":{"version":3,"names":["defaultProps","type","varsResolver","createVarsResolver","_","size","spacing","root","getFontSize","getLineHeight","getSpacing","List","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","withPadding","icon","center","listStyleType","mod","attributes","others","getStyles","useStyles","name","classes","jsx","ListProvider","value","Box","component","displayName","Item","ListItem"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/List/List.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  getLineHeight,\n  getSpacing,\n  MantineSize,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { ListProvider } from './List.context';\nimport { ListItem, ListItemStylesNames } from './ListItem/ListItem';\nimport classes from './List.module.css';\n\nexport type ListStylesNames = 'root' | ListItemStylesNames;\nexport type ListCssVariables = {\n  root: '--list-fz' | '--list-lh' | '--list-spacing';\n};\n\nexport interface ListProps\n  extends BoxProps,\n    StylesApiProps<ListFactory>,\n    ElementProps<'ol', 'type'> {\n  /** `List.Item` components */\n  children?: React.ReactNode;\n\n  /** List type @default `'unordered'` */\n  type?: 'ordered' | 'unordered';\n\n  /** Determines whether list items should be offset with padding @default `false` */\n  withPadding?: boolean;\n\n  /** Controls `font-size` and `line-height` @default `'md'` */\n  size?: MantineSize;\n\n  /** Icon to replace list item dot */\n  icon?: React.ReactNode;\n\n  /** Key of `theme.spacing` or any valid CSS value to set spacing between items @default `0` */\n  spacing?: MantineSpacing;\n\n  /** Determines whether items must be centered with their icon @default `false` */\n  center?: boolean;\n\n  /** Controls `list-style-type`, by default inferred from `type` */\n  listStyleType?: React.CSSProperties['listStyleType'];\n}\n\nexport type ListFactory = Factory<{\n  props: ListProps;\n  ref: HTMLUListElement;\n  stylesNames: ListStylesNames;\n  vars: ListCssVariables;\n  staticComponents: {\n    Item: typeof ListItem;\n  };\n}>;\n\nconst defaultProps = {\n  type: 'unordered',\n} satisfies Partial<ListProps>;\n\nconst varsResolver = createVarsResolver<ListFactory>((_, { size, spacing }) => ({\n  root: {\n    '--list-fz': getFontSize(size),\n    '--list-lh': getLineHeight(size),\n    '--list-spacing': getSpacing(spacing),\n  },\n}));\n\nexport const List = factory<ListFactory>((_props, ref) => {\n  const props = useProps('List', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    type,\n    withPadding,\n    icon,\n    spacing,\n    center,\n    listStyleType,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<ListFactory>({\n    name: 'List',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <ListProvider value={{ center, icon, getStyles }}>\n      <Box<any>\n        {...getStyles('root', { style: { listStyleType } })}\n        component={type === 'unordered' ? ('ul' as const) : ('ol' as const)}\n        mod={[{ 'with-padding': withPadding }, mod]}\n        ref={ref}\n        {...others}\n      >\n        {children}\n      </Box>\n    </ListProvider>\n  );\n});\n\nList.classes = classes;\nList.displayName = '@mantine/core/List';\nList.Item = ListItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAgEA,MAAMA,YAAA,GAAe;EACnBC,IAAA,EAAM;AACR;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CAAgC,CAACC,CAAA,EAAG;EAAEC,IAAA;EAAMC;AAAA,CAAQ,MAAO;EAC9EC,IAAA,EAAM;IACJ,aAAaC,WAAA,CAAYH,IAAI;IAC7B,aAAaI,aAAA,CAAcJ,IAAI;IAC/B,kBAAkBK,UAAA,CAAWJ,OAAO;EAAA;AAExC,EAAE;AAEK,MAAMK,IAAA,GAAOC,OAAA,CAAqB,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACxD,MAAMC,KAAA,GAAQC,QAAA,CAAS,QAAQhB,YAAA,EAAca,MAAM;EACnD,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,QAAA;IACAtB,IAAA;IACAuB,WAAA;IACAC,IAAA;IACAnB,OAAA;IACAoB,MAAA;IACAC,aAAA;IACAC,GAAA;IACAC,UAAA;IACA,GAAGC;EAAA,CACL,GAAIf,KAAA;EAEJ,MAAMgB,SAAA,GAAYC,SAAA,CAAuB;IACvCC,IAAA,EAAM;IACNC,OAAA;IACAnB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAQ,UAAA;IACAP,IAAA;IACApB;EAAA,CACD;EAED,sBAAAiC,GAAA,CACGC,YAAA;IAAaC,KAAA,EAAO;MAAEX,MAAA;MAAQD,IAAA;MAAMM;IAAA,CAAU;IAC7CR,QAAA,iBAAAY,GAAA,CAACG,GAAA;MACE,GAAGP,SAAA,CAAU,QAAQ;QAAEZ,KAAA,EAAO;UAAEQ;QAAA;MAAA,CAAiB;MAClDY,SAAA,EAAWtC,IAAA,KAAS,cAAe,OAAkB;MACrD2B,GAAA,EAAK,CAAC;QAAE,gBAAgBJ;MAAA,GAAeI,GAAG;MAC1Cd,GAAA;MACC,GAAGgB,MAAA;MAEHP;IAAA;EACH,CACF;AAEJ,CAAC;AAEDZ,IAAA,CAAKuB,OAAA,GAAUA,OAAA;AACfvB,IAAA,CAAK6B,WAAA,GAAc;AACnB7B,IAAA,CAAK8B,IAAA,GAAOC,QAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}