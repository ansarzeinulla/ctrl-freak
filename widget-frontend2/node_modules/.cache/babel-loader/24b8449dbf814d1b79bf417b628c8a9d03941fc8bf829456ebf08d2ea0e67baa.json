{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"className\", \"value\", \"classNames\", \"styles\", \"style\", \"mod\", \"keepMounted\"];\nimport { jsx } from 'react/jsx-runtime';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useTabsContext } from '../Tabs.context.mjs';\nimport classes from '../Tabs.module.css.mjs';\nconst TabsPanel = factory((_props, ref) => {\n  const props = useProps(\"TabsPanel\", null, _props);\n  const {\n      children,\n      className,\n      value,\n      classNames,\n      styles,\n      style,\n      mod,\n      keepMounted\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const ctx = useTabsContext();\n  const active = ctx.value === value;\n  const content = ctx.keepMounted || keepMounted ? children : active ? children : null;\n  return /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread(_objectSpread({}, ctx.getStyles(\"panel\", {\n    className,\n    classNames,\n    styles,\n    style: [style, !active ? {\n      display: \"none\"\n    } : void 0],\n    props\n  })), {}, {\n    ref,\n    mod: [{\n      orientation: ctx.orientation\n    }, mod],\n    role: \"tabpanel\",\n    id: ctx.getPanelId(value),\n    \"aria-labelledby\": ctx.getTabId(value)\n  }, others), {}, {\n    children: content\n  }));\n});\nTabsPanel.classes = classes;\nTabsPanel.displayName = \"@mantine/core/TabsPanel\";\nexport { TabsPanel };","map":{"version":3,"names":["TabsPanel","factory","_props","ref","props","useProps","children","className","value","classNames","styles","style","mod","keepMounted","others","_objectWithoutProperties","_excluded","ctx","useTabsContext","active","content","jsx","Box","_objectSpread","getStyles","display","orientation","role","id","getPanelId","getTabId","classes","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Tabs/TabsPanel/TabsPanel.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  CompoundStylesApiProps,\n  ElementProps,\n  factory,\n  Factory,\n  useProps,\n} from '../../../core';\nimport { useTabsContext } from '../Tabs.context';\nimport classes from '../Tabs.module.css';\n\nexport type TabsPanelStylesNames = 'panel';\n\nexport interface TabsPanelProps\n  extends BoxProps,\n    CompoundStylesApiProps<TabsPanelFactory>,\n    ElementProps<'div'> {\n  /** Panel content */\n  children: React.ReactNode;\n\n  /** If set, the content is kept mounted, even if `keepMounted` is set `false` in the parent `Tabs` component */\n  keepMounted?: boolean;\n\n  /** Value of associated control */\n  value: string;\n}\n\nexport type TabsPanelFactory = Factory<{\n  props: TabsPanelProps;\n  ref: HTMLDivElement;\n  stylesNames: TabsPanelStylesNames;\n  compound: true;\n}>;\n\nexport const TabsPanel = factory<TabsPanelFactory>((_props, ref) => {\n  const props = useProps('TabsPanel', null, _props);\n  const { children, className, value, classNames, styles, style, mod, keepMounted, ...others } =\n    props;\n\n  const ctx = useTabsContext();\n\n  const active = ctx.value === value;\n  const content = ctx.keepMounted || keepMounted ? children : active ? children : null;\n\n  return (\n    <Box\n      {...ctx.getStyles('panel', {\n        className,\n        classNames,\n        styles,\n        style: [style, !active ? { display: 'none' } : undefined],\n        props,\n      })}\n      ref={ref}\n      mod={[{ orientation: ctx.orientation }, mod]}\n      role=\"tabpanel\"\n      id={ctx.getPanelId(value)}\n      aria-labelledby={ctx.getTabId(value)}\n      {...others}\n    >\n      {content}\n    </Box>\n  );\n});\n\nTabsPanel.classes = classes;\nTabsPanel.displayName = '@mantine/core/TabsPanel';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAmCO,MAAMA,SAAA,GAAYC,OAAA,CAA0B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAClE,MAAMC,KAAA,GAAQC,QAAA,CAAS,aAAa,MAAMH,MAAM;EAChD,MAAM;MAAEI,QAAA;MAAUC,SAAA;MAAWC,KAAA;MAAOC,UAAA;MAAYC,MAAA;MAAQC,KAAA;MAAOC,GAAA;MAAKC;IAAgB,CAAO,GACzFT,KAAA;IADkFU,MAAA,GAAAC,wBAAA,CAClFX,KAAA,EAAAY,SAAA;EAEF,MAAMC,GAAA,GAAMC,cAAA,EAAe;EAE3B,MAAMC,MAAA,GAASF,GAAA,CAAIT,KAAA,KAAUA,KAAA;EAC7B,MAAMY,OAAA,GAAUH,GAAA,CAAIJ,WAAA,IAAeA,WAAA,GAAcP,QAAA,GAAWa,MAAA,GAASb,QAAA,GAAW;EAEhF,sBACEe,GAAA,CAACC,GAAA,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA,KACKN,GAAA,CAAIO,SAAA,CAAU,SAAS;IACzBjB,SAAA;IACAE,UAAA;IACAC,MAAA;IACAC,KAAA,EAAO,CAACA,KAAA,EAAO,CAACQ,MAAA,GAAS;MAAEM,OAAA,EAAS;IAAA,CAAO,GAAI,MAAS;IACxDrB;EAAA,CACD;IACDD,GAAA;IACAS,GAAA,EAAK,CAAC;MAAEc,WAAA,EAAaT,GAAA,CAAIS;IAAA,GAAed,GAAG;IAC3Ce,IAAA,EAAK;IACLC,EAAA,EAAIX,GAAA,CAAIY,UAAA,CAAWrB,KAAK;IACxB,mBAAiBS,GAAA,CAAIa,QAAA,CAAStB,KAAK;EAAA,GAC/BM,MAAA;IAEHR,QAAA,EAAAc;EAAA,GACH;AAEJ,CAAC;AAEDpB,SAAA,CAAU+B,OAAA,GAAUA,OAAA;AACpB/B,SAAA,CAAUgC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}