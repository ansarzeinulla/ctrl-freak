{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"cols\", \"verticalSpacing\", \"spacing\", \"type\", \"attributes\"];\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { useRandomClassName } from '../../core/Box/use-random-classname/use-random-classname.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { SimpleGridContainerVariables, SimpleGridMediaVariables } from './SimpleGridVariables.mjs';\nimport classes from './SimpleGrid.module.css.mjs';\nconst defaultProps = {\n  cols: 1,\n  spacing: \"md\",\n  type: \"media\"\n};\nconst SimpleGrid = factory((_props, ref) => {\n  const props = useProps(\"SimpleGrid\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      cols,\n      verticalSpacing,\n      spacing,\n      type,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"SimpleGrid\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars\n  });\n  const responsiveClassName = useRandomClassName();\n  if (type === \"container\") {\n    return /* @__PURE__ */jsxs(Fragment, {\n      children: [/* @__PURE__ */jsx(SimpleGridContainerVariables, _objectSpread(_objectSpread({}, props), {}, {\n        selector: \".\".concat(responsiveClassName)\n      })), /* @__PURE__ */jsx(\"div\", _objectSpread(_objectSpread({}, getStyles(\"container\")), {}, {\n        children: /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread({\n          ref\n        }, getStyles(\"root\", {\n          className: responsiveClassName\n        })), others))\n      }))]\n    });\n  }\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(SimpleGridMediaVariables, _objectSpread(_objectSpread({}, props), {}, {\n      selector: \".\".concat(responsiveClassName)\n    })), /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread({\n      ref\n    }, getStyles(\"root\", {\n      className: responsiveClassName\n    })), others))]\n  });\n});\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = \"@mantine/core/SimpleGrid\";\nexport { SimpleGrid };","map":{"version":3,"names":["defaultProps","cols","spacing","type","SimpleGrid","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","verticalSpacing","attributes","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","responsiveClassName","useRandomClassName","jsxs","Fragment","children","jsx","SimpleGridContainerVariables","_objectSpread","selector","concat","Box","SimpleGridMediaVariables","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/SimpleGrid/SimpleGrid.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  ElementProps,\n  Factory,\n  factory,\n  MantineSpacing,\n  StyleProp,\n  StylesApiProps,\n  useProps,\n  useRandomClassName,\n  useStyles,\n} from '../../core';\nimport { SimpleGridContainerVariables, SimpleGridMediaVariables } from './SimpleGridVariables';\nimport classes from './SimpleGrid.module.css';\n\nexport type SimpleGridStylesNames = 'root' | 'container';\n\nexport interface SimpleGridProps\n  extends BoxProps,\n    StylesApiProps<SimpleGridFactory>,\n    ElementProps<'div'> {\n  /** Number of columns @default `1` */\n  cols?: StyleProp<number>;\n\n  /** Spacing between columns @default `'md'` */\n  spacing?: StyleProp<MantineSpacing>;\n\n  /** Spacing between rows @default `'md'` */\n  verticalSpacing?: StyleProp<MantineSpacing>;\n\n  /** Determines typeof of queries that are used for responsive styles @default `'media'` */\n  type?: 'media' | 'container';\n}\n\nexport type SimpleGridFactory = Factory<{\n  props: SimpleGridProps;\n  ref: HTMLDivElement;\n  stylesNames: SimpleGridStylesNames;\n}>;\n\nconst defaultProps = {\n  cols: 1,\n  spacing: 'md',\n  type: 'media',\n} satisfies Partial<SimpleGridProps>;\n\nexport const SimpleGrid = factory<SimpleGridFactory>((_props, ref) => {\n  const props = useProps('SimpleGrid', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    cols,\n    verticalSpacing,\n    spacing,\n    type,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SimpleGridFactory>({\n    name: 'SimpleGrid',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n  });\n\n  const responsiveClassName = useRandomClassName();\n\n  if (type === 'container') {\n    return (\n      <>\n        <SimpleGridContainerVariables {...props} selector={`.${responsiveClassName}`} />\n        <div {...getStyles('container')}>\n          <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others} />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <SimpleGridMediaVariables {...props} selector={`.${responsiveClassName}`} />\n      <Box ref={ref} {...getStyles('root', { className: responsiveClassName })} {...others} />\n    </>\n  );\n});\n\nSimpleGrid.classes = classes;\nSimpleGrid.displayName = '@mantine/core/SimpleGrid';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAyCA,MAAMA,YAAA,GAAe;EACnBC,IAAA,EAAM;EACNC,OAAA,EAAS;EACTC,IAAA,EAAM;AACR;AAEO,MAAMC,UAAA,GAAaC,OAAA,CAA2B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACpE,MAAMC,KAAA,GAAQC,QAAA,CAAS,cAAcT,YAAA,EAAcM,MAAM;EACzD,MAAM;MACJI,UAAA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,IAAA;MACAd,IAAA;MACAe,eAAA;MACAd,OAAA;MACAC,IAAA;MACAc;IACG,CACL,GAAIT,KAAA;IADCU,MAAA,GAAAC,wBAAA,CACDX,KAAA,EAAAY,SAAA;EAEJ,MAAMC,SAAA,GAAYC,SAAA,CAA6B;IAC7CC,IAAA,EAAM;IACNC,OAAA;IACAhB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAG,UAAA;IACAF;EAAA,CACD;EAED,MAAMU,mBAAA,GAAsBC,kBAAA,EAAmB;EAE/C,IAAIvB,IAAA,KAAS,aAAa;IACxB,sBACEwB,IAAA,CAAAC,QAAA;MACEC,QAAA,kBAAAC,GAAA,CAACC,4BAAA,EAAAC,aAAA,CAAAA,aAAA,KAAiCxB,KAAA;QAAOyB,QAAA,MAAAC,MAAA,CAAcT,mBAAmB;MAAA,EAAI,kBAAAK,GAAA,CAC7E,OAAAE,aAAA,CAAAA,aAAA,KAAQX,SAAA,CAAU,WAAW;QAC5BQ,QAAA,iBAAAC,GAAA,CAACK,GAAA,EAAAH,aAAA,CAAAA,aAAA;UAAIzB;QAAA,GAAcc,SAAA,CAAU,QAAQ;UAAEV,SAAA,EAAWc;QAAA,CAAqB,IAAOP,MAAA,CAAQ;MAAA,EACxF;IAAA,CACF;EAEJ;EAEA,sBACES,IAAA,CAAAC,QAAA;IACEC,QAAA,kBAAAC,GAAA,CAACM,wBAAA,EAAAJ,aAAA,CAAAA,aAAA,KAA6BxB,KAAA;MAAOyB,QAAA,MAAAC,MAAA,CAAcT,mBAAmB;IAAA,EAAI,kBAC1EK,GAAA,CAACK,GAAA,EAAAH,aAAA,CAAAA,aAAA;MAAIzB;IAAA,GAAcc,SAAA,CAAU,QAAQ;MAAEV,SAAA,EAAWc;IAAA,CAAqB,IAAOP,MAAA,CAAQ;EAAA,CACxF;AAEJ,CAAC;AAEDd,UAAA,CAAWoB,OAAA,GAAUA,OAAA;AACrBpB,UAAA,CAAWiC,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}