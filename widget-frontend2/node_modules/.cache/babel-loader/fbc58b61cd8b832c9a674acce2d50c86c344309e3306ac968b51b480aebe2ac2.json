{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useId, useScrollSpy, assignRef } from '@mantine/hooks';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius, getFontSize } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.mjs';\nimport classes from './TableOfContents.module.css.mjs';\nconst defaultProps = {\n  getControlProps: ({\n    data\n  }) => ({\n    children: data.value\n  })\n};\nconst varsResolver = createVarsResolver((theme, {\n  color,\n  size,\n  variant,\n  autoContrast,\n  depthOffset,\n  radius\n}) => {\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    variant: variant || \"filled\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--toc-bg\": variant !== \"none\" ? colors.background : void 0,\n      \"--toc-color\": variant !== \"none\" ? colors.color : void 0,\n      \"--toc-size\": getFontSize(size),\n      \"--toc-depth-offset\": rem(depthOffset),\n      \"--toc-radius\": getRadius(radius)\n    }\n  };\n});\nconst TableOfContents = factory((_props, ref) => {\n  const props = useProps(\"TableOfContents\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    autoContrast,\n    scrollSpyOptions,\n    initialData,\n    getControlProps,\n    minDepthToOffset,\n    depthOffset,\n    variant,\n    radius,\n    reinitializeRef,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"TableOfContents\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const idBase = useId();\n  const spy = useScrollSpy(scrollSpyOptions);\n  assignRef(reinitializeRef, spy.reinitialize);\n  const headingsData = spy.initialized ? spy.data : initialData || [];\n  const controls = headingsData.map((data, index) => {\n    const controlProps = getControlProps?.({\n      active: index === spy.active,\n      data: {\n        ...data,\n        getNode: data.getNode || (() => {})\n      }\n    });\n    return /* @__PURE__ */jsx(UnstyledButton, {\n      __vars: {\n        \"--depth-offset\": `${data.depth - (minDepthToOffset || 1)}`\n      },\n      \"data-active\": index === spy.active || void 0,\n      variant,\n      ...controlProps,\n      ...getStyles(\"control\", {\n        className: controlProps?.className,\n        style: controlProps?.style\n      })\n    }, data.id || `${idBase}-${index}`);\n  });\n  return /* @__PURE__ */jsx(Box, {\n    ref,\n    variant,\n    ...getStyles(\"root\"),\n    ...others,\n    children: controls\n  });\n});\nTableOfContents.displayName = \"@mantine/core/TableOfContents\";\nTableOfContents.classes = classes;\nexport { TableOfContents };","map":{"version":3,"names":["defaultProps","getControlProps","data","children","value","varsResolver","createVarsResolver","theme","color","size","variant","autoContrast","depthOffset","radius","colors","variantColorResolver","primaryColor","root","background","getFontSize","rem","getRadius","TableOfContents","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","scrollSpyOptions","initialData","minDepthToOffset","reinitializeRef","attributes","others","getStyles","useStyles","name","classes","idBase","useId","spy","useScrollSpy","assignRef","reinitialize","headingsData","initialized","controls","map","index","controlProps","active","getNode","jsx","UnstyledButton","__vars","depth","id","Box","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/TableOfContents/TableOfContents.tsx"],"sourcesContent":["import {\n  assignRef,\n  useId,\n  useScrollSpy,\n  UseScrollSpyHeadingData,\n  UseScrollSpyOptions,\n} from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getFontSize,\n  getRadius,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { UnstyledButton, UnstyledButtonProps } from '../UnstyledButton';\nimport classes from './TableOfContents.module.css';\n\nexport type TableOfContentsStylesNames = 'root' | 'control';\nexport type TableOfContentsVariant = 'filled' | 'light' | 'none';\nexport type TableOfContentsCssVariables = {\n  root: '--toc-bg' | '--toc-color' | '--toc-size' | '--toc-depth-offset' | '--toc-radius';\n};\n\nexport interface InitialTableOfContentsData {\n  /** Heading depth, 1-6 */\n  depth: number;\n\n  /** Heading text content value */\n  value: string;\n\n  /** Heading id, must be unique, used as `key` */\n  id?: string;\n}\n\nexport interface TableOfContentsGetControlPropsPayload {\n  /** True if the associated heading is currently the best match in the viewport */\n  active: boolean;\n\n  /** Data passed down from `use-scroll-spy` hook: depth, id, value */\n  data: UseScrollSpyHeadingData;\n}\n\nexport interface TableOfContentsProps\n  extends BoxProps,\n    StylesApiProps<TableOfContentsFactory>,\n    ElementProps<'div'> {\n  /** Key of `theme.colors` or any valid CSS color value @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Controls font-size and padding of all elements @default `'md'` */\n  size?: MantineSize | (string & {}) | number;\n\n  /** If set, adjusts text color based on background color for `filled` variant */\n  autoContrast?: boolean;\n\n  /** Options passed down to `use-scroll-spy` hook */\n  scrollSpyOptions?: UseScrollSpyOptions;\n\n  /** Data used to render content until actual values are retrieved from the DOM */\n  initialData?: InitialTableOfContentsData[];\n\n  /** A function to pass props down to controls, accepts values from `use-scroll-spy` hook as an argument and active state. */\n  getControlProps?: (\n    payload: TableOfContentsGetControlPropsPayload\n  ) => UnstyledButtonProps & ElementProps<'button'> & Record<`data-${string}`, any>;\n\n  /** Minimum `depth` value that requires offset, `1` by default */\n  minDepthToOffset?: number;\n\n  /** Controls padding on the left side of control, multiplied by (`depth` - `minDepthToOffset`), `20px` by default  */\n  depthOffset?: number | string;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`@default `theme.defaultRadius` */\n  radius?: MantineRadius;\n\n  /** A function to reinitialize headings from `use-scroll-spy` hook */\n  reinitializeRef?: React.RefObject<() => void>;\n}\n\nexport type TableOfContentsFactory = Factory<{\n  props: TableOfContentsProps;\n  ref: HTMLDivElement;\n  stylesNames: TableOfContentsStylesNames;\n  vars: TableOfContentsCssVariables;\n  variant: TableOfContentsVariant;\n}>;\n\nconst defaultProps = {\n  getControlProps: ({ data }) => ({\n    children: data.value,\n  }),\n} satisfies Partial<TableOfContentsProps>;\n\nconst varsResolver = createVarsResolver<TableOfContentsFactory>(\n  (theme, { color, size, variant, autoContrast, depthOffset, radius }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'filled',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--toc-bg': variant !== 'none' ? colors.background : undefined,\n        '--toc-color': variant !== 'none' ? colors.color : undefined,\n        '--toc-size': getFontSize(size),\n        '--toc-depth-offset': rem(depthOffset),\n        '--toc-radius': getRadius(radius),\n      },\n    };\n  }\n);\n\nexport const TableOfContents = factory<TableOfContentsFactory>((_props, ref) => {\n  const props = useProps('TableOfContents', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    color,\n    autoContrast,\n    scrollSpyOptions,\n    initialData,\n    getControlProps,\n    minDepthToOffset,\n    depthOffset,\n    variant,\n    radius,\n    reinitializeRef,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<TableOfContentsFactory>({\n    name: 'TableOfContents',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const idBase = useId();\n  const spy = useScrollSpy(scrollSpyOptions);\n\n  assignRef(reinitializeRef, spy.reinitialize);\n\n  const headingsData = (\n    spy.initialized ? spy.data : initialData || []\n  ) as UseScrollSpyHeadingData[];\n\n  const controls = headingsData.map((data, index) => {\n    const controlProps = getControlProps?.({\n      active: index === spy.active,\n      data: {\n        ...data,\n        getNode: data.getNode || (() => {}),\n      },\n    });\n\n    return (\n      <UnstyledButton\n        key={data.id || `${idBase}-${index}`}\n        __vars={{ '--depth-offset': `${data.depth - (minDepthToOffset || 1)}` }}\n        data-active={index === spy.active || undefined}\n        variant={variant}\n        {...controlProps}\n        {...getStyles('control', {\n          className: controlProps?.className,\n          style: controlProps?.style,\n        })}\n      />\n    );\n  });\n\n  return (\n    <Box ref={ref} variant={variant} {...getStyles('root')} {...others}>\n      {controls}\n    </Box>\n  );\n});\n\nTableOfContents.displayName = '@mantine/core/TableOfContents';\nTableOfContents.classes = classes;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}