{"ast":null,"code":"'use client';\n\nimport { jsx, Fragment } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport 'clsx';\nimport { useMantineEnv } from '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { Portal } from './Portal.mjs';\nconst OptionalPortal = factory(({\n  withinPortal = true,\n  children,\n  ...others\n}, ref) => {\n  const env = useMantineEnv();\n  if (env === \"test\" || !withinPortal) {\n    return /* @__PURE__ */jsx(Fragment, {\n      children\n    });\n  }\n  return /* @__PURE__ */jsx(Portal, {\n    ref,\n    ...others,\n    children\n  });\n});\nOptionalPortal.displayName = \"@mantine/core/OptionalPortal\";\nexport { OptionalPortal };","map":{"version":3,"names":["OptionalPortal","factory","withinPortal","children","others","ref","env","useMantineEnv","jsx","Fragment","Portal","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Portal/OptionalPortal.tsx"],"sourcesContent":["import { factory, Factory, useMantineEnv } from '../../core';\nimport { Portal, PortalProps } from './Portal';\n\nexport interface OptionalPortalProps extends PortalProps {\n  /** Determines whether children should be rendered inside `<Portal />` */\n  withinPortal?: boolean;\n}\n\nexport type OptionalPortalFactory = Factory<{\n  props: OptionalPortalProps;\n  ref: HTMLDivElement;\n}>;\n\nexport const OptionalPortal = factory<OptionalPortalFactory>(\n  ({ withinPortal = true, children, ...others }, ref) => {\n    const env = useMantineEnv();\n\n    if (env === 'test' || !withinPortal) {\n      return <>{children}</>;\n    }\n\n    return (\n      <Portal ref={ref} {...others}>\n        {children}\n      </Portal>\n    );\n  }\n);\n\nOptionalPortal.displayName = '@mantine/core/OptionalPortal';\n"],"mappings":";;;;;;;;;;;;;;;;AAaO,MAAMA,cAAA,GAAiBC,OAAA,CAC5B,CAAC;EAAEC,YAAA,GAAe;EAAMC,QAAA;EAAU,GAAGC;AAAA,GAAUC,GAAA,KAAQ;EACrD,MAAMC,GAAA,GAAMC,aAAA,EAAc;EAE1B,IAAID,GAAA,KAAQ,UAAU,CAACJ,YAAA,EAAc;IACnC,sBAAAM,GAAA,CAAAC,QAAA;MAAUN;IAAA,CAAS;EACrB;EAEA,sBACEK,GAAA,CAACE,MAAA;IAAOL,GAAA;IAAW,GAAGD,MAAA;IACnBD;EAAA,CACH;AAEJ,CACF;AAEAH,cAAA,CAAeW,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}