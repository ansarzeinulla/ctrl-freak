{"ast":null,"code":"function getTransformedScaledValue(value) {\n  if (typeof value !== \"string\" || !value.includes(\"var(--mantine-scale)\")) {\n    return value;\n  }\n  return value.match(/^calc\\((.*?)\\)$/)?.[1].split(\"*\")[0].trim();\n}\nfunction px(value) {\n  const transformedValue = getTransformedScaledValue(value);\n  if (typeof transformedValue === \"number\") {\n    return transformedValue;\n  }\n  if (typeof transformedValue === \"string\") {\n    if (transformedValue.includes(\"calc\") || transformedValue.includes(\"var\")) {\n      return transformedValue;\n    }\n    if (transformedValue.includes(\"px\")) {\n      return Number(transformedValue.replace(\"px\", \"\"));\n    }\n    if (transformedValue.includes(\"rem\")) {\n      return Number(transformedValue.replace(\"rem\", \"\")) * 16;\n    }\n    if (transformedValue.includes(\"em\")) {\n      return Number(transformedValue.replace(\"em\", \"\")) * 16;\n    }\n    return Number(transformedValue);\n  }\n  return NaN;\n}\nexport { px };","map":{"version":3,"names":["getTransformedScaledValue","value","includes","match","split","trim","px","transformedValue","Number","replace","NaN"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/core/utils/units-converters/px.ts"],"sourcesContent":["function getTransformedScaledValue(value: unknown) {\n  if (typeof value !== 'string' || !value.includes('var(--mantine-scale)')) {\n    return value;\n  }\n\n  return value\n    .match(/^calc\\((.*?)\\)$/)?.[1]\n    .split('*')[0]\n    .trim();\n}\n\nexport function px(value: unknown) {\n  const transformedValue = getTransformedScaledValue(value);\n\n  if (typeof transformedValue === 'number') {\n    return transformedValue;\n  }\n\n  if (typeof transformedValue === 'string') {\n    if (transformedValue.includes('calc') || transformedValue.includes('var')) {\n      return transformedValue;\n    }\n\n    if (transformedValue.includes('px')) {\n      return Number(transformedValue.replace('px', ''));\n    }\n\n    if (transformedValue.includes('rem')) {\n      return Number(transformedValue.replace('rem', '')) * 16;\n    }\n\n    if (transformedValue.includes('em')) {\n      return Number(transformedValue.replace('em', '')) * 16;\n    }\n\n    return Number(transformedValue);\n  }\n\n  return NaN;\n}\n"],"mappings":"AAAA,SAASA,0BAA0BC,KAAA,EAAgB;EACjD,IAAI,OAAOA,KAAA,KAAU,YAAY,CAACA,KAAA,CAAMC,QAAA,CAAS,sBAAsB,GAAG;IACxE,OAAOD,KAAA;EACT;EAEA,OAAOA,KAAA,CACJE,KAAA,CAAM,iBAAiB,IAAI,CAAC,EAC5BC,KAAA,CAAM,GAAG,EAAE,CAAC,EACZC,IAAA,EAAK;AACV;AAEO,SAASC,GAAGL,KAAA,EAAgB;EACjC,MAAMM,gBAAA,GAAmBP,yBAAA,CAA0BC,KAAK;EAExD,IAAI,OAAOM,gBAAA,KAAqB,UAAU;IACxC,OAAOA,gBAAA;EACT;EAEA,IAAI,OAAOA,gBAAA,KAAqB,UAAU;IACxC,IAAIA,gBAAA,CAAiBL,QAAA,CAAS,MAAM,KAAKK,gBAAA,CAAiBL,QAAA,CAAS,KAAK,GAAG;MACzE,OAAOK,gBAAA;IACT;IAEA,IAAIA,gBAAA,CAAiBL,QAAA,CAAS,IAAI,GAAG;MACnC,OAAOM,MAAA,CAAOD,gBAAA,CAAiBE,OAAA,CAAQ,MAAM,EAAE,CAAC;IAClD;IAEA,IAAIF,gBAAA,CAAiBL,QAAA,CAAS,KAAK,GAAG;MACpC,OAAOM,MAAA,CAAOD,gBAAA,CAAiBE,OAAA,CAAQ,OAAO,EAAE,CAAC,IAAI;IACvD;IAEA,IAAIF,gBAAA,CAAiBL,QAAA,CAAS,IAAI,GAAG;MACnC,OAAOM,MAAA,CAAOD,gBAAA,CAAiBE,OAAA,CAAQ,MAAM,EAAE,CAAC,IAAI;IACtD;IAEA,OAAOD,MAAA,CAAOD,gBAAgB;EAChC;EAEA,OAAOG,GAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}