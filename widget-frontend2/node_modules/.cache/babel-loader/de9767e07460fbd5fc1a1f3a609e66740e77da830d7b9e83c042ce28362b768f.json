{"ast":null,"code":"'use client';\n\nfunction getAllCheckedNodes(data, checkedState, acc = []) {\n  const currentTreeChecked = [];\n  for (const node of data) {\n    if (Array.isArray(node.children) && node.children.length > 0) {\n      const innerChecked = getAllCheckedNodes(node.children, checkedState, acc);\n      if (innerChecked.currentTreeChecked.length === node.children.length) {\n        const isChecked = innerChecked.currentTreeChecked.every(item2 => item2.checked);\n        const item = {\n          checked: isChecked,\n          indeterminate: !isChecked,\n          value: node.value,\n          hasChildren: true\n        };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      } else if (innerChecked.currentTreeChecked.length > 0) {\n        const item = {\n          checked: false,\n          indeterminate: true,\n          value: node.value,\n          hasChildren: true\n        };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      }\n    } else if (checkedState.includes(node.value)) {\n      const item = {\n        checked: true,\n        indeterminate: false,\n        value: node.value,\n        hasChildren: false\n      };\n      currentTreeChecked.push(item);\n      acc.push(item);\n    }\n  }\n  return {\n    result: acc,\n    currentTreeChecked\n  };\n}\nexport { getAllCheckedNodes };","map":{"version":3,"names":["getAllCheckedNodes","data","checkedState","acc","currentTreeChecked","node","Array","isArray","children","length","innerChecked","isChecked","every","item2","checked","item","indeterminate","value","hasChildren","push","includes","result"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Tree/get-all-checked-nodes/get-all-checked-nodes.ts"],"sourcesContent":["import type { TreeNodeData } from '../Tree';\n\nexport interface CheckedNodeStatus {\n  checked: boolean;\n  indeterminate: boolean;\n  hasChildren: boolean;\n  value: string;\n}\n\nexport function getAllCheckedNodes(\n  data: TreeNodeData[],\n  checkedState: string[],\n  acc: CheckedNodeStatus[] = []\n) {\n  const currentTreeChecked: CheckedNodeStatus[] = [];\n\n  for (const node of data) {\n    if (Array.isArray(node.children) && node.children.length > 0) {\n      const innerChecked = getAllCheckedNodes(node.children, checkedState, acc);\n      if (innerChecked.currentTreeChecked.length === node.children.length) {\n        const isChecked = innerChecked.currentTreeChecked.every((item) => item.checked);\n        const item = {\n          checked: isChecked,\n          indeterminate: !isChecked,\n          value: node.value,\n          hasChildren: true,\n        };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      } else if (innerChecked.currentTreeChecked.length > 0) {\n        const item = { checked: false, indeterminate: true, value: node.value, hasChildren: true };\n        currentTreeChecked.push(item);\n        acc.push(item);\n      }\n    } else if (checkedState.includes(node.value)) {\n      const item: CheckedNodeStatus = {\n        checked: true,\n        indeterminate: false,\n        value: node.value,\n        hasChildren: false,\n      };\n      currentTreeChecked.push(item);\n      acc.push(item);\n    }\n  }\n\n  return { result: acc, currentTreeChecked };\n}\n"],"mappings":";;AASO,SAASA,mBACdC,IAAA,EACAC,YAAA,EACAC,GAAA,GAA2B,EAAC,EAC5B;EACA,MAAMC,kBAAA,GAA0C,EAAC;EAEjD,WAAWC,IAAA,IAAQJ,IAAA,EAAM;IACvB,IAAIK,KAAA,CAAMC,OAAA,CAAQF,IAAA,CAAKG,QAAQ,KAAKH,IAAA,CAAKG,QAAA,CAASC,MAAA,GAAS,GAAG;MAC5D,MAAMC,YAAA,GAAeV,kBAAA,CAAmBK,IAAA,CAAKG,QAAA,EAAUN,YAAA,EAAcC,GAAG;MACxE,IAAIO,YAAA,CAAaN,kBAAA,CAAmBK,MAAA,KAAWJ,IAAA,CAAKG,QAAA,CAASC,MAAA,EAAQ;QACnE,MAAME,SAAA,GAAYD,YAAA,CAAaN,kBAAA,CAAmBQ,KAAA,CAAOC,KAAA,IAASA,KAAA,CAAKC,OAAO;QAC9E,MAAMC,IAAA,GAAO;UACXD,OAAA,EAASH,SAAA;UACTK,aAAA,EAAe,CAACL,SAAA;UAChBM,KAAA,EAAOZ,IAAA,CAAKY,KAAA;UACZC,WAAA,EAAa;QAAA,CACf;QACAd,kBAAA,CAAmBe,IAAA,CAAKJ,IAAI;QAC5BZ,GAAA,CAAIgB,IAAA,CAAKJ,IAAI;MACf,WAAWL,YAAA,CAAaN,kBAAA,CAAmBK,MAAA,GAAS,GAAG;QACrD,MAAMM,IAAA,GAAO;UAAED,OAAA,EAAS;UAAOE,aAAA,EAAe;UAAMC,KAAA,EAAOZ,IAAA,CAAKY,KAAA;UAAOC,WAAA,EAAa;QAAA,CAAK;QACzFd,kBAAA,CAAmBe,IAAA,CAAKJ,IAAI;QAC5BZ,GAAA,CAAIgB,IAAA,CAAKJ,IAAI;MACf;IACF,WAAWb,YAAA,CAAakB,QAAA,CAASf,IAAA,CAAKY,KAAK,GAAG;MAC5C,MAAMF,IAAA,GAA0B;QAC9BD,OAAA,EAAS;QACTE,aAAA,EAAe;QACfC,KAAA,EAAOZ,IAAA,CAAKY,KAAA;QACZC,WAAA,EAAa;MAAA,CACf;MACAd,kBAAA,CAAmBe,IAAA,CAAKJ,IAAI;MAC5BZ,GAAA,CAAIgB,IAAA,CAAKJ,IAAI;IACf;EACF;EAEA,OAAO;IAAEM,MAAA,EAAQlB,GAAA;IAAKC;EAAA,CAAmB;AAC3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}