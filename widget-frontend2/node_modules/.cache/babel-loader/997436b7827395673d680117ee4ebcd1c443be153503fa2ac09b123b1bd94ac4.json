{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { filterFalsyChildren } from './filter-falsy-children/filter-falsy-children.mjs';\nimport classes from './Group.module.css.mjs';\nconst defaultProps = {\n  preventGrowOverflow: true,\n  gap: \"md\",\n  align: \"center\",\n  justify: \"flex-start\",\n  wrap: \"wrap\"\n};\nconst varsResolver = createVarsResolver((_, {\n  grow,\n  preventGrowOverflow,\n  gap,\n  align,\n  justify,\n  wrap\n}, {\n  childWidth\n}) => ({\n  root: {\n    \"--group-child-width\": grow && preventGrowOverflow ? childWidth : void 0,\n    \"--group-gap\": getSpacing(gap),\n    \"--group-align\": align,\n    \"--group-justify\": justify,\n    \"--group-wrap\": wrap\n  }\n}));\nconst Group = factory((_props, ref) => {\n  const props = useProps(\"Group\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    children,\n    gap,\n    align,\n    justify,\n    wrap,\n    grow,\n    preventGrowOverflow,\n    vars,\n    variant,\n    __size,\n    mod,\n    attributes,\n    ...others\n  } = props;\n  const filteredChildren = filterFalsyChildren(children);\n  const childrenCount = filteredChildren.length;\n  const resolvedGap = getSpacing(gap ?? \"md\");\n  const childWidth = `calc(${100 / childrenCount}% - (${resolvedGap} - ${resolvedGap} / ${childrenCount}))`;\n  const stylesCtx = {\n    childWidth\n  };\n  const getStyles = useStyles({\n    name: \"Group\",\n    props,\n    stylesCtx,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(Box, {\n    ...getStyles(\"root\"),\n    ref,\n    variant,\n    mod: [{\n      grow\n    }, mod],\n    size: __size,\n    ...others,\n    children: filteredChildren\n  });\n});\nGroup.classes = classes;\nGroup.displayName = \"@mantine/core/Group\";\nexport { Group };","map":{"version":3,"names":["defaultProps","preventGrowOverflow","gap","align","justify","wrap","varsResolver","createVarsResolver","_","grow","childWidth","root","getSpacing","Group","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","children","vars","variant","__size","mod","attributes","others","filteredChildren","filterFalsyChildren","childrenCount","length","resolvedGap","stylesCtx","getStyles","useStyles","name","classes","jsx","Box","size","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Group/Group.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { filterFalsyChildren } from './filter-falsy-children/filter-falsy-children';\nimport classes from './Group.module.css';\n\nexport type GroupStylesNames = 'root';\nexport type GroupCssVariables = {\n  root:\n    | '--group-gap'\n    | '--group-align'\n    | '--group-justify'\n    | '--group-wrap'\n    | '--group-child-width';\n};\n\nexport interface GroupStylesCtx {\n  childWidth: string;\n}\n\nexport interface GroupProps extends BoxProps, StylesApiProps<GroupFactory>, ElementProps<'div'> {\n  __size?: any;\n\n  /** Controls `justify-content` CSS property @default `'flex-start'` */\n  justify?: React.CSSProperties['justifyContent'];\n\n  /** Controls `align-items` CSS property @default `'center'` */\n  align?: React.CSSProperties['alignItems'];\n\n  /** Controls `flex-wrap` CSS property @default `'wrap'` */\n  wrap?: React.CSSProperties['flexWrap'];\n\n  /** Key of `theme.spacing` or any valid CSS value for `gap`, numbers are converted to rem @default `'md'` */\n  gap?: MantineSpacing;\n\n  /** Determines whether each child element should have `flex-grow: 1` style @default `false` */\n  grow?: boolean;\n\n  /** Determines whether children should take only dedicated amount of space (`max-width` style is set based on the number of children) @default `true` */\n  preventGrowOverflow?: boolean;\n}\n\nexport type GroupFactory = Factory<{\n  props: GroupProps;\n  ref: HTMLDivElement;\n  stylesNames: GroupStylesNames;\n  vars: GroupCssVariables;\n  ctx: GroupStylesCtx;\n}>;\n\nconst defaultProps = {\n  preventGrowOverflow: true,\n  gap: 'md',\n  align: 'center',\n  justify: 'flex-start',\n  wrap: 'wrap',\n} satisfies Partial<GroupProps>;\n\nconst varsResolver = createVarsResolver<GroupFactory>(\n  (_, { grow, preventGrowOverflow, gap, align, justify, wrap }, { childWidth }) => ({\n    root: {\n      '--group-child-width': grow && preventGrowOverflow ? childWidth : undefined,\n      '--group-gap': getSpacing(gap),\n      '--group-align': align,\n      '--group-justify': justify,\n      '--group-wrap': wrap,\n    },\n  })\n);\n\nexport const Group = factory<GroupFactory>((_props, ref) => {\n  const props = useProps('Group', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    children,\n    gap,\n    align,\n    justify,\n    wrap,\n    grow,\n    preventGrowOverflow,\n    vars,\n    variant,\n    __size,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const filteredChildren = filterFalsyChildren(children);\n  const childrenCount = filteredChildren.length;\n  const resolvedGap = getSpacing(gap ?? 'md');\n  const childWidth = `calc(${\n    100 / childrenCount\n  }% - (${resolvedGap} - ${resolvedGap} / ${childrenCount}))`;\n\n  const stylesCtx: GroupStylesCtx = { childWidth };\n\n  const getStyles = useStyles<GroupFactory>({\n    name: 'Group',\n    props,\n    stylesCtx,\n    className,\n    style,\n    classes,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box\n      {...getStyles('root')}\n      ref={ref}\n      variant={variant}\n      mod={[{ grow }, mod]}\n      size={__size}\n      {...others}\n    >\n      {filteredChildren}\n    </Box>\n  );\n});\n\nGroup.classes = classes;\nGroup.displayName = '@mantine/core/Group';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AA4DA,MAAMA,YAAA,GAAe;EACnBC,mBAAA,EAAqB;EACrBC,GAAA,EAAK;EACLC,KAAA,EAAO;EACPC,OAAA,EAAS;EACTC,IAAA,EAAM;AACR;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CACnB,CAACC,CAAA,EAAG;EAAEC,IAAA;EAAMR,mBAAA;EAAqBC,GAAA;EAAKC,KAAA;EAAOC,OAAA;EAASC;AAAA,CAAK,EAAG;EAAEK;AAAA,CAAW,MAAO;EAChFC,IAAA,EAAM;IACJ,uBAAuBF,IAAA,IAAQR,mBAAA,GAAsBS,UAAA,GAAa;IAClE,eAAeE,UAAA,CAAWV,GAAG;IAC7B,iBAAiBC,KAAA;IACjB,mBAAmBC,OAAA;IACnB,gBAAgBC;EAAA;AAClB,CACF,CACF;AAEO,MAAMQ,KAAA,GAAQC,OAAA,CAAsB,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAC1D,MAAMC,KAAA,GAAQC,QAAA,CAAS,SAASlB,YAAA,EAAce,MAAM;EACpD,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,QAAA;IACAtB,GAAA;IACAC,KAAA;IACAC,OAAA;IACAC,IAAA;IACAI,IAAA;IACAR,mBAAA;IACAwB,IAAA;IACAC,OAAA;IACAC,MAAA;IACAC,GAAA;IACAC,UAAA;IACA,GAAGC;EAAA,CACL,GAAIb,KAAA;EAEJ,MAAMc,gBAAA,GAAmBC,mBAAA,CAAoBR,QAAQ;EACrD,MAAMS,aAAA,GAAgBF,gBAAA,CAAiBG,MAAA;EACvC,MAAMC,WAAA,GAAcvB,UAAA,CAAWV,GAAA,IAAO,IAAI;EAC1C,MAAMQ,UAAA,GAAa,QACjB,MAAMuB,aACR,QAAQE,WAAW,MAAMA,WAAW,MAAMF,aAAa;EAEvD,MAAMG,SAAA,GAA4B;IAAE1B;EAAA,CAAW;EAE/C,MAAM2B,SAAA,GAAYC,SAAA,CAAwB;IACxCC,IAAA,EAAM;IACNtB,KAAA;IACAmB,SAAA;IACAhB,SAAA;IACAC,KAAA;IACAmB,OAAA;IACArB,UAAA;IACAG,MAAA;IACAC,QAAA;IACAM,UAAA;IACAJ,IAAA;IACAnB;EAAA,CACD;EAED,sBACEmC,GAAA,CAACC,GAAA;IACE,GAAGL,SAAA,CAAU,MAAM;IACpBrB,GAAA;IACAU,OAAA;IACAE,GAAA,EAAK,CAAC;MAAEnB;IAAA,GAAQmB,GAAG;IACnBe,IAAA,EAAMhB,MAAA;IACL,GAAGG,MAAA;IAEHN,QAAA,EAAAO;EAAA,EACH;AAEJ,CAAC;AAEDlB,KAAA,CAAM2B,OAAA,GAAUA,OAAA;AAChB3B,KAAA,CAAM+B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}