{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useCallback } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect.mjs';\nconst defaultOptions = {\n  multiple: true,\n  accept: \"*\"\n};\nfunction getInitialFilesList(files) {\n  if (!files) {\n    return null;\n  }\n  if (files instanceof FileList) {\n    return files;\n  }\n  const result = new DataTransfer();\n  for (const file of files) {\n    result.items.add(file);\n  }\n  return result.files;\n}\nfunction createInput(options) {\n  if (typeof document === \"undefined\") {\n    return null;\n  }\n  const input = document.createElement(\"input\");\n  input.type = \"file\";\n  if (options.accept) {\n    input.accept = options.accept;\n  }\n  if (options.multiple) {\n    input.multiple = options.multiple;\n  }\n  if (options.capture) {\n    input.capture = options.capture;\n  }\n  if (options.directory) {\n    input.webkitdirectory = options.directory;\n  }\n  input.style.display = \"none\";\n  return input;\n}\nfunction useFileDialog(input = {}) {\n  const options = {\n    ...defaultOptions,\n    ...input\n  };\n  const [files, setFiles] = useState(getInitialFilesList(options.initialFiles));\n  const inputRef = useRef(null);\n  const handleChange = useCallback(event => {\n    const target = event.target;\n    if (target?.files) {\n      setFiles(target.files);\n      options.onChange?.(target.files);\n    }\n  }, [options.onChange]);\n  const createAndSetupInput = useCallback(() => {\n    inputRef.current?.remove();\n    inputRef.current = createInput(options);\n    if (inputRef.current) {\n      inputRef.current.addEventListener(\"change\", handleChange, {\n        once: true\n      });\n      document.body.appendChild(inputRef.current);\n    }\n  }, [options, handleChange]);\n  useIsomorphicEffect(() => {\n    createAndSetupInput();\n    return () => inputRef.current?.remove();\n  }, []);\n  const reset = useCallback(() => {\n    setFiles(null);\n    options.onChange?.(null);\n  }, [options.onChange]);\n  const open = useCallback(() => {\n    if (options.resetOnOpen) {\n      reset();\n    }\n    createAndSetupInput();\n    inputRef.current?.click();\n  }, [options.resetOnOpen, reset, createAndSetupInput]);\n  return {\n    files,\n    open,\n    reset\n  };\n}\nexport { useFileDialog };","map":{"version":3,"names":["defaultOptions","multiple","accept","getInitialFilesList","files","FileList","result","DataTransfer","file","items","add","createInput","options","document","input","createElement","type","capture","directory","webkitdirectory","style","display","useFileDialog","setFiles","useState","initialFiles","inputRef","useRef","handleChange","useCallback","event","target","onChange","createAndSetupInput","current","remove","addEventListener","once","body","appendChild","useIsomorphicEffect","reset","open","resetOnOpen","click"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-file-dialog/use-file-dialog.ts"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\nimport { useIsomorphicEffect } from '../use-isomorphic-effect/use-isomorphic-effect';\n\nexport interface UseFileDialogOptions {\n  /** Determines whether multiple files are allowed, `true` by default */\n  multiple?: boolean;\n\n  /** `accept` attribute of the file input, '*' by default */\n  accept?: string;\n\n  /** `capture` attribute of the file input */\n  capture?: string;\n\n  /** Determines whether the user can pick a directory instead of file, `false` by default */\n  directory?: boolean;\n\n  /** Determines whether the file input state should be reset when the file dialog is opened, `false` by default */\n  resetOnOpen?: boolean;\n\n  /** Initial selected files */\n  initialFiles?: FileList | File[];\n\n  /** Called when files are selected */\n  onChange?: (files: FileList | null) => void;\n\n  /** Called when file dialog is canceled */\n  onCancel?: () => void;\n}\n\nconst defaultOptions: UseFileDialogOptions = {\n  multiple: true,\n  accept: '*',\n};\n\nfunction getInitialFilesList(files: UseFileDialogOptions['initialFiles']): FileList | null {\n  if (!files) {\n    return null;\n  }\n\n  if (files instanceof FileList) {\n    return files;\n  }\n\n  const result = new DataTransfer();\n  for (const file of files) {\n    result.items.add(file);\n  }\n\n  return result.files;\n}\n\nfunction createInput(options: UseFileDialogOptions) {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n\n  const input = document.createElement('input');\n  input.type = 'file';\n\n  if (options.accept) {\n    input.accept = options.accept;\n  }\n\n  if (options.multiple) {\n    input.multiple = options.multiple;\n  }\n\n  if (options.capture) {\n    input.capture = options.capture;\n  }\n\n  if (options.directory) {\n    input.webkitdirectory = options.directory;\n  }\n\n  input.style.display = 'none';\n  return input;\n}\n\nexport interface UseFileDialogReturnValue {\n  files: FileList | null;\n  open: () => void;\n  reset: () => void;\n}\n\nexport function useFileDialog(input: UseFileDialogOptions = {}): UseFileDialogReturnValue {\n  const options: UseFileDialogOptions = { ...defaultOptions, ...input };\n  const [files, setFiles] = useState<FileList | null>(getInitialFilesList(options.initialFiles));\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const handleChange = useCallback(\n    (event: Event) => {\n      const target = event.target as HTMLInputElement;\n      if (target?.files) {\n        setFiles(target.files);\n        options.onChange?.(target.files);\n      }\n    },\n    [options.onChange]\n  );\n\n  const createAndSetupInput = useCallback(() => {\n    inputRef.current?.remove();\n    inputRef.current = createInput(options);\n\n    if (inputRef.current) {\n      inputRef.current.addEventListener('change', handleChange, { once: true });\n      document.body.appendChild(inputRef.current);\n    }\n  }, [options, handleChange]);\n\n  useIsomorphicEffect(() => {\n    createAndSetupInput();\n    return () => inputRef.current?.remove();\n  }, []);\n\n  const reset = useCallback(() => {\n    setFiles(null);\n    options.onChange?.(null);\n  }, [options.onChange]);\n\n  const open = useCallback(() => {\n    if (options.resetOnOpen) {\n      reset();\n    }\n\n    createAndSetupInput();\n    inputRef.current?.click();\n  }, [options.resetOnOpen, reset, createAndSetupInput]);\n\n  return { files, open, reset };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}