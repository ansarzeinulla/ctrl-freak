{"ast":null,"code":"'use client';\n\nimport { keys } from '../../../../core/utils/keys/keys.mjs';\nimport { rem } from '../../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport { getBreakpointValue } from '../../../../core/utils/get-breakpoint-value/get-breakpoint-value.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../../core/MantineProvider/default-theme.mjs';\nimport '../../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../../core/Box/Box.mjs';\nimport '../../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getBaseSize } from '../get-base-size/get-base-size.mjs';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.mjs';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size.mjs';\nfunction assignNavbarVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  navbar,\n  theme\n}) {\n  const navbarWidth = navbar?.width;\n  const collapsedNavbarTransform = \"translateX(calc(var(--app-shell-navbar-width) * -1))\";\n  const collapsedNavbarTransformRtl = \"translateX(var(--app-shell-navbar-width))\";\n  if (navbar?.breakpoint && !navbar?.collapsed?.mobile) {\n    maxMediaStyles[navbar?.breakpoint] = maxMediaStyles[navbar?.breakpoint] || {};\n    maxMediaStyles[navbar?.breakpoint][\"--app-shell-navbar-width\"] = \"100%\";\n    maxMediaStyles[navbar?.breakpoint][\"--app-shell-navbar-offset\"] = \"0px\";\n  }\n  if (isPrimitiveSize(navbarWidth)) {\n    const baseSize = rem(getBaseSize(navbarWidth));\n    baseStyles[\"--app-shell-navbar-width\"] = baseSize;\n    baseStyles[\"--app-shell-navbar-offset\"] = baseSize;\n  }\n  if (isResponsiveSize(navbarWidth)) {\n    if (typeof navbarWidth.base !== \"undefined\") {\n      baseStyles[\"--app-shell-navbar-width\"] = rem(navbarWidth.base);\n      baseStyles[\"--app-shell-navbar-offset\"] = rem(navbarWidth.base);\n    }\n    keys(navbarWidth).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-navbar-width\"] = rem(navbarWidth[key]);\n        minMediaStyles[key][\"--app-shell-navbar-offset\"] = rem(navbarWidth[key]);\n      }\n    });\n  }\n  if (navbar?.collapsed?.desktop) {\n    const breakpointValue = navbar.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue][\"--app-shell-navbar-transform\"] = collapsedNavbarTransform;\n    minMediaStyles[breakpointValue][\"--app-shell-navbar-transform-rtl\"] = collapsedNavbarTransformRtl;\n    minMediaStyles[breakpointValue][\"--app-shell-navbar-offset\"] = \"0px !important\";\n  }\n  if (navbar?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(navbar.breakpoint, theme.breakpoints) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-width\"] = \"100%\";\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-offset\"] = \"0px\";\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-transform\"] = collapsedNavbarTransform;\n    maxMediaStyles[breakpointValue][\"--app-shell-navbar-transform-rtl\"] = collapsedNavbarTransformRtl;\n  }\n}\nexport { assignNavbarVariables };","map":{"version":3,"names":["assignNavbarVariables","baseStyles","minMediaStyles","maxMediaStyles","navbar","theme","navbarWidth","width","collapsedNavbarTransform","collapsedNavbarTransformRtl","breakpoint","collapsed","mobile","isPrimitiveSize","baseSize","rem","getBaseSize","isResponsiveSize","base","keys","forEach","key","desktop","breakpointValue","getBreakpointValue","breakpoints"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/AppShell/AppShellMediaStyles/assign-navbar-variables/assign-navbar-variables.ts"],"sourcesContent":["import { getBreakpointValue, keys, MantineTheme, rem } from '../../../../core';\nimport type { AppShellProps } from '../../AppShell';\nimport { getBaseSize } from '../get-base-size/get-base-size';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\n\ninterface AssignNavbarVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  maxMediaStyles: MediaQueryVariables;\n  navbar: AppShellProps['navbar'] | undefined;\n  theme: MantineTheme;\n}\n\nexport function assignNavbarVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  navbar,\n  theme,\n}: AssignNavbarVariablesInput) {\n  const navbarWidth = navbar?.width;\n  const collapsedNavbarTransform = 'translateX(calc(var(--app-shell-navbar-width) * -1))';\n  const collapsedNavbarTransformRtl = 'translateX(var(--app-shell-navbar-width))';\n\n  if (navbar?.breakpoint && !navbar?.collapsed?.mobile) {\n    maxMediaStyles[navbar?.breakpoint] = maxMediaStyles[navbar?.breakpoint] || {};\n    maxMediaStyles[navbar?.breakpoint]['--app-shell-navbar-width'] = '100%';\n    maxMediaStyles[navbar?.breakpoint]['--app-shell-navbar-offset'] = '0px';\n  }\n\n  if (isPrimitiveSize(navbarWidth)) {\n    const baseSize = rem(getBaseSize(navbarWidth));\n    baseStyles['--app-shell-navbar-width'] = baseSize;\n    baseStyles['--app-shell-navbar-offset'] = baseSize;\n  }\n\n  if (isResponsiveSize(navbarWidth)) {\n    if (typeof navbarWidth.base !== 'undefined') {\n      baseStyles['--app-shell-navbar-width'] = rem(navbarWidth.base);\n      baseStyles['--app-shell-navbar-offset'] = rem(navbarWidth.base);\n    }\n\n    keys(navbarWidth).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-navbar-width'] = rem(navbarWidth![key]);\n        minMediaStyles[key]['--app-shell-navbar-offset'] = rem(navbarWidth![key]);\n      }\n    });\n  }\n\n  if (navbar?.collapsed?.desktop) {\n    const breakpointValue = navbar!.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue]['--app-shell-navbar-transform'] = collapsedNavbarTransform;\n    minMediaStyles[breakpointValue]['--app-shell-navbar-transform-rtl'] =\n      collapsedNavbarTransformRtl;\n    minMediaStyles[breakpointValue]['--app-shell-navbar-offset'] = '0px !important';\n  }\n\n  if (navbar?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(navbar!.breakpoint, theme.breakpoints) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-width'] = '100%';\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-offset'] = '0px';\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-transform'] = collapsedNavbarTransform;\n    maxMediaStyles[breakpointValue]['--app-shell-navbar-transform-rtl'] =\n      collapsedNavbarTransformRtl;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAeO,SAASA,sBAAsB;EACpCC,UAAA;EACAC,cAAA;EACAC,cAAA;EACAC,MAAA;EACAC;AACF,GAA+B;EAC7B,MAAMC,WAAA,GAAcF,MAAA,EAAQG,KAAA;EAC5B,MAAMC,wBAAA,GAA2B;EACjC,MAAMC,2BAAA,GAA8B;EAEpC,IAAIL,MAAA,EAAQM,UAAA,IAAc,CAACN,MAAA,EAAQO,SAAA,EAAWC,MAAA,EAAQ;IACpDT,cAAA,CAAeC,MAAA,EAAQM,UAAU,IAAIP,cAAA,CAAeC,MAAA,EAAQM,UAAU,KAAK,EAAC;IAC5EP,cAAA,CAAeC,MAAA,EAAQM,UAAU,EAAE,0BAA0B,IAAI;IACjEP,cAAA,CAAeC,MAAA,EAAQM,UAAU,EAAE,2BAA2B,IAAI;EACpE;EAEA,IAAIG,eAAA,CAAgBP,WAAW,GAAG;IAChC,MAAMQ,QAAA,GAAWC,GAAA,CAAIC,WAAA,CAAYV,WAAW,CAAC;IAC7CL,UAAA,CAAW,0BAA0B,IAAIa,QAAA;IACzCb,UAAA,CAAW,2BAA2B,IAAIa,QAAA;EAC5C;EAEA,IAAIG,gBAAA,CAAiBX,WAAW,GAAG;IACjC,IAAI,OAAOA,WAAA,CAAYY,IAAA,KAAS,aAAa;MAC3CjB,UAAA,CAAW,0BAA0B,IAAIc,GAAA,CAAIT,WAAA,CAAYY,IAAI;MAC7DjB,UAAA,CAAW,2BAA2B,IAAIc,GAAA,CAAIT,WAAA,CAAYY,IAAI;IAChE;IAEAC,IAAA,CAAKb,WAAW,EAAEc,OAAA,CAASC,GAAA,IAAQ;MACjC,IAAIA,GAAA,KAAQ,QAAQ;QAClBnB,cAAA,CAAemB,GAAG,IAAInB,cAAA,CAAemB,GAAG,KAAK,EAAC;QAC9CnB,cAAA,CAAemB,GAAG,EAAE,0BAA0B,IAAIN,GAAA,CAAIT,WAAA,CAAae,GAAG,CAAC;QACvEnB,cAAA,CAAemB,GAAG,EAAE,2BAA2B,IAAIN,GAAA,CAAIT,WAAA,CAAae,GAAG,CAAC;MAC1E;IACF,CAAC;EACH;EAEA,IAAIjB,MAAA,EAAQO,SAAA,EAAWW,OAAA,EAAS;IAC9B,MAAMC,eAAA,GAAkBnB,MAAA,CAAQM,UAAA;IAChCR,cAAA,CAAeqB,eAAe,IAAIrB,cAAA,CAAeqB,eAAe,KAAK,EAAC;IACtErB,cAAA,CAAeqB,eAAe,EAAE,8BAA8B,IAAIf,wBAAA;IAClEN,cAAA,CAAeqB,eAAe,EAAE,kCAAkC,IAChEd,2BAAA;IACFP,cAAA,CAAeqB,eAAe,EAAE,2BAA2B,IAAI;EACjE;EAEA,IAAInB,MAAA,EAAQO,SAAA,EAAWC,MAAA,EAAQ;IAC7B,MAAMW,eAAA,GAAkBC,kBAAA,CAAmBpB,MAAA,CAAQM,UAAA,EAAYL,KAAA,CAAMoB,WAAW,IAAI;IACpFtB,cAAA,CAAeoB,eAAe,IAAIpB,cAAA,CAAeoB,eAAe,KAAK,EAAC;IACtEpB,cAAA,CAAeoB,eAAe,EAAE,0BAA0B,IAAI;IAC9DpB,cAAA,CAAeoB,eAAe,EAAE,2BAA2B,IAAI;IAC/DpB,cAAA,CAAeoB,eAAe,EAAE,8BAA8B,IAAIf,wBAAA;IAClEL,cAAA,CAAeoB,eAAe,EAAE,kCAAkC,IAChEd,2BAAA;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}