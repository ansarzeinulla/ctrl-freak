{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useEffect } from 'react';\nimport '../../core/utils/units-converters/rem.mjs';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Image.module.css.mjs';\nconst varsResolver = createVarsResolver((_, {\n  radius,\n  fit\n}) => ({\n  root: {\n    \"--image-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--image-object-fit\": fit\n  }\n}));\nconst Image = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Image\", null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    attributes,\n    ...others\n  } = props;\n  const [error, setError] = useState(!src);\n  useEffect(() => setError(!src), [src]);\n  const getStyles = useStyles({\n    name: \"Image\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  if (error && fallbackSrc) {\n    return /* @__PURE__ */jsx(Box, {\n      component: \"img\",\n      ref,\n      src: fallbackSrc,\n      ...getStyles(\"root\"),\n      onError,\n      mod: [\"fallback\", mod],\n      ...others\n    });\n  }\n  return /* @__PURE__ */jsx(Box, {\n    component: \"img\",\n    ref,\n    ...getStyles(\"root\"),\n    src,\n    onError: event => {\n      onError?.(event);\n      setError(true);\n    },\n    mod,\n    ...others\n  });\n});\nImage.classes = classes;\nImage.displayName = \"@mantine/core/Image\";\nexport { Image };","map":{"version":3,"names":["varsResolver","createVarsResolver","_","radius","fit","root","getRadius","Image","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","onError","src","fallbackSrc","mod","attributes","others","error","setError","useState","useEffect","getStyles","useStyles","name","classes","jsx","Box","component","event","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Image/Image.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  MantineRadius,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Image.module.css';\n\nexport type ImageStylesNames = 'root';\nexport type ImageCssVariables = {\n  root: '--image-radius' | '--image-object-fit';\n};\n\nexport interface ImageProps extends BoxProps, StylesApiProps<ImageFactory> {\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius` @default `0` */\n  radius?: MantineRadius;\n\n  /** Controls `object-fit` style @default `'cover'` */\n  fit?: React.CSSProperties['objectFit'];\n\n  /** Image url used as a fallback if the image cannot be loaded */\n  fallbackSrc?: string;\n\n  /** Image url */\n  src?: any;\n\n  /** Called when image fails to load */\n  onError?: (event: React.SyntheticEvent<HTMLImageElement, Event>) => void;\n}\n\nexport type ImageFactory = PolymorphicFactory<{\n  props: ImageProps;\n  defaultRef: HTMLImageElement;\n  defaultComponent: 'img';\n  stylesNames: ImageStylesNames;\n  vars: ImageCssVariables;\n}>;\n\nconst varsResolver = createVarsResolver<ImageFactory>((_, { radius, fit }) => ({\n  root: {\n    '--image-radius': radius === undefined ? undefined : getRadius(radius),\n    '--image-object-fit': fit,\n  },\n}));\n\nexport const Image = polymorphicFactory<ImageFactory>((_props, ref) => {\n  const props = useProps('Image', null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    onError,\n    src,\n    radius,\n    fit,\n    fallbackSrc,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const [error, setError] = useState(!src);\n\n  useEffect(() => setError(!src), [src]);\n\n  const getStyles = useStyles<ImageFactory>({\n    name: 'Image',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  if (error && fallbackSrc) {\n    return (\n      <Box\n        component=\"img\"\n        ref={ref}\n        src={fallbackSrc}\n        {...getStyles('root')}\n        onError={onError}\n        mod={['fallback', mod]}\n        {...others}\n      />\n    );\n  }\n\n  return (\n    <Box\n      component=\"img\"\n      ref={ref}\n      {...getStyles('root')}\n      src={src}\n      onError={(event) => {\n        onError?.(event);\n        setError(true);\n      }}\n      mod={mod}\n      {...others}\n    />\n  );\n});\n\nImage.classes = classes;\nImage.displayName = '@mantine/core/Image';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AA6CA,MAAMA,YAAA,GAAeC,kBAAA,CAAiC,CAACC,CAAA,EAAG;EAAEC,MAAA;EAAQC;AAAA,CAAI,MAAO;EAC7EC,IAAA,EAAM;IACJ,kBAAkBF,MAAA,KAAW,SAAY,SAAYG,SAAA,CAAUH,MAAM;IACrE,sBAAsBC;EAAA;AAE1B,EAAE;AAEK,MAAMG,KAAA,GAAQC,kBAAA,CAAiC,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACrE,MAAMC,KAAA,GAAQC,QAAA,CAAS,SAAS,MAAMH,MAAM;EAC5C,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAC,OAAA;IACAC,GAAA;IACAjB,MAAA;IACAC,GAAA;IACAiB,WAAA;IACAC,GAAA;IACAC,UAAA;IACA,GAAGC;EAAA,CACL,GAAIb,KAAA;EAEJ,MAAM,CAACc,KAAA,EAAOC,QAAQ,IAAIC,QAAA,CAAS,CAACP,GAAG;EAEvCQ,SAAA,CAAU,MAAMF,QAAA,CAAS,CAACN,GAAG,GAAG,CAACA,GAAG,CAAC;EAErC,MAAMS,SAAA,GAAYC,SAAA,CAAwB;IACxCC,IAAA,EAAM;IACNC,OAAA;IACArB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAM,UAAA;IACAL,IAAA;IACAlB;EAAA,CACD;EAED,IAAIyB,KAAA,IAASJ,WAAA,EAAa;IACxB,sBACEY,GAAA,CAACC,GAAA;MACCC,SAAA,EAAU;MACVzB,GAAA;MACAU,GAAA,EAAKC,WAAA;MACJ,GAAGQ,SAAA,CAAU,MAAM;MACpBV,OAAA;MACAG,GAAA,EAAK,CAAC,YAAYA,GAAG;MACpB,GAAGE;IAAA,EACN;EAEJ;EAEA,sBACES,GAAA,CAACC,GAAA;IACCC,SAAA,EAAU;IACVzB,GAAA;IACC,GAAGmB,SAAA,CAAU,MAAM;IACpBT,GAAA;IACAD,OAAA,EAAUiB,KAAA,IAAU;MAClBjB,OAAA,GAAUiB,KAAK;MACfV,QAAA,CAAS,IAAI;IACf;IACAJ,GAAA;IACC,GAAGE;EAAA,EACN;AAEJ,CAAC;AAEDjB,KAAA,CAAMyB,OAAA,GAAUA,OAAA;AAChBzB,KAAA,CAAM8B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}