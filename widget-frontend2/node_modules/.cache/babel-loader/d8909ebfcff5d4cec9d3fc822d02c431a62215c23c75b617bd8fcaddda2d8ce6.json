{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { Overlay } from '../Overlay/Overlay.mjs';\nimport { Transition } from '../Transition/Transition.mjs';\nimport { useModalBaseContext } from './ModalBase.context.mjs';\nimport { useModalTransition } from './use-modal-transition.mjs';\nconst ModalBaseOverlay = forwardRef(({\n  onClick,\n  transitionProps,\n  style,\n  visible,\n  ...others\n}, ref) => {\n  const ctx = useModalBaseContext();\n  const transition = useModalTransition(transitionProps);\n  return /* @__PURE__ */jsx(Transition, {\n    mounted: visible !== void 0 ? visible : ctx.opened,\n    ...transition,\n    transition: \"fade\",\n    children: transitionStyles => /* @__PURE__ */jsx(Overlay, {\n      ref,\n      fixed: true,\n      style: [style, transitionStyles],\n      zIndex: ctx.zIndex,\n      unstyled: ctx.unstyled,\n      onClick: event => {\n        onClick?.(event);\n        ctx.closeOnClickOutside && ctx.onClose();\n      },\n      ...others\n    })\n  });\n});\nModalBaseOverlay.displayName = \"@mantine/core/ModalBaseOverlay\";\nexport { ModalBaseOverlay };","map":{"version":3,"names":["ModalBaseOverlay","forwardRef","onClick","transitionProps","style","visible","others","ref","ctx","useModalBaseContext","transition","useModalTransition","jsx","Transition","mounted","opened","children","transitionStyles","Overlay","fixed","zIndex","unstyled","event","closeOnClickOutside","onClose","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/ModalBase/ModalBaseOverlay.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { ElementProps } from '../../core';\nimport { Overlay, OverlayProps } from '../Overlay';\nimport { Transition, TransitionOverride } from '../Transition';\nimport { useModalBaseContext } from './ModalBase.context';\nimport { useModalTransition } from './use-modal-transition';\n\nexport interface ModalBaseOverlayProps\n  extends Omit<OverlayProps, 'styles' | 'classNames' | 'variant' | 'vars'>,\n    ElementProps<'div', 'color'> {\n  /** Props passed down to the `Transition` component */\n  transitionProps?: TransitionOverride;\n\n  /** Determines whether the overlay should be visible. By default, has the same value as `opened` state. */\n  visible?: boolean;\n}\n\nexport const ModalBaseOverlay = forwardRef<HTMLDivElement, ModalBaseOverlayProps>(\n  ({ onClick, transitionProps, style, visible, ...others }, ref) => {\n    const ctx = useModalBaseContext();\n    const transition = useModalTransition(transitionProps);\n\n    return (\n      <Transition\n        mounted={visible !== undefined ? visible : ctx.opened}\n        {...transition}\n        transition=\"fade\"\n      >\n        {(transitionStyles) => (\n          <Overlay\n            ref={ref}\n            fixed\n            style={[style, transitionStyles]}\n            zIndex={ctx.zIndex}\n            unstyled={ctx.unstyled}\n            onClick={(event) => {\n              onClick?.(event);\n              ctx.closeOnClickOutside && ctx.onClose();\n            }}\n            {...others}\n          />\n        )}\n      </Transition>\n    );\n  }\n);\n\nModalBaseOverlay.displayName = '@mantine/core/ModalBaseOverlay';\n"],"mappings":";;;;;;;;AAiBO,MAAMA,gBAAA,GAAmBC,UAAA,CAC9B,CAAC;EAAEC,OAAA;EAASC,eAAA;EAAiBC,KAAA;EAAOC,OAAA;EAAS,GAAGC;AAAA,CAAO,EAAGC,GAAA,KAAQ;EAChE,MAAMC,GAAA,GAAMC,mBAAA,EAAoB;EAChC,MAAMC,UAAA,GAAaC,kBAAA,CAAmBR,eAAe;EAErD,sBACES,GAAA,CAACC,UAAA;IACCC,OAAA,EAAST,OAAA,KAAY,SAAYA,OAAA,GAAUG,GAAA,CAAIO,MAAA;IAC9C,GAAGL,UAAA;IACJA,UAAA,EAAW;IAEVM,QAAA,EAACC,gBAAA,mBACAL,GAAA,CAACM,OAAA;MACCX,GAAA;MACAY,KAAA,EAAK;MACLf,KAAA,EAAO,CAACA,KAAA,EAAOa,gBAAgB;MAC/BG,MAAA,EAAQZ,GAAA,CAAIY,MAAA;MACZC,QAAA,EAAUb,GAAA,CAAIa,QAAA;MACdnB,OAAA,EAAUoB,KAAA,IAAU;QAClBpB,OAAA,GAAUoB,KAAK;QACfd,GAAA,CAAIe,mBAAA,IAAuBf,GAAA,CAAIgB,OAAA,EAAQ;MACzC;MACC,GAAGlB;IAAA;EACN,EAEJ;AAEJ,CACF;AAEAN,gBAAA,CAAiByB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}