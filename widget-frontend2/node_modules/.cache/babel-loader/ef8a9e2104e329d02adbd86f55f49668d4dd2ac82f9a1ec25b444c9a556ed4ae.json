{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useCallback } from 'react';\nfunction useInViewport() {\n  const observer = useRef(null);\n  const [inViewport, setInViewport] = useState(false);\n  const ref = useCallback(node => {\n    if (typeof IntersectionObserver !== \"undefined\") {\n      if (node && !observer.current) {\n        observer.current = new IntersectionObserver(entries => setInViewport(entries.some(entry => entry.isIntersecting)));\n      } else {\n        observer.current?.disconnect();\n      }\n      if (node) {\n        observer.current?.observe(node);\n      } else {\n        setInViewport(false);\n      }\n    }\n  }, []);\n  return {\n    ref,\n    inViewport\n  };\n}\nexport { useInViewport };","map":{"version":3,"names":["useInViewport","observer","useRef","inViewport","setInViewport","useState","ref","useCallback","node","IntersectionObserver","current","entries","some","entry","isIntersecting","disconnect","observe"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-in-viewport/use-in-viewport.ts"],"sourcesContent":["import { useCallback, useRef, useState } from 'react';\n\nexport interface UseInViewportReturnValue<T extends HTMLElement = any> {\n  inViewport: boolean;\n  ref: React.RefCallback<T | null>;\n}\n\nexport function useInViewport<T extends HTMLElement = any>(): UseInViewportReturnValue<T> {\n  const observer = useRef<IntersectionObserver | null>(null);\n  const [inViewport, setInViewport] = useState(false);\n\n  const ref: React.RefCallback<T | null> = useCallback((node) => {\n    if (typeof IntersectionObserver !== 'undefined') {\n      if (node && !observer.current) {\n        observer.current = new IntersectionObserver((entries) =>\n          setInViewport(entries.some((entry) => entry.isIntersecting))\n        );\n      } else {\n        observer.current?.disconnect();\n      }\n\n      if (node) {\n        observer.current?.observe(node);\n      } else {\n        setInViewport(false);\n      }\n    }\n  }, []);\n\n  return { ref, inViewport };\n}\n"],"mappings":";;;AAOO,SAASA,cAAA,EAA0E;EACxF,MAAMC,QAAA,GAAWC,MAAA,CAAoC,IAAI;EACzD,MAAM,CAACC,UAAA,EAAYC,aAAa,IAAIC,QAAA,CAAS,KAAK;EAElD,MAAMC,GAAA,GAAmCC,WAAA,CAAaC,IAAA,IAAS;IAC7D,IAAI,OAAOC,oBAAA,KAAyB,aAAa;MAC/C,IAAID,IAAA,IAAQ,CAACP,QAAA,CAASS,OAAA,EAAS;QAC7BT,QAAA,CAASS,OAAA,GAAU,IAAID,oBAAA,CAAsBE,OAAA,IAC3CP,aAAA,CAAcO,OAAA,CAAQC,IAAA,CAAMC,KAAA,IAAUA,KAAA,CAAMC,cAAc,CAAC,EAC7D;MACF,OAAO;QACLb,QAAA,CAASS,OAAA,EAASK,UAAA,EAAW;MAC/B;MAEA,IAAIP,IAAA,EAAM;QACRP,QAAA,CAASS,OAAA,EAASM,OAAA,CAAQR,IAAI;MAChC,OAAO;QACLJ,aAAA,CAAc,KAAK;MACrB;IACF;EACF,GAAG,EAAE;EAEL,OAAO;IAAEE,GAAA;IAAKH;EAAA,CAAW;AAC3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}