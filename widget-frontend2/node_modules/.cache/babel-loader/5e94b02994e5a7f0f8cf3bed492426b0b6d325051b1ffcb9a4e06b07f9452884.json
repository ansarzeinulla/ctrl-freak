{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"checked\", \"mod\", \"withBorder\", \"value\", \"onClick\", \"defaultChecked\", \"onChange\", \"attributes\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { useUncontrolled } from '@mantine/hooks';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius } from '../../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { UnstyledButton } from '../../UnstyledButton/UnstyledButton.mjs';\nimport { useCheckboxGroupContext } from '../CheckboxGroup.context.mjs';\nimport { CheckboxCardProvider } from './CheckboxCard.context.mjs';\nimport classes from './CheckboxCard.module.css.mjs';\nconst defaultProps = {\n  withBorder: true\n};\nconst varsResolver = createVarsResolver((_, _ref) => {\n  let {\n    radius\n  } = _ref;\n  return {\n    card: {\n      \"--card-radius\": getRadius(radius)\n    }\n  };\n});\nconst CheckboxCard = factory((_props, ref) => {\n  const props = useProps(\"CheckboxCard\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      checked,\n      mod,\n      withBorder,\n      value,\n      onClick,\n      defaultChecked,\n      onChange,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"CheckboxCard\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n    rootSelector: \"card\"\n  });\n  const ctx = useCheckboxGroupContext();\n  const _checked = typeof checked === \"boolean\" ? checked : ctx ? ctx.value.includes(value || \"\") : void 0;\n  const [_value, setValue] = useUncontrolled({\n    value: _checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange\n  });\n  return /* @__PURE__ */jsx(CheckboxCardProvider, {\n    value: {\n      checked: _value\n    },\n    children: /* @__PURE__ */jsx(UnstyledButton, _objectSpread(_objectSpread(_objectSpread({\n      ref,\n      mod: [{\n        \"with-border\": withBorder,\n        checked: _value\n      }, mod]\n    }, getStyles(\"card\")), others), {}, {\n      role: \"checkbox\",\n      \"aria-checked\": _value,\n      onClick: event => {\n        onClick === null || onClick === void 0 || onClick(event);\n        ctx === null || ctx === void 0 || ctx.onChange(value || \"\");\n        setValue(!_value);\n      }\n    }))\n  });\n});\nCheckboxCard.displayName = \"@mantine/core/CheckboxCard\";\nCheckboxCard.classes = classes;\nexport { CheckboxCard };","map":{"version":3,"names":["defaultProps","withBorder","varsResolver","createVarsResolver","_","_ref","radius","card","getRadius","CheckboxCard","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","checked","mod","value","onClick","defaultChecked","onChange","attributes","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","rootSelector","ctx","useCheckboxGroupContext","_checked","includes","_value","setValue","useUncontrolled","defaultValue","finalValue","jsx","CheckboxCardProvider","children","UnstyledButton","_objectSpread","role","event","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Checkbox/CheckboxCard/CheckboxCard.tsx"],"sourcesContent":["import { useUncontrolled } from '@mantine/hooks';\nimport {\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { UnstyledButton } from '../../UnstyledButton';\nimport { useCheckboxGroupContext } from '../CheckboxGroup.context';\nimport { CheckboxCardProvider } from './CheckboxCard.context';\nimport classes from './CheckboxCard.module.css';\n\nexport type CheckboxCardStylesNames = 'card';\nexport type CheckboxCardCssVariables = {\n  card: '--card-radius';\n};\n\nexport interface CheckboxCardProps\n  extends BoxProps,\n    StylesApiProps<CheckboxCardFactory>,\n    ElementProps<'button', 'onChange'> {\n  /** Controlled component value */\n  checked?: boolean;\n\n  /** Uncontrolled component default value */\n  defaultChecked?: boolean;\n\n  /** Called when value changes */\n  onChange?: (checked: boolean) => void;\n\n  /** Adds border to the root element */\n  withBorder?: boolean;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem @default `theme.defaultRadius` */\n  radius?: MantineRadius;\n\n  /** Value of the checkbox, used with `Checkbox.Group` */\n  value?: string;\n}\n\nexport type CheckboxCardFactory = Factory<{\n  props: CheckboxCardProps;\n  ref: HTMLButtonElement;\n  stylesNames: CheckboxCardStylesNames;\n  vars: CheckboxCardCssVariables;\n}>;\n\nconst defaultProps = {\n  withBorder: true,\n} satisfies Partial<CheckboxCardProps>;\n\nconst varsResolver = createVarsResolver<CheckboxCardFactory>((_, { radius }) => ({\n  card: {\n    '--card-radius': getRadius(radius),\n  },\n}));\n\nexport const CheckboxCard = factory<CheckboxCardFactory>((_props, ref) => {\n  const props = useProps('CheckboxCard', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    checked,\n    mod,\n    withBorder,\n    value,\n    onClick,\n    defaultChecked,\n    onChange,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<CheckboxCardFactory>({\n    name: 'CheckboxCard',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n    rootSelector: 'card',\n  });\n\n  const ctx = useCheckboxGroupContext();\n  const _checked =\n    typeof checked === 'boolean' ? checked : ctx ? ctx.value.includes(value || '') : undefined;\n\n  const [_value, setValue] = useUncontrolled({\n    value: _checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  return (\n    <CheckboxCardProvider value={{ checked: _value }}>\n      <UnstyledButton\n        ref={ref}\n        mod={[{ 'with-border': withBorder, checked: _value }, mod]}\n        {...getStyles('card')}\n        {...others}\n        role=\"checkbox\"\n        aria-checked={_value}\n        onClick={(event) => {\n          onClick?.(event);\n          ctx?.onChange(value || '');\n          setValue(!_value);\n        }}\n      />\n    </CheckboxCardProvider>\n  );\n});\n\nCheckboxCard.displayName = '@mantine/core/CheckboxCard';\nCheckboxCard.classes = classes;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,MAAMA,YAAA,GAAe;EACnBC,UAAA,EAAY;AACd;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CAAwC,CAACC,CAAA,EAAAC,IAAA;EAAA,IAAG;IAAEC;EAAA,CAAO,GAAAD,IAAA;EAAA,OAAO;IAC/EE,IAAA,EAAM;MACJ,iBAAiBC,SAAA,CAAUF,MAAM;IAAA;EAErC;AAAA,CAAE;AAEK,MAAMG,YAAA,GAAeC,OAAA,CAA6B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EACxE,MAAMC,KAAA,GAAQC,QAAA,CAAS,gBAAgBd,YAAA,EAAcW,MAAM;EAC3D,MAAM;MACJI,UAAA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,IAAA;MACAC,OAAA;MACAC,GAAA;MACArB,UAAA;MACAsB,KAAA;MACAC,OAAA;MACAC,cAAA;MACAC,QAAA;MACAC;IACG,CACL,GAAId,KAAA;IADCe,MAAA,GAAAC,wBAAA,CACDhB,KAAA,EAAAiB,SAAA;EAEJ,MAAMC,SAAA,GAAYC,SAAA,CAA+B;IAC/CC,IAAA,EAAM;IACNC,OAAA;IACArB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAQ,UAAA;IACAP,IAAA;IACAlB,YAAA;IACAiC,YAAA,EAAc;EAAA,CACf;EAED,MAAMC,GAAA,GAAMC,uBAAA,EAAwB;EACpC,MAAMC,QAAA,GACJ,OAAOjB,OAAA,KAAY,YAAYA,OAAA,GAAUe,GAAA,GAAMA,GAAA,CAAIb,KAAA,CAAMgB,QAAA,CAAShB,KAAA,IAAS,EAAE,IAAI;EAEnF,MAAM,CAACiB,MAAA,EAAQC,QAAQ,IAAIC,eAAA,CAAgB;IACzCnB,KAAA,EAAOe,QAAA;IACPK,YAAA,EAAclB,cAAA;IACdmB,UAAA,EAAY;IACZlB;EAAA,CACD;EAED,sBAAAmB,GAAA,CACGC,oBAAA;IAAqBvB,KAAA,EAAO;MAAEF,OAAA,EAASmB;IAAA,CAAO;IAC7CO,QAAA,iBAAAF,GAAA,CAACG,cAAA,EAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA;MACCrC,GAAA;MACAU,GAAA,EAAK,CAAC;QAAE,eAAerB,UAAA;QAAYoB,OAAA,EAASmB;MAAA,GAAUlB,GAAG;IAAA,GACrDS,SAAA,CAAU,MAAM,IAChBH,MAAA;MACJsB,IAAA,EAAK;MACL,gBAAcV,MAAA;MACdhB,OAAA,EAAU2B,KAAA,IAAU;QAClB3B,OAAA,aAAAA,OAAA,eAAAA,OAAA,CAAU2B,KAAK;QACff,GAAA,aAAAA,GAAA,eAAAA,GAAA,CAAKV,QAAA,CAASH,KAAA,IAAS,EAAE;QACzBkB,QAAA,CAAS,CAACD,MAAM;MAClB;IAAA;EACF,CACF;AAEJ,CAAC;AAED/B,YAAA,CAAa2C,WAAA,GAAc;AAC3B3C,YAAA,CAAayB,OAAA,GAAUA,OAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}