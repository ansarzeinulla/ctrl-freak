{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useCallback, useEffect } from 'react';\nfunction useInterval(fn, interval, {\n  autoInvoke = false\n} = {}) {\n  const [active, setActive] = useState(false);\n  const intervalRef = useRef(null);\n  const fnRef = useRef(null);\n  const start = useCallback(() => {\n    setActive(old => {\n      if (!old && (!intervalRef.current || intervalRef.current === -1)) {\n        intervalRef.current = window.setInterval(fnRef.current, interval);\n      }\n      return true;\n    });\n  }, []);\n  const stop = useCallback(() => {\n    setActive(false);\n    window.clearInterval(intervalRef.current || -1);\n    intervalRef.current = -1;\n  }, []);\n  const toggle = useCallback(() => {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  }, [active]);\n  useEffect(() => {\n    fnRef.current = fn;\n    active && start();\n    return stop;\n  }, [fn, active, interval]);\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n  }, []);\n  return {\n    start,\n    stop,\n    toggle,\n    active\n  };\n}\nexport { useInterval };","map":{"version":3,"names":["useInterval","fn","interval","autoInvoke","active","setActive","useState","intervalRef","useRef","fnRef","start","useCallback","old","current","window","setInterval","stop","clearInterval","toggle","useEffect"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-interval/use-interval.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\n\nexport interface UseIntervalOptions {\n  /** If set, the interval will start automatically when the component is mounted, `false` by default */\n  autoInvoke?: boolean;\n}\n\nexport interface UseIntervalReturnValue {\n  /** Starts the interval */\n  start: () => void;\n\n  /** Stops the interval */\n  stop: () => void;\n\n  /** Toggles the interval */\n  toggle: () => void;\n\n  /** Indicates if the interval is active */\n  active: boolean;\n}\n\nexport function useInterval(\n  fn: () => void,\n  interval: number,\n  { autoInvoke = false }: UseIntervalOptions = {}\n): UseIntervalReturnValue {\n  const [active, setActive] = useState(false);\n  const intervalRef = useRef<number | null>(null);\n  const fnRef = useRef<() => void>(null);\n\n  const start = useCallback(() => {\n    setActive((old) => {\n      if (!old && (!intervalRef.current || intervalRef.current === -1)) {\n        intervalRef.current = window.setInterval(fnRef.current!, interval);\n      }\n      return true;\n    });\n  }, []);\n\n  const stop = useCallback(() => {\n    setActive(false);\n    window.clearInterval(intervalRef.current || -1);\n    intervalRef.current = -1;\n  }, []);\n\n  const toggle = useCallback(() => {\n    if (active) {\n      stop();\n    } else {\n      start();\n    }\n  }, [active]);\n\n  useEffect(() => {\n    fnRef.current = fn;\n    active && start();\n    return stop;\n  }, [fn, active, interval]);\n\n  useEffect(() => {\n    if (autoInvoke) {\n      start();\n    }\n  }, []);\n\n  return { start, stop, toggle, active };\n}\n"],"mappings":";;;AAqBO,SAASA,YACdC,EAAA,EACAC,QAAA,EACA;EAAEC,UAAA,GAAa;AAAA,CAAM,GAAwB,EAAC,EACtB;EACxB,MAAM,CAACC,MAAA,EAAQC,SAAS,IAAIC,QAAA,CAAS,KAAK;EAC1C,MAAMC,WAAA,GAAcC,MAAA,CAAsB,IAAI;EAC9C,MAAMC,KAAA,GAAQD,MAAA,CAAmB,IAAI;EAErC,MAAME,KAAA,GAAQC,WAAA,CAAY,MAAM;IAC9BN,SAAA,CAAWO,GAAA,IAAQ;MACjB,IAAI,CAACA,GAAA,KAAQ,CAACL,WAAA,CAAYM,OAAA,IAAWN,WAAA,CAAYM,OAAA,KAAY,KAAK;QAChEN,WAAA,CAAYM,OAAA,GAAUC,MAAA,CAAOC,WAAA,CAAYN,KAAA,CAAMI,OAAA,EAAUX,QAAQ;MACnE;MACA,OAAO;IACT,CAAC;EACH,GAAG,EAAE;EAEL,MAAMc,IAAA,GAAOL,WAAA,CAAY,MAAM;IAC7BN,SAAA,CAAU,KAAK;IACfS,MAAA,CAAOG,aAAA,CAAcV,WAAA,CAAYM,OAAA,IAAW,EAAE;IAC9CN,WAAA,CAAYM,OAAA,GAAU;EACxB,GAAG,EAAE;EAEL,MAAMK,MAAA,GAASP,WAAA,CAAY,MAAM;IAC/B,IAAIP,MAAA,EAAQ;MACVY,IAAA,EAAK;IACP,OAAO;MACLN,KAAA,EAAM;IACR;EACF,GAAG,CAACN,MAAM,CAAC;EAEXe,SAAA,CAAU,MAAM;IACdV,KAAA,CAAMI,OAAA,GAAUZ,EAAA;IAChBG,MAAA,IAAUM,KAAA,EAAM;IAChB,OAAOM,IAAA;EACT,GAAG,CAACf,EAAA,EAAIG,MAAA,EAAQF,QAAQ,CAAC;EAEzBiB,SAAA,CAAU,MAAM;IACd,IAAIhB,UAAA,EAAY;MACdO,KAAA,EAAM;IACR;EACF,GAAG,EAAE;EAEL,OAAO;IAAEA,KAAA;IAAOM,IAAA;IAAME,MAAA;IAAQd;EAAA,CAAO;AACvC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}