{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useMemo, useEffect } from 'react';\nconst defaultState = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0\n};\nfunction useResizeObserver(options) {\n  const frameID = useRef(0);\n  const ref = useRef(null);\n  const [rect, setRect] = useState(defaultState);\n  const observer = useMemo(() => typeof window !== \"undefined\" ? new ResizeObserver(entries => {\n    const entry = entries[0];\n    if (entry) {\n      cancelAnimationFrame(frameID.current);\n      frameID.current = requestAnimationFrame(() => {\n        if (ref.current) {\n          var _entry$borderBoxSize, _entry$contentBoxSize;\n          const boxSize = ((_entry$borderBoxSize = entry.borderBoxSize) === null || _entry$borderBoxSize === void 0 ? void 0 : _entry$borderBoxSize[0]) || ((_entry$contentBoxSize = entry.contentBoxSize) === null || _entry$contentBoxSize === void 0 ? void 0 : _entry$contentBoxSize[0]);\n          if (boxSize) {\n            const width = boxSize.inlineSize;\n            const height = boxSize.blockSize;\n            setRect({\n              width,\n              height,\n              x: entry.contentRect.x,\n              y: entry.contentRect.y,\n              top: entry.contentRect.top,\n              left: entry.contentRect.left,\n              bottom: entry.contentRect.bottom,\n              right: entry.contentRect.right\n            });\n          } else {\n            setRect(entry.contentRect);\n          }\n        }\n      });\n    }\n  }) : null, []);\n  useEffect(() => {\n    if (ref.current) {\n      observer === null || observer === void 0 || observer.observe(ref.current, options);\n    }\n    return () => {\n      observer === null || observer === void 0 || observer.disconnect();\n      if (frameID.current) {\n        cancelAnimationFrame(frameID.current);\n      }\n    };\n  }, [ref.current]);\n  return [ref, rect];\n}\nfunction useElementSize(options) {\n  const [ref, {\n    width,\n    height\n  }] = useResizeObserver(options);\n  return {\n    ref,\n    width,\n    height\n  };\n}\nexport { useElementSize, useResizeObserver };","map":{"version":3,"names":["defaultState","x","y","width","height","top","left","bottom","right","useResizeObserver","options","frameID","useRef","ref","rect","setRect","useState","observer","useMemo","window","ResizeObserver","entries","entry","cancelAnimationFrame","current","requestAnimationFrame","_entry$borderBoxSize","_entry$contentBoxSize","boxSize","borderBoxSize","contentBoxSize","inlineSize","blockSize","contentRect","useEffect","observe","disconnect","useElementSize"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-resize-observer/use-resize-observer.ts"],"sourcesContent":["import { useEffect, useMemo, useRef, useState } from 'react';\n\ntype ObserverRect = Omit<DOMRectReadOnly, 'toJSON'>;\n\nconst defaultState: ObserverRect = {\n  x: 0,\n  y: 0,\n  width: 0,\n  height: 0,\n  top: 0,\n  left: 0,\n  bottom: 0,\n  right: 0,\n};\n\nexport function useResizeObserver<T extends HTMLElement = any>(options?: ResizeObserverOptions) {\n  const frameID = useRef(0);\n  const ref = useRef<T>(null);\n\n  const [rect, setRect] = useState<ObserverRect>(defaultState);\n\n  const observer = useMemo(\n    () =>\n      typeof window !== 'undefined'\n        ? new ResizeObserver((entries) => {\n            const entry = entries[0];\n\n            if (entry) {\n              cancelAnimationFrame(frameID.current);\n\n              frameID.current = requestAnimationFrame(() => {\n                if (ref.current) {\n                  const boxSize = entry.borderBoxSize?.[0] || entry.contentBoxSize?.[0];\n                  if (boxSize) {\n                    const width = boxSize.inlineSize;\n                    const height = boxSize.blockSize;\n\n                    setRect({\n                      width,\n                      height,\n                      x: entry.contentRect.x,\n                      y: entry.contentRect.y,\n                      top: entry.contentRect.top,\n                      left: entry.contentRect.left,\n                      bottom: entry.contentRect.bottom,\n                      right: entry.contentRect.right,\n                    });\n                  } else {\n                    setRect(entry.contentRect);\n                  }\n                }\n              });\n            }\n          })\n        : null,\n    []\n  );\n\n  useEffect(() => {\n    if (ref.current) {\n      observer?.observe(ref.current, options);\n    }\n\n    return () => {\n      observer?.disconnect();\n\n      if (frameID.current) {\n        cancelAnimationFrame(frameID.current);\n      }\n    };\n  }, [ref.current]);\n\n  return [ref, rect] as const;\n}\n\nexport function useElementSize<T extends HTMLElement = any>(options?: ResizeObserverOptions) {\n  const [ref, { width, height }] = useResizeObserver<T>(options);\n  return { ref, width, height };\n}\n"],"mappings":";;;AAIA,MAAMA,YAAA,GAA6B;EACjCC,CAAA,EAAG;EACHC,CAAA,EAAG;EACHC,KAAA,EAAO;EACPC,MAAA,EAAQ;EACRC,GAAA,EAAK;EACLC,IAAA,EAAM;EACNC,MAAA,EAAQ;EACRC,KAAA,EAAO;AACT;AAEO,SAASC,kBAA+CC,OAAA,EAAiC;EAC9F,MAAMC,OAAA,GAAUC,MAAA,CAAO,CAAC;EACxB,MAAMC,GAAA,GAAMD,MAAA,CAAU,IAAI;EAE1B,MAAM,CAACE,IAAA,EAAMC,OAAO,IAAIC,QAAA,CAAuBhB,YAAY;EAE3D,MAAMiB,QAAA,GAAWC,OAAA,CACf,MACE,OAAOC,MAAA,KAAW,cACd,IAAIC,cAAA,CAAgBC,OAAA,IAAY;IAC9B,MAAMC,KAAA,GAAQD,OAAA,CAAQ,CAAC;IAEvB,IAAIC,KAAA,EAAO;MACTC,oBAAA,CAAqBZ,OAAA,CAAQa,OAAO;MAEpCb,OAAA,CAAQa,OAAA,GAAUC,qBAAA,CAAsB,MAAM;QAC5C,IAAIZ,GAAA,CAAIW,OAAA,EAAS;UAAA,IAAAE,oBAAA,EAAAC,qBAAA;UACf,MAAMC,OAAA,GAAU,EAAAF,oBAAA,GAAAJ,KAAA,CAAMO,aAAA,cAAAH,oBAAA,uBAANA,oBAAA,CAAsB,CAAC,QAAAC,qBAAA,GAAKL,KAAA,CAAMQ,cAAA,cAAAH,qBAAA,uBAANA,qBAAA,CAAuB,CAAC;UACpE,IAAIC,OAAA,EAAS;YACX,MAAMzB,KAAA,GAAQyB,OAAA,CAAQG,UAAA;YACtB,MAAM3B,MAAA,GAASwB,OAAA,CAAQI,SAAA;YAEvBjB,OAAA,CAAQ;cACNZ,KAAA;cACAC,MAAA;cACAH,CAAA,EAAGqB,KAAA,CAAMW,WAAA,CAAYhC,CAAA;cACrBC,CAAA,EAAGoB,KAAA,CAAMW,WAAA,CAAY/B,CAAA;cACrBG,GAAA,EAAKiB,KAAA,CAAMW,WAAA,CAAY5B,GAAA;cACvBC,IAAA,EAAMgB,KAAA,CAAMW,WAAA,CAAY3B,IAAA;cACxBC,MAAA,EAAQe,KAAA,CAAMW,WAAA,CAAY1B,MAAA;cAC1BC,KAAA,EAAOc,KAAA,CAAMW,WAAA,CAAYzB;YAAA,CAC1B;UACH,OAAO;YACLO,OAAA,CAAQO,KAAA,CAAMW,WAAW;UAC3B;QACF;MACF,CAAC;IACH;EACF,CAAC,IACD,MACN,EAAC,CACH;EAEAC,SAAA,CAAU,MAAM;IACd,IAAIrB,GAAA,CAAIW,OAAA,EAAS;MACfP,QAAA,aAAAA,QAAA,eAAAA,QAAA,CAAUkB,OAAA,CAAQtB,GAAA,CAAIW,OAAA,EAASd,OAAO;IACxC;IAEA,OAAO,MAAM;MACXO,QAAA,aAAAA,QAAA,eAAAA,QAAA,CAAUmB,UAAA,EAAW;MAErB,IAAIzB,OAAA,CAAQa,OAAA,EAAS;QACnBD,oBAAA,CAAqBZ,OAAA,CAAQa,OAAO;MACtC;IACF;EACF,GAAG,CAACX,GAAA,CAAIW,OAAO,CAAC;EAEhB,OAAO,CAACX,GAAA,EAAKC,IAAI;AACnB;AAEO,SAASuB,eAA4C3B,OAAA,EAAiC;EAC3F,MAAM,CAACG,GAAA,EAAK;IAAEV,KAAA;IAAOC;EAAA,CAAQ,IAAIK,iBAAA,CAAqBC,OAAO;EAC7D,OAAO;IAAEG,GAAA;IAAKV,KAAA;IAAOC;EAAA,CAAO;AAC9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}