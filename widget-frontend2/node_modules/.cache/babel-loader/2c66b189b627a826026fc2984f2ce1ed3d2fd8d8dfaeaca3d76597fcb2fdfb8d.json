{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"autosize\", \"maxRows\", \"minRows\", \"__staticSelector\", \"resize\"];\nimport { jsx } from 'react/jsx-runtime';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport '@mantine/hooks';\nimport { getEnv } from '../../core/utils/get-env/get-env.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { InputBase } from '../InputBase/InputBase.mjs';\nconst defaultProps = {\n  size: \"sm\"\n};\nconst Textarea = factory((props, ref) => {\n  const _useProps = useProps(\"Textarea\", defaultProps, props),\n    {\n      autosize,\n      maxRows,\n      minRows,\n      __staticSelector,\n      resize\n    } = _useProps,\n    others = _objectWithoutProperties(_useProps, _excluded);\n  const shouldAutosize = autosize && getEnv() !== \"test\";\n  const autosizeProps = shouldAutosize ? {\n    maxRows,\n    minRows\n  } : {};\n  return /* @__PURE__ */jsx(InputBase, _objectSpread(_objectSpread({\n    component: shouldAutosize ? TextareaAutosize : \"textarea\",\n    ref\n  }, others), {}, {\n    __staticSelector: __staticSelector || \"Textarea\",\n    multiline: true,\n    \"data-no-overflow\": autosize && maxRows === void 0 || void 0,\n    __vars: {\n      \"--input-resize\": resize\n    }\n  }, autosizeProps));\n});\nTextarea.classes = InputBase.classes;\nTextarea.displayName = \"@mantine/core/Textarea\";\nexport { Textarea };","map":{"version":3,"names":["defaultProps","size","Textarea","factory","props","ref","_useProps","useProps","autosize","maxRows","minRows","__staticSelector","resize","others","_objectWithoutProperties","_excluded","shouldAutosize","getEnv","autosizeProps","jsx","InputBase","_objectSpread","component","TextareaAutosize","multiline","__vars","classes","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Textarea/Textarea.tsx"],"sourcesContent":["import TextareaAutosize from 'react-textarea-autosize';\nimport {\n  BoxProps,\n  ElementProps,\n  factory,\n  Factory,\n  getEnv,\n  StylesApiProps,\n  useProps,\n} from '../../core';\nimport { __BaseInputProps, __InputStylesNames } from '../Input';\nimport { InputBase } from '../InputBase';\n\nexport interface TextareaProps\n  extends BoxProps,\n    __BaseInputProps,\n    StylesApiProps<TextareaFactory>,\n    ElementProps<'textarea', 'size'> {\n  __staticSelector?: string;\n\n  /** If set, enables textarea height growing with its content @default `false` */\n  autosize?: boolean;\n\n  /** Maximum rows for autosize textarea to grow, ignored if `autosize` prop is not set */\n  maxRows?: number;\n\n  /** Minimum rows of autosize textarea, ignored if `autosize` prop is not set */\n  minRows?: number;\n\n  /** Controls `resize` CSS property @default `'none'` */\n  resize?: React.CSSProperties['resize'];\n}\n\nexport type TextareaFactory = Factory<{\n  props: TextareaProps;\n  ref: HTMLTextAreaElement;\n  stylesNames: __InputStylesNames;\n}>;\n\nconst defaultProps = {\n  size: 'sm',\n} satisfies Partial<TextareaProps>;\n\nexport const Textarea = factory<TextareaFactory>((props, ref) => {\n  const { autosize, maxRows, minRows, __staticSelector, resize, ...others } = useProps(\n    'Textarea',\n    defaultProps,\n    props\n  );\n\n  const shouldAutosize = autosize && getEnv() !== 'test';\n  const autosizeProps = shouldAutosize ? { maxRows, minRows } : {};\n\n  return (\n    <InputBase<any>\n      component={shouldAutosize ? TextareaAutosize : 'textarea'}\n      ref={ref}\n      {...others}\n      __staticSelector={__staticSelector || 'Textarea'}\n      multiline\n      data-no-overflow={(autosize && maxRows === undefined) || undefined}\n      __vars={{ '--input-resize': resize }}\n      {...autosizeProps}\n    />\n  );\n});\n\nTextarea.classes = InputBase.classes;\nTextarea.displayName = '@mantine/core/Textarea';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAuCA,MAAMA,YAAA,GAAe;EACnBC,IAAA,EAAM;AACR;AAEO,MAAMC,QAAA,GAAWC,OAAA,CAAyB,CAACC,KAAA,EAAOC,GAAA,KAAQ;EAC/D,MAAAC,SAAA,GAA4EC,QAAA,CAC1E,YACAP,YAAA,EACAI,KAAA,CACF;IAJM;MAAEI,QAAA;MAAUC,OAAA;MAASC,OAAA;MAASC,gBAAA;MAAkBC;IAAW,CAAO,GAAAN,SAAA;IAAPO,MAAA,GAAAC,wBAAA,CAAAR,SAAA,EAAAS,SAAA;EAMjE,MAAMC,cAAA,GAAiBR,QAAA,IAAYS,MAAA,EAAO,KAAM;EAChD,MAAMC,aAAA,GAAgBF,cAAA,GAAiB;IAAEP,OAAA;IAASC;EAAA,IAAY,EAAC;EAE/D,sBACES,GAAA,CAACC,SAAA,EAAAC,aAAA,CAAAA,aAAA;IACCC,SAAA,EAAWN,cAAA,GAAiBO,gBAAA,GAAmB;IAC/ClB;EAAA,GACIQ,MAAA;IACJF,gBAAA,EAAkBA,gBAAA,IAAoB;IACtCa,SAAA,EAAS;IACT,oBAAmBhB,QAAA,IAAYC,OAAA,KAAY,UAAc;IACzDgB,MAAA,EAAQ;MAAE,kBAAkBb;IAAA;EAAO,GAC/BM,aAAA,EACN;AAEJ,CAAC;AAEDhB,QAAA,CAASwB,OAAA,GAAUN,SAAA,CAAUM,OAAA;AAC7BxB,QAAA,CAASyB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}