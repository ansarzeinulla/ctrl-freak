{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { transitions } from '../transitions.mjs';\nconst transitionStatuses = {\n  entering: \"in\",\n  entered: \"in\",\n  exiting: \"out\",\n  exited: \"out\",\n  \"pre-exiting\": \"out\",\n  \"pre-entering\": \"out\"\n};\nfunction getTransitionStyles(_ref) {\n  let {\n    transition,\n    state,\n    duration,\n    timingFunction\n  } = _ref;\n  const shared = {\n    WebkitBackfaceVisibility: \"hidden\",\n    transitionDuration: \"\".concat(duration, \"ms\"),\n    transitionTimingFunction: timingFunction\n  };\n  if (typeof transition === \"string\") {\n    if (!(transition in transitions)) {\n      return {};\n    }\n    return _objectSpread(_objectSpread(_objectSpread({\n      transitionProperty: transitions[transition].transitionProperty\n    }, shared), transitions[transition].common), transitions[transition][transitionStatuses[state]]);\n  }\n  return _objectSpread(_objectSpread(_objectSpread({\n    transitionProperty: transition.transitionProperty\n  }, shared), transition.common), transition[transitionStatuses[state]]);\n}\nexport { getTransitionStyles };","map":{"version":3,"names":["transitionStatuses","entering","entered","exiting","exited","getTransitionStyles","_ref","transition","state","duration","timingFunction","shared","WebkitBackfaceVisibility","transitionDuration","concat","transitionTimingFunction","transitions","_objectSpread","transitionProperty","common"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Transition/get-transition-styles/get-transition-styles.ts"],"sourcesContent":["import { MantineTransition, transitions } from '../transitions';\n\nconst transitionStatuses = {\n  entering: 'in',\n  entered: 'in',\n  exiting: 'out',\n  exited: 'out',\n  'pre-exiting': 'out',\n  'pre-entering': 'out',\n} as const;\n\nexport function getTransitionStyles({\n  transition,\n  state,\n  duration,\n  timingFunction,\n}: {\n  transition: MantineTransition;\n  state: keyof typeof transitionStatuses;\n  duration: number;\n  timingFunction: React.CSSProperties['transitionTimingFunction'];\n}): React.CSSProperties {\n  const shared: React.CSSProperties = {\n    WebkitBackfaceVisibility: 'hidden',\n    transitionDuration: `${duration}ms`,\n    transitionTimingFunction: timingFunction,\n  };\n\n  if (typeof transition === 'string') {\n    if (!(transition in transitions)) {\n      return {};\n    }\n\n    return {\n      transitionProperty: transitions[transition].transitionProperty,\n      ...shared,\n      ...transitions[transition].common,\n      ...transitions[transition][transitionStatuses[state]],\n    };\n  }\n\n  return {\n    transitionProperty: transition.transitionProperty,\n    ...shared,\n    ...transition.common,\n    ...transition[transitionStatuses[state]],\n  };\n}\n"],"mappings":";;;;AAEA,MAAMA,kBAAA,GAAqB;EACzBC,QAAA,EAAU;EACVC,OAAA,EAAS;EACTC,OAAA,EAAS;EACTC,MAAA,EAAQ;EACR,eAAe;EACf,gBAAgB;AAClB;AAEO,SAASC,oBAAAC,IAAA,EAUQ;EAAA,IAVY;IAClCC,UAAA;IACAC,KAAA;IACAC,QAAA;IACAC;EACF,IAAAJ,IAAA;EAME,MAAMK,MAAA,GAA8B;IAClCC,wBAAA,EAA0B;IAC1BC,kBAAA,KAAAC,MAAA,CAAuBL,QAAQ;IAC/BM,wBAAA,EAA0BL;EAAA,CAC5B;EAEA,IAAI,OAAOH,UAAA,KAAe,UAAU;IAClC,IAAI,EAAEA,UAAA,IAAcS,WAAA,GAAc;MAChC,OAAO,EAAC;IACV;IAEA,OAAAC,aAAA,CAAAA,aAAA,CAAAA,aAAA;MACEC,kBAAA,EAAoBF,WAAA,CAAYT,UAAU,EAAEW;IAAA,GACzCP,MAAA,GACAK,WAAA,CAAYT,UAAU,EAAEY,MAAA,GACxBH,WAAA,CAAYT,UAAU,EAAEP,kBAAA,CAAmBQ,KAAK,CAAC;EAExD;EAEA,OAAAS,aAAA,CAAAA,aAAA,CAAAA,aAAA;IACEC,kBAAA,EAAoBX,UAAA,CAAWW;EAAA,GAC5BP,MAAA,GACAJ,UAAA,CAAWY,MAAA,GACXZ,UAAA,CAAWP,kBAAA,CAAmBQ,KAAK,CAAC;AAE3C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}