{"ast":null,"code":"'use client';\n\nimport { useMediaQuery } from '@mantine/hooks';\nimport { useMantineTheme } from '../MantineThemeProvider/MantineThemeProvider.mjs';\nconst BREAKPOINTS = [\"xs\", \"sm\", \"md\", \"lg\", \"xl\"];\nfunction getFirstMatchingValue(value, biggestMatch) {\n  if (!biggestMatch) {\n    return value.base;\n  }\n  let index = BREAKPOINTS.indexOf(biggestMatch);\n  while (index >= 0) {\n    if (BREAKPOINTS[index] in value) {\n      return value[BREAKPOINTS[index]];\n    }\n    index -= 1;\n  }\n  return value.base;\n}\nfunction getFirstMatchingBreakpoint(matches) {\n  return matches.findLastIndex(v => v);\n}\nfunction useMatches(payload, options) {\n  const theme = useMantineTheme();\n  const xsMatches = useMediaQuery(`(min-width: ${theme.breakpoints.xs})`, false, options);\n  const smMatches = useMediaQuery(`(min-width: ${theme.breakpoints.sm})`, false, options);\n  const mdMatches = useMediaQuery(`(min-width: ${theme.breakpoints.md})`, false, options);\n  const lgMatches = useMediaQuery(`(min-width: ${theme.breakpoints.lg})`, false, options);\n  const xlMatches = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`, false, options);\n  const breakpoints = [xsMatches, smMatches, mdMatches, lgMatches, xlMatches];\n  const firstMatchingBreakpointIndex = getFirstMatchingBreakpoint(breakpoints);\n  return getFirstMatchingValue(payload, BREAKPOINTS[firstMatchingBreakpointIndex]);\n}\nexport { useMatches };","map":{"version":3,"names":["BREAKPOINTS","getFirstMatchingValue","value","biggestMatch","base","index","indexOf","getFirstMatchingBreakpoint","matches","findLastIndex","v","useMatches","payload","options","theme","useMantineTheme","xsMatches","useMediaQuery","breakpoints","xs","smMatches","sm","mdMatches","md","lgMatches","lg","xlMatches","xl","firstMatchingBreakpointIndex"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/core/MantineProvider/use-matches/use-matches.ts"],"sourcesContent":["import { useMediaQuery, UseMediaQueryOptions } from '@mantine/hooks';\nimport { useMantineTheme } from '../MantineThemeProvider';\nimport { MantineBreakpoint } from '../theme.types';\n\ntype UseMatchesInput<T> = Partial<Record<MantineBreakpoint, T>>;\n\nconst BREAKPOINTS = ['xs', 'sm', 'md', 'lg', 'xl'];\n\nfunction getFirstMatchingValue<T>(\n  value: UseMatchesInput<T>,\n  biggestMatch: MantineBreakpoint | undefined\n): T {\n  if (!biggestMatch) {\n    return value.base!;\n  }\n\n  let index = BREAKPOINTS.indexOf(biggestMatch);\n\n  while (index >= 0) {\n    if (BREAKPOINTS[index] in value) {\n      return value[BREAKPOINTS[index]]!;\n    }\n    index -= 1;\n  }\n\n  return value.base!;\n}\n\nfunction getFirstMatchingBreakpoint(matches: (boolean | undefined)[]) {\n  return matches.findLastIndex((v) => v);\n}\n\nexport function useMatches<T>(payload: UseMatchesInput<T>, options?: UseMediaQueryOptions) {\n  const theme = useMantineTheme();\n  const xsMatches = useMediaQuery(`(min-width: ${theme.breakpoints.xs})`, false, options);\n  const smMatches = useMediaQuery(`(min-width: ${theme.breakpoints.sm})`, false, options);\n  const mdMatches = useMediaQuery(`(min-width: ${theme.breakpoints.md})`, false, options);\n  const lgMatches = useMediaQuery(`(min-width: ${theme.breakpoints.lg})`, false, options);\n  const xlMatches = useMediaQuery(`(min-width: ${theme.breakpoints.xl})`, false, options);\n\n  const breakpoints = [xsMatches, smMatches, mdMatches, lgMatches, xlMatches];\n  const firstMatchingBreakpointIndex = getFirstMatchingBreakpoint(breakpoints);\n  return getFirstMatchingValue(payload, BREAKPOINTS[firstMatchingBreakpointIndex]);\n}\n"],"mappings":";;;;AAMA,MAAMA,WAAA,GAAc,CAAC,MAAM,MAAM,MAAM,MAAM,IAAI;AAEjD,SAASC,sBACPC,KAAA,EACAC,YAAA,EACG;EACH,IAAI,CAACA,YAAA,EAAc;IACjB,OAAOD,KAAA,CAAME,IAAA;EACf;EAEA,IAAIC,KAAA,GAAQL,WAAA,CAAYM,OAAA,CAAQH,YAAY;EAE5C,OAAOE,KAAA,IAAS,GAAG;IACjB,IAAIL,WAAA,CAAYK,KAAK,KAAKH,KAAA,EAAO;MAC/B,OAAOA,KAAA,CAAMF,WAAA,CAAYK,KAAK,CAAC;IACjC;IACAA,KAAA,IAAS;EACX;EAEA,OAAOH,KAAA,CAAME,IAAA;AACf;AAEA,SAASG,2BAA2BC,OAAA,EAAkC;EACpE,OAAOA,OAAA,CAAQC,aAAA,CAAeC,CAAA,IAAMA,CAAC;AACvC;AAEO,SAASC,WAAcC,OAAA,EAA6BC,OAAA,EAAgC;EACzF,MAAMC,KAAA,GAAQC,eAAA,EAAgB;EAC9B,MAAMC,SAAA,GAAYC,aAAA,CAAc,eAAeH,KAAA,CAAMI,WAAA,CAAYC,EAAE,KAAK,OAAON,OAAO;EACtF,MAAMO,SAAA,GAAYH,aAAA,CAAc,eAAeH,KAAA,CAAMI,WAAA,CAAYG,EAAE,KAAK,OAAOR,OAAO;EACtF,MAAMS,SAAA,GAAYL,aAAA,CAAc,eAAeH,KAAA,CAAMI,WAAA,CAAYK,EAAE,KAAK,OAAOV,OAAO;EACtF,MAAMW,SAAA,GAAYP,aAAA,CAAc,eAAeH,KAAA,CAAMI,WAAA,CAAYO,EAAE,KAAK,OAAOZ,OAAO;EACtF,MAAMa,SAAA,GAAYT,aAAA,CAAc,eAAeH,KAAA,CAAMI,WAAA,CAAYS,EAAE,KAAK,OAAOd,OAAO;EAEtF,MAAMK,WAAA,GAAc,CAACF,SAAA,EAAWI,SAAA,EAAWE,SAAA,EAAWE,SAAA,EAAWE,SAAS;EAC1E,MAAME,4BAAA,GAA+BrB,0BAAA,CAA2BW,WAAW;EAC3E,OAAOjB,qBAAA,CAAsBW,OAAA,EAASZ,WAAA,CAAY4B,4BAA4B,CAAC;AACjF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}