{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"src\", \"alt\", \"radius\", \"color\", \"gradient\", \"imageProps\", \"children\", \"autoContrast\", \"mod\", \"name\", \"allowedInitialsColors\", \"attributes\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { useState, useEffect } from 'react';\nimport '../../core/utils/units-converters/rem.mjs';\nimport { getRadius, getSize } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { polymorphicFactory } from '../../core/factory/polymorphic-factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { AvatarGroup } from './AvatarGroup/AvatarGroup.mjs';\nimport { useAvatarGroupContext } from './AvatarGroup/AvatarGroup.context.mjs';\nimport { AvatarPlaceholderIcon } from './AvatarPlaceholderIcon.mjs';\nimport { getInitialsColor } from './get-initials-color/get-initials-color.mjs';\nimport { getInitials } from './get-initials/get-initials.mjs';\nimport classes from './Avatar.module.css.mjs';\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    size,\n    radius,\n    variant,\n    gradient,\n    color,\n    autoContrast,\n    name,\n    allowedInitialsColors\n  } = _ref;\n  const _color = color === \"initials\" && typeof name === \"string\" ? getInitialsColor(name, allowedInitialsColors) : color;\n  const colors = theme.variantColorResolver({\n    color: _color || \"gray\",\n    theme,\n    gradient,\n    variant: variant || \"light\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--avatar-size\": getSize(size, \"avatar-size\"),\n      \"--avatar-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--avatar-bg\": _color || variant ? colors.background : void 0,\n      \"--avatar-color\": _color || variant ? colors.color : void 0,\n      \"--avatar-bd\": _color || variant ? colors.border : void 0\n    }\n  };\n});\nconst Avatar = polymorphicFactory((_props, ref) => {\n  const props = useProps(\"Avatar\", null, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      src,\n      alt,\n      radius,\n      color,\n      gradient,\n      imageProps,\n      children,\n      autoContrast,\n      mod,\n      name,\n      allowedInitialsColors,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const ctx = useAvatarGroupContext();\n  const [error, setError] = useState(!src);\n  const getStyles = useStyles({\n    name: \"Avatar\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  useEffect(() => setError(!src), [src]);\n  return /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread(_objectSpread({}, getStyles(\"root\")), {}, {\n    mod: [{\n      \"within-group\": ctx.withinGroup\n    }, mod],\n    ref\n  }, others), {}, {\n    children: error || !src ? /* @__PURE__ */jsx(\"span\", _objectSpread(_objectSpread({}, getStyles(\"placeholder\")), {}, {\n      title: alt,\n      children: children || typeof name === \"string\" && getInitials(name) || /* @__PURE__ */jsx(AvatarPlaceholderIcon, {})\n    })) : /* @__PURE__ */jsx(\"img\", _objectSpread(_objectSpread(_objectSpread({}, imageProps), getStyles(\"image\")), {}, {\n      src,\n      alt,\n      onError: event => {\n        var _imageProps$onError;\n        setError(true);\n        imageProps === null || imageProps === void 0 || (_imageProps$onError = imageProps.onError) === null || _imageProps$onError === void 0 || _imageProps$onError.call(imageProps, event);\n      }\n    }))\n  }));\n});\nAvatar.classes = classes;\nAvatar.displayName = \"@mantine/core/Avatar\";\nAvatar.Group = AvatarGroup;\nexport { Avatar };","map":{"version":3,"names":["varsResolver","createVarsResolver","theme","_ref","size","radius","variant","gradient","color","autoContrast","name","allowedInitialsColors","_color","getInitialsColor","colors","variantColorResolver","root","getSize","getRadius","background","border","Avatar","polymorphicFactory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","src","alt","imageProps","children","mod","attributes","others","_objectWithoutProperties","_excluded","ctx","useAvatarGroupContext","error","setError","useState","getStyles","useStyles","classes","useEffect","jsx","Box","_objectSpread","withinGroup","title","getInitials","AvatarPlaceholderIcon","onError","event","_imageProps$onError","call","displayName","Group","AvatarGroup"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Avatar/Avatar.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  getRadius,\n  getSize,\n  MantineColor,\n  MantineGradient,\n  MantineRadius,\n  MantineSize,\n  polymorphicFactory,\n  PolymorphicFactory,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { AvatarGroup } from './AvatarGroup/AvatarGroup';\nimport { useAvatarGroupContext } from './AvatarGroup/AvatarGroup.context';\nimport { AvatarPlaceholderIcon } from './AvatarPlaceholderIcon';\nimport { getInitialsColor } from './get-initials-color/get-initials-color';\nimport { getInitials } from './get-initials/get-initials';\nimport classes from './Avatar.module.css';\n\nexport type AvatarStylesNames = 'root' | 'placeholder' | 'image';\nexport type AvatarVariant =\n  | 'filled'\n  | 'light'\n  | 'gradient'\n  | 'outline'\n  | 'transparent'\n  | 'default'\n  | 'white';\n\nexport type AvatarCssVariables = {\n  root: '--avatar-size' | '--avatar-radius' | '--avatar-bg' | '--avatar-color' | '--avatar-bd';\n};\n\nexport interface AvatarProps extends BoxProps, StylesApiProps<AvatarFactory> {\n  /** Width and height of the avatar, numbers are converted to rem @default `'md'` */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Key of `theme.radius` or any valid CSS value to set border-radius @default `'1000px'` */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color @default `'gray'` */\n  color?: MantineColor | 'initials';\n\n  /** Gradient configuration for `variant=\"gradient\"` @default `theme.defaultGradient` */\n  gradient?: MantineGradient;\n\n  /** Image url, if the image cannot be loaded or `src={null}`, then placeholder is displayed instead */\n  src?: string | null;\n\n  /** Image `alt` attribute, also used as `title` attribute for placeholder */\n  alt?: string;\n\n  /** Attributes passed down to `img` element */\n  imageProps?: React.ComponentPropsWithoutRef<'img'>;\n\n  /** Avatar placeholder, displayed when `src={null}` or when the image cannot be loaded */\n  children?: React.ReactNode;\n\n  /** If set, adjusts text color based on background color for `filled` variant */\n  autoContrast?: boolean;\n\n  /** Name of the user. When `src` is not set, used to display initials and to generate color when `color=\"initials\"` is set. */\n  name?: string;\n\n  /** A list of colors that is used for autogenerated initials. By default, all default Mantine colors can be used except gray and dark. */\n  allowedInitialsColors?: MantineColor[];\n}\n\nexport type AvatarFactory = PolymorphicFactory<{\n  props: AvatarProps;\n  defaultRef: HTMLDivElement;\n  defaultComponent: 'div';\n  stylesNames: AvatarStylesNames;\n  vars: AvatarCssVariables;\n  variant: AvatarVariant;\n  staticComponents: {\n    Group: typeof AvatarGroup;\n  };\n}>;\n\nconst varsResolver = createVarsResolver<AvatarFactory>(\n  (\n    theme,\n    { size, radius, variant, gradient, color, autoContrast, name, allowedInitialsColors }\n  ) => {\n    const _color =\n      color === 'initials' && typeof name === 'string'\n        ? getInitialsColor(name, allowedInitialsColors)\n        : color;\n\n    const colors = theme.variantColorResolver({\n      color: _color || 'gray',\n      theme,\n      gradient,\n      variant: variant || 'light',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--avatar-size': getSize(size, 'avatar-size'),\n        '--avatar-radius': radius === undefined ? undefined : getRadius(radius),\n        '--avatar-bg': _color || variant ? colors.background : undefined,\n        '--avatar-color': _color || variant ? colors.color : undefined,\n        '--avatar-bd': _color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const Avatar = polymorphicFactory<AvatarFactory>((_props, ref) => {\n  const props = useProps('Avatar', null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    src,\n    alt,\n    radius,\n    color,\n    gradient,\n    imageProps,\n    children,\n    autoContrast,\n    mod,\n    name,\n    allowedInitialsColors,\n    attributes,\n    ...others\n  } = props;\n  const ctx = useAvatarGroupContext();\n  const [error, setError] = useState(!src);\n\n  const getStyles = useStyles<AvatarFactory>({\n    name: 'Avatar',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  useEffect(() => setError(!src), [src]);\n\n  return (\n    <Box\n      {...getStyles('root')}\n      mod={[{ 'within-group': ctx.withinGroup }, mod]}\n      ref={ref}\n      {...others}\n    >\n      {error || !src ? (\n        <span {...getStyles('placeholder')} title={alt}>\n          {children || (typeof name === 'string' && getInitials(name)) || <AvatarPlaceholderIcon />}\n        </span>\n      ) : (\n        <img\n          {...imageProps}\n          {...getStyles('image')}\n          src={src}\n          alt={alt}\n          onError={(event) => {\n            setError(true);\n            imageProps?.onError?.(event);\n          }}\n        />\n      )}\n    </Box>\n  );\n});\n\nAvatar.classes = classes;\nAvatar.displayName = '@mantine/core/Avatar';\nAvatar.Group = AvatarGroup;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}