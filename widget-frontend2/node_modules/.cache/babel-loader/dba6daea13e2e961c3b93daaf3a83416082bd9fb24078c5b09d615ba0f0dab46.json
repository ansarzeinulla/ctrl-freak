{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"children\", \"style\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport 'clsx';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useScrollAreaContext } from '../ScrollArea.context.mjs';\nconst ScrollAreaViewport = forwardRef((_ref, ref) => {\n  let {\n      children,\n      style\n    } = _ref,\n    others = _objectWithoutProperties(_ref, _excluded);\n  const ctx = useScrollAreaContext();\n  const rootRef = useMergedRef(ref, ctx.onViewportChange);\n  return /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread({}, others), {}, {\n    ref: rootRef,\n    style: _objectSpread({\n      overflowX: ctx.scrollbarXEnabled ? \"scroll\" : \"hidden\",\n      overflowY: ctx.scrollbarYEnabled ? \"scroll\" : \"hidden\"\n    }, style),\n    children: /* @__PURE__ */jsx(\"div\", _objectSpread(_objectSpread({}, ctx.getStyles(\"content\")), {}, {\n      ref: ctx.onContentChange,\n      children\n    }))\n  }));\n});\nScrollAreaViewport.displayName = \"@mantine/core/ScrollAreaViewport\";\nexport { ScrollAreaViewport };","map":{"version":3,"names":["ScrollAreaViewport","forwardRef","_ref","ref","children","style","others","_objectWithoutProperties","_excluded","ctx","useScrollAreaContext","rootRef","useMergedRef","onViewportChange","jsx","Box","_objectSpread","overflowX","scrollbarXEnabled","overflowY","scrollbarYEnabled","getStyles","onContentChange","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/ScrollArea/ScrollAreaViewport/ScrollAreaViewport.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport { Box, BoxProps, ElementProps } from '../../../core';\nimport { useScrollAreaContext } from '../ScrollArea.context';\n\nexport interface ScrollAreaViewportProps extends BoxProps, ElementProps<'div'> {}\n\nexport const ScrollAreaViewport = forwardRef<HTMLDivElement, ScrollAreaViewportProps>(\n  ({ children, style, ...others }, ref) => {\n    const ctx = useScrollAreaContext();\n    const rootRef = useMergedRef(ref, ctx.onViewportChange);\n\n    return (\n      <Box\n        {...others}\n        ref={rootRef}\n        style={{\n          overflowX: ctx.scrollbarXEnabled ? 'scroll' : 'hidden',\n          overflowY: ctx.scrollbarYEnabled ? 'scroll' : 'hidden',\n          ...style,\n        }}\n      >\n        <div {...ctx.getStyles('content')} ref={ctx.onContentChange}>\n          {children}\n        </div>\n      </Box>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = '@mantine/core/ScrollAreaViewport';\n"],"mappings":";;;;;;;;;;;;;;;;;;AAOO,MAAMA,kBAAA,GAAqBC,UAAA,CAChC,CAAAC,IAAA,EAAiCC,GAAA,KAAQ;EAAA,IAAxC;MAAEC,QAAA;MAAUC;IAAU,IAAAH,IAAA;IAAAI,MAAA,GAAAC,wBAAA,CAAAL,IAAA,EAAAM,SAAA;EACrB,MAAMC,GAAA,GAAMC,oBAAA,EAAqB;EACjC,MAAMC,OAAA,GAAUC,YAAA,CAAaT,GAAA,EAAKM,GAAA,CAAII,gBAAgB;EAEtD,sBACEC,GAAA,CAACC,GAAA,EAAAC,aAAA,CAAAA,aAAA,KACKV,MAAA;IACJH,GAAA,EAAKQ,OAAA;IACLN,KAAA,EAAAW,aAAA;MACEC,SAAA,EAAWR,GAAA,CAAIS,iBAAA,GAAoB,WAAW;MAC9CC,SAAA,EAAWV,GAAA,CAAIW,iBAAA,GAAoB,WAAW;IAAA,GAC3Cf,KAAA,CACL;IAEAD,QAAA,iBAAAU,GAAA,CAAC,OAAAE,aAAA,CAAAA,aAAA,KAAQP,GAAA,CAAIY,SAAA,CAAU,SAAS;MAAGlB,GAAA,EAAKM,GAAA,CAAIa,eAAA;MACzClB;IAAA,EACH;EAAA,GACF;AAEJ,CACF;AAEAJ,kBAAA,CAAmBuB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}