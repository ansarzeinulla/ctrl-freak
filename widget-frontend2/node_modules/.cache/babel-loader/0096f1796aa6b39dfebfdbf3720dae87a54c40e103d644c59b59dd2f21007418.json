{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"defaultValue\", \"value\", \"onChange\", \"orientation\", \"children\", \"loop\", \"id\", \"activateTabWithKeyboard\", \"allowTabDeactivation\", \"variant\", \"color\", \"radius\", \"inverted\", \"placement\", \"keepMounted\", \"classNames\", \"styles\", \"unstyled\", \"className\", \"style\", \"vars\", \"autoContrast\", \"mod\", \"attributes\"];\nimport { jsx } from 'react/jsx-runtime';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSafeId } from '../../core/utils/get-safe-id/get-safe-id.mjs';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport { getAutoContrastValue } from '../../core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { TabsProvider } from './Tabs.context.mjs';\nimport { TabsList } from './TabsList/TabsList.mjs';\nimport { TabsPanel } from './TabsPanel/TabsPanel.mjs';\nimport { TabsTab } from './TabsTab/TabsTab.mjs';\nimport classes from './Tabs.module.css.mjs';\nconst VALUE_ERROR = \"Tabs.Tab or Tabs.Panel component was rendered with invalid value or without value\";\nconst defaultProps = {\n  keepMounted: true,\n  orientation: \"horizontal\",\n  loop: true,\n  activateTabWithKeyboard: true,\n  variant: \"default\",\n  placement: \"left\"\n};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    radius,\n    color,\n    autoContrast\n  } = _ref;\n  return {\n    root: {\n      \"--tabs-radius\": getRadius(radius),\n      \"--tabs-color\": getThemeColor(color, theme),\n      \"--tabs-text-color\": getAutoContrastValue(autoContrast, theme) ? getContrastColor({\n        color,\n        theme,\n        autoContrast\n      }) : void 0\n    }\n  };\n});\nconst Tabs = factory((_props, ref) => {\n  const props = useProps(\"Tabs\", defaultProps, _props);\n  const {\n      defaultValue,\n      value,\n      onChange,\n      orientation,\n      children,\n      loop,\n      id,\n      activateTabWithKeyboard,\n      allowTabDeactivation,\n      variant,\n      color,\n      radius,\n      inverted,\n      placement,\n      keepMounted,\n      classNames,\n      styles,\n      unstyled,\n      className,\n      style,\n      vars,\n      autoContrast,\n      mod,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const uid = useId(id);\n  const [currentTab, setCurrentTab] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange\n  });\n  const getStyles = useStyles({\n    name: \"Tabs\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(TabsProvider, {\n    value: {\n      placement,\n      value: currentTab,\n      orientation,\n      id: uid,\n      loop,\n      activateTabWithKeyboard,\n      getTabId: getSafeId(\"\".concat(uid, \"-tab\"), VALUE_ERROR),\n      getPanelId: getSafeId(\"\".concat(uid, \"-panel\"), VALUE_ERROR),\n      onChange: setCurrentTab,\n      allowTabDeactivation,\n      variant,\n      color,\n      radius,\n      inverted,\n      keepMounted,\n      unstyled,\n      getStyles\n    },\n    children: /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread(_objectSpread({\n      ref,\n      id: uid,\n      variant,\n      mod: [{\n        orientation,\n        inverted: orientation === \"horizontal\" && inverted,\n        placement: orientation === \"vertical\" && placement\n      }, mod]\n    }, getStyles(\"root\")), others), {}, {\n      children\n    }))\n  });\n});\nTabs.classes = classes;\nTabs.displayName = \"@mantine/core/Tabs\";\nTabs.Tab = TabsTab;\nTabs.Panel = TabsPanel;\nTabs.List = TabsList;\nexport { Tabs };","map":{"version":3,"names":["VALUE_ERROR","defaultProps","keepMounted","orientation","loop","activateTabWithKeyboard","variant","placement","varsResolver","createVarsResolver","theme","_ref","radius","color","autoContrast","root","getRadius","getThemeColor","getAutoContrastValue","getContrastColor","Tabs","factory","_props","ref","props","useProps","defaultValue","value","onChange","children","id","allowTabDeactivation","inverted","classNames","styles","unstyled","className","style","vars","mod","attributes","others","_objectWithoutProperties","_excluded","uid","useId","currentTab","setCurrentTab","useUncontrolled","finalValue","getStyles","useStyles","name","classes","jsx","TabsProvider","getTabId","getSafeId","concat","getPanelId","Box","_objectSpread","displayName","Tab","TabsTab","Panel","TabsPanel","List","TabsList"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Tabs/Tabs.tsx"],"sourcesContent":["import { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getSafeId,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { TabsProvider } from './Tabs.context';\nimport { TabsList, TabsListStylesNames } from './TabsList/TabsList';\nimport { TabsPanel, TabsPanelStylesNames } from './TabsPanel/TabsPanel';\nimport { TabsTab, TabsTabStylesNames } from './TabsTab/TabsTab';\nimport classes from './Tabs.module.css';\n\nexport type TabsStylesNames =\n  | 'root'\n  | TabsListStylesNames\n  | TabsPanelStylesNames\n  | TabsTabStylesNames;\n\nexport type TabsVariant = 'default' | 'outline' | 'pills';\nexport type TabsCssVariables = {\n  root: '--tabs-color' | '--tabs-radius';\n};\n\nexport interface TabsProps\n  extends BoxProps,\n    StylesApiProps<TabsFactory>,\n    ElementProps<'div', 'defaultValue' | 'value' | 'onChange'> {\n  /** Uncontrolled component default value */\n  defaultValue?: string | null;\n\n  /** Controlled component value */\n  value?: string | null;\n\n  /** Called when value changes */\n  onChange?: (value: string | null) => void;\n\n  /** Tabs orientation @default `'horizontal'` */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** `Tabs.List` placement relative to `Tabs.Panel`, applicable only when `orientation=\"vertical\"` @default `'left'` */\n  placement?: 'left' | 'right';\n\n  /** Base id, used to generate ids to connect labels with controls, generated randomly by default */\n  id?: string;\n\n  /** If set, arrow key presses loop though items (first to last and last to first) @default `true` */\n  loop?: boolean;\n\n  /** If set, tab is activated with arrow key press @default `true` */\n  activateTabWithKeyboard?: boolean;\n\n  /** If set, tab can be deactivated @default `false` */\n  allowTabDeactivation?: boolean;\n\n  /** Tabs content */\n  children?: React.ReactNode;\n\n  /** Changes colors of `Tabs.Tab` components when variant is `pills` or `default`, does nothing for other variants */\n  color?: MantineColor;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`@default `theme.defaultRadius` */\n  radius?: MantineRadius;\n\n  /** Determines whether tabs should have inverted styles @default `false` */\n  inverted?: boolean;\n\n  /** If set to `false`, `Tabs.Panel` content will be unmounted when the associated tab is not active @default `true` */\n  keepMounted?: boolean;\n\n  /** If set, adjusts text color based on background color for `pills` variant */\n  autoContrast?: boolean;\n}\n\nexport type TabsFactory = Factory<{\n  props: TabsProps;\n  ref: HTMLDivElement;\n  variant: TabsVariant;\n  stylesNames: TabsStylesNames;\n  vars: TabsCssVariables;\n  staticComponents: {\n    Tab: typeof TabsTab;\n    Panel: typeof TabsPanel;\n    List: typeof TabsList;\n  };\n}>;\n\nconst VALUE_ERROR =\n  'Tabs.Tab or Tabs.Panel component was rendered with invalid value or without value';\n\nconst defaultProps = {\n  keepMounted: true,\n  orientation: 'horizontal',\n  loop: true,\n  activateTabWithKeyboard: true,\n  variant: 'default',\n  placement: 'left',\n} satisfies Partial<TabsProps>;\n\nconst varsResolver = createVarsResolver<TabsFactory>((theme, { radius, color, autoContrast }) => ({\n  root: {\n    '--tabs-radius': getRadius(radius),\n    '--tabs-color': getThemeColor(color, theme),\n    '--tabs-text-color': getAutoContrastValue(autoContrast, theme)\n      ? getContrastColor({ color, theme, autoContrast })\n      : undefined,\n  },\n}));\n\nexport const Tabs = factory<TabsFactory>((_props, ref) => {\n  const props = useProps('Tabs', defaultProps, _props);\n  const {\n    defaultValue,\n    value,\n    onChange,\n    orientation,\n    children,\n    loop,\n    id,\n    activateTabWithKeyboard,\n    allowTabDeactivation,\n    variant,\n    color,\n    radius,\n    inverted,\n    placement,\n    keepMounted,\n    classNames,\n    styles,\n    unstyled,\n    className,\n    style,\n    vars,\n    autoContrast,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const uid = useId(id);\n\n  const [currentTab, setCurrentTab] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange,\n  });\n\n  const getStyles = useStyles<TabsFactory>({\n    name: 'Tabs',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <TabsProvider\n      value={{\n        placement,\n        value: currentTab,\n        orientation,\n        id: uid,\n        loop,\n        activateTabWithKeyboard,\n        getTabId: getSafeId(`${uid}-tab`, VALUE_ERROR),\n        getPanelId: getSafeId(`${uid}-panel`, VALUE_ERROR),\n        onChange: setCurrentTab,\n        allowTabDeactivation,\n        variant,\n        color,\n        radius,\n        inverted,\n        keepMounted,\n        unstyled,\n        getStyles,\n      }}\n    >\n      <Box\n        ref={ref}\n        id={uid}\n        variant={variant}\n        mod={[\n          {\n            orientation,\n            inverted: orientation === 'horizontal' && inverted,\n            placement: orientation === 'vertical' && placement,\n          },\n          mod,\n        ]}\n        {...getStyles('root')}\n        {...others}\n      >\n        {children}\n      </Box>\n    </TabsProvider>\n  );\n});\n\nTabs.classes = classes;\nTabs.displayName = '@mantine/core/Tabs';\nTabs.Tab = TabsTab;\nTabs.Panel = TabsPanel;\nTabs.List = TabsList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}