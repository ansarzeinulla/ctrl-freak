{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useId } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../CloseButton/CloseIcon.mjs';\nimport { CloseButton } from '../CloseButton/CloseButton.mjs';\nimport classes from './Alert.module.css.mjs';\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  variant,\n  autoContrast\n}) => {\n  const colors = theme.variantColorResolver({\n    color: color || theme.primaryColor,\n    theme,\n    variant: variant || \"light\",\n    autoContrast\n  });\n  return {\n    root: {\n      \"--alert-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--alert-bg\": color || variant ? colors.background : void 0,\n      \"--alert-color\": colors.color,\n      \"--alert-bd\": color || variant ? colors.border : void 0\n    }\n  };\n});\nconst Alert = factory((_props, ref) => {\n  const props = useProps(\"Alert\", null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    title,\n    children,\n    id,\n    icon,\n    withCloseButton,\n    onClose,\n    closeButtonLabel,\n    variant,\n    autoContrast,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Alert\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const rootId = useId(id);\n  const titleId = title && `${rootId}-title` || void 0;\n  const bodyId = `${rootId}-body`;\n  return /* @__PURE__ */jsx(Box, {\n    id: rootId,\n    ...getStyles(\"root\", {\n      variant\n    }),\n    variant,\n    ref,\n    ...others,\n    role: \"alert\",\n    \"aria-describedby\": children ? bodyId : void 0,\n    \"aria-labelledby\": title ? titleId : void 0,\n    children: /* @__PURE__ */jsxs(\"div\", {\n      ...getStyles(\"wrapper\"),\n      children: [icon && /* @__PURE__ */jsx(\"div\", {\n        ...getStyles(\"icon\"),\n        children: icon\n      }), /* @__PURE__ */jsxs(\"div\", {\n        ...getStyles(\"body\"),\n        children: [title && /* @__PURE__ */jsx(\"div\", {\n          ...getStyles(\"title\"),\n          \"data-with-close-button\": withCloseButton || void 0,\n          children: /* @__PURE__ */jsx(\"span\", {\n            id: titleId,\n            ...getStyles(\"label\"),\n            children: title\n          })\n        }), children && /* @__PURE__ */jsx(\"div\", {\n          id: bodyId,\n          ...getStyles(\"message\"),\n          \"data-variant\": variant,\n          children\n        })]\n      }), withCloseButton && /* @__PURE__ */jsx(CloseButton, {\n        ...getStyles(\"closeButton\"),\n        onClick: onClose,\n        variant: \"transparent\",\n        size: 16,\n        iconSize: 16,\n        \"aria-label\": closeButtonLabel,\n        unstyled\n      })]\n    })\n  });\n});\nAlert.classes = classes;\nAlert.displayName = \"@mantine/core/Alert\";\nexport { Alert };","map":{"version":3,"names":["varsResolver","createVarsResolver","theme","radius","color","variant","autoContrast","colors","variantColorResolver","primaryColor","root","getRadius","background","border","Alert","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","title","children","id","icon","withCloseButton","onClose","closeButtonLabel","attributes","others","getStyles","useStyles","name","classes","rootId","useId","titleId","bodyId","jsx","Box","role","jsxs","CloseButton","onClick","size","iconSize","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Alert/Alert.tsx"],"sourcesContent":["import { useId } from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getRadius,\n  MantineColor,\n  MantineRadius,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { CloseButton } from '../CloseButton';\nimport classes from './Alert.module.css';\n\nexport type AlertStylesNames =\n  | 'root'\n  | 'body'\n  | 'label'\n  | 'title'\n  | 'icon'\n  | 'wrapper'\n  | 'message'\n  | 'closeButton';\nexport type AlertVariant = 'filled' | 'light' | 'outline' | 'default' | 'transparent' | 'white';\nexport type AlertCssVariables = {\n  root: '--alert-radius' | '--alert-bg' | '--alert-color' | '--alert-bd';\n};\n\nexport interface AlertProps\n  extends BoxProps,\n    StylesApiProps<AlertFactory>,\n    ElementProps<'div', 'title'> {\n  /** Key of `theme.radius` or any valid CSS value to set border-radius @default `theme.defaultRadius` */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color @default `theme.primaryColor`  */\n  color?: MantineColor;\n\n  /** Alert title */\n  title?: React.ReactNode;\n\n  /** Icon displayed next to the title */\n  icon?: React.ReactNode;\n\n  /** Determines whether close button should be displayed @default `false` */\n  withCloseButton?: boolean;\n\n  /** Called when the close button is clicked */\n  onClose?: () => void;\n\n  /** Close button `aria-label` */\n  closeButtonLabel?: string;\n\n  /** If set, adjusts text color based on background color for `filled` variant */\n  autoContrast?: boolean;\n}\n\nexport type AlertFactory = Factory<{\n  props: AlertProps;\n  ref: HTMLDivElement;\n  stylesNames: AlertStylesNames;\n  vars: AlertCssVariables;\n  variant: AlertVariant;\n}>;\n\nconst varsResolver = createVarsResolver<AlertFactory>(\n  (theme, { radius, color, variant, autoContrast }) => {\n    const colors = theme.variantColorResolver({\n      color: color || theme.primaryColor,\n      theme,\n      variant: variant || 'light',\n      autoContrast,\n    });\n\n    return {\n      root: {\n        '--alert-radius': radius === undefined ? undefined : getRadius(radius),\n        '--alert-bg': color || variant ? colors.background : undefined,\n        '--alert-color': colors.color,\n        '--alert-bd': color || variant ? colors.border : undefined,\n      },\n    };\n  }\n);\n\nexport const Alert = factory<AlertFactory>((_props, ref) => {\n  const props = useProps('Alert', null, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    radius,\n    color,\n    title,\n    children,\n    id,\n    icon,\n    withCloseButton,\n    onClose,\n    closeButtonLabel,\n    variant,\n    autoContrast,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<AlertFactory>({\n    name: 'Alert',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const rootId = useId(id);\n  const titleId = (title && `${rootId}-title`) || undefined;\n  const bodyId = `${rootId}-body`;\n\n  return (\n    <Box\n      id={rootId}\n      {...getStyles('root', { variant })}\n      variant={variant}\n      ref={ref}\n      {...others}\n      role=\"alert\"\n      aria-describedby={children ? bodyId : undefined}\n      aria-labelledby={title ? titleId : undefined}\n    >\n      <div {...getStyles('wrapper')}>\n        {icon && <div {...getStyles('icon')}>{icon}</div>}\n\n        <div {...getStyles('body')}>\n          {title && (\n            <div {...getStyles('title')} data-with-close-button={withCloseButton || undefined}>\n              <span id={titleId} {...getStyles('label')}>\n                {title}\n              </span>\n            </div>\n          )}\n\n          {children && (\n            <div id={bodyId} {...getStyles('message')} data-variant={variant}>\n              {children}\n            </div>\n          )}\n        </div>\n\n        {withCloseButton && (\n          <CloseButton\n            {...getStyles('closeButton')}\n            onClick={onClose}\n            variant=\"transparent\"\n            size={16}\n            iconSize={16}\n            aria-label={closeButtonLabel}\n            unstyled={unstyled}\n          />\n        )}\n      </div>\n    </Box>\n  );\n});\n\nAlert.classes = classes;\nAlert.displayName = '@mantine/core/Alert';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}