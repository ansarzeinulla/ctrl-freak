{"ast":null,"code":"'use client';\n\nimport _objectWithoutProperties from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nconst _excluded = [\"classNames\", \"className\", \"style\", \"styles\", \"unstyled\", \"vars\", \"children\", \"position\", \"offset\", \"inline\", \"label\", \"radius\", \"color\", \"withBorder\", \"disabled\", \"processing\", \"zIndex\", \"autoContrast\", \"mod\", \"attributes\"];\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { rem } from '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport { getAutoContrastValue } from '../../core/MantineProvider/color-functions/get-auto-contrast-value/get-auto-contrast-value.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getPositionVariables } from './get-position-variables/get-position-variables.mjs';\nimport classes from './Indicator.module.css.mjs';\nconst defaultProps = {\n  position: \"top-end\",\n  offset: 0\n};\nconst varsResolver = createVarsResolver((theme, _ref) => {\n  let {\n    color,\n    position,\n    offset,\n    size,\n    radius,\n    zIndex,\n    autoContrast\n  } = _ref;\n  return {\n    root: _objectSpread({\n      \"--indicator-color\": color ? getThemeColor(color, theme) : void 0,\n      \"--indicator-text-color\": getAutoContrastValue(autoContrast, theme) ? getContrastColor({\n        color,\n        theme,\n        autoContrast\n      }) : void 0,\n      \"--indicator-size\": rem(size),\n      \"--indicator-radius\": radius === void 0 ? void 0 : getRadius(radius),\n      \"--indicator-z-index\": zIndex === null || zIndex === void 0 ? void 0 : zIndex.toString()\n    }, getPositionVariables(position, offset))\n  };\n});\nconst Indicator = factory((_props, ref) => {\n  const props = useProps(\"Indicator\", defaultProps, _props);\n  const {\n      classNames,\n      className,\n      style,\n      styles,\n      unstyled,\n      vars,\n      children,\n      position,\n      offset,\n      inline,\n      label,\n      radius,\n      color,\n      withBorder,\n      disabled,\n      processing,\n      zIndex,\n      autoContrast,\n      mod,\n      attributes\n    } = props,\n    others = _objectWithoutProperties(props, _excluded);\n  const getStyles = useStyles({\n    name: \"Indicator\",\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsxs(Box, _objectSpread(_objectSpread(_objectSpread({\n    ref\n  }, getStyles(\"root\")), {}, {\n    mod: [{\n      inline\n    }, mod]\n  }, others), {}, {\n    children: [!disabled && /* @__PURE__ */jsx(Box, _objectSpread(_objectSpread({\n      mod: {\n        \"with-label\": !!label,\n        \"with-border\": withBorder,\n        processing\n      }\n    }, getStyles(\"indicator\")), {}, {\n      children: label\n    })), children]\n  }));\n});\nIndicator.classes = classes;\nIndicator.displayName = \"@mantine/core/Indicator\";\nexport { Indicator };","map":{"version":3,"names":["defaultProps","position","offset","varsResolver","createVarsResolver","theme","_ref","color","size","radius","zIndex","autoContrast","root","_objectSpread","getThemeColor","getAutoContrastValue","getContrastColor","rem","getRadius","toString","getPositionVariables","Indicator","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","children","inline","label","withBorder","disabled","processing","mod","attributes","others","_objectWithoutProperties","_excluded","getStyles","useStyles","name","classes","jsxs","Box","jsx","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Indicator/Indicator.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getAutoContrastValue,\n  getContrastColor,\n  getRadius,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  rem,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { getPositionVariables } from './get-position-variables/get-position-variables';\nimport { IndicatorPosition } from './Indicator.types';\nimport classes from './Indicator.module.css';\n\nexport type IndicatorPositionVariables =\n  | '--indicator-top'\n  | '--indicator-bottom'\n  | '--indicator-left'\n  | '--indicator-right'\n  | '--indicator-translate-x'\n  | '--indicator-translate-y';\n\nexport type IndicatorStylesNames = 'root' | 'indicator';\nexport type IndicatorCssVariables = {\n  root:\n    | '--indicator-color'\n    | '--indicator-text-color'\n    | '--indicator-size'\n    | '--indicator-radius'\n    | '--indicator-z-index'\n    | IndicatorPositionVariables;\n};\n\nexport interface IndicatorProps\n  extends BoxProps,\n    StylesApiProps<IndicatorFactory>,\n    ElementProps<'div'> {\n  /** Indicator position relative to the target element @default `'top-end'` */\n  position?: IndicatorPosition;\n\n  /** Indicator offset relative to the target element, usually used for elements with border-radius */\n  offset?: number;\n\n  /** Determines whether the indicator container should be an inline element @default `false` */\n  inline?: boolean;\n\n  /** Indicator width and height @default `10` */\n  size?: number | string;\n\n  /** Label displayed inside the indicator, for example, notification count */\n  label?: React.ReactNode;\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius` @default `100` */\n  radius?: MantineRadius;\n\n  /** Key of `theme.colors` or any valid CSS color value @default `theme.primaryColor` */\n  color?: MantineColor;\n\n  /** Adds border to the root element */\n  withBorder?: boolean;\n\n  /** If set, the indicator is hidden */\n  disabled?: boolean;\n\n  /** If set, the indicator has processing animation @default `false` */\n  processing?: boolean;\n\n  /** Indicator z-index @default `200` */\n  zIndex?: string | number;\n\n  /** If set, adjusts text color based on background color for `filled` variant */\n  autoContrast?: boolean;\n}\n\nexport type IndicatorFactory = Factory<{\n  props: IndicatorProps;\n  ref: HTMLDivElement;\n  stylesNames: IndicatorStylesNames;\n  vars: IndicatorCssVariables;\n}>;\n\nconst defaultProps = {\n  position: 'top-end',\n  offset: 0,\n} satisfies Partial<IndicatorProps>;\n\nconst varsResolver = createVarsResolver<IndicatorFactory>(\n  (theme, { color, position, offset, size, radius, zIndex, autoContrast }) => ({\n    root: {\n      '--indicator-color': color ? getThemeColor(color, theme) : undefined,\n      '--indicator-text-color': getAutoContrastValue(autoContrast, theme)\n        ? getContrastColor({ color, theme, autoContrast })\n        : undefined,\n      '--indicator-size': rem(size),\n      '--indicator-radius': radius === undefined ? undefined : getRadius(radius),\n      '--indicator-z-index': zIndex?.toString(),\n      ...getPositionVariables(position, offset),\n    },\n  })\n);\n\nexport const Indicator = factory<IndicatorFactory>((_props, ref) => {\n  const props = useProps('Indicator', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    children,\n    position,\n    offset,\n    inline,\n    label,\n    radius,\n    color,\n    withBorder,\n    disabled,\n    processing,\n    zIndex,\n    autoContrast,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<IndicatorFactory>({\n    name: 'Indicator',\n    classes,\n    props,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return (\n    <Box ref={ref} {...getStyles('root')} mod={[{ inline }, mod]} {...others}>\n      {!disabled && (\n        <Box\n          mod={{ 'with-label': !!label, 'with-border': withBorder, processing }}\n          {...getStyles('indicator')}\n        >\n          {label}\n        </Box>\n      )}\n      {children}\n    </Box>\n  );\n});\n\nIndicator.classes = classes;\nIndicator.displayName = '@mantine/core/Indicator';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA,MAAMA,YAAA,GAAe;EACnBC,QAAA,EAAU;EACVC,MAAA,EAAQ;AACV;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CACnB,CAACC,KAAA,EAAAC,IAAA;EAAA,IAAO;IAAEC,KAAA;IAAON,QAAA;IAAUC,MAAA;IAAQM,IAAA;IAAMC,MAAA;IAAQC,MAAA;IAAQC;EAAA,CAAa,GAAAL,IAAA;EAAA,OAAO;IAC3EM,IAAA,EAAAC,aAAA;MACE,qBAAqBN,KAAA,GAAQO,aAAA,CAAcP,KAAA,EAAOF,KAAK,IAAI;MAC3D,0BAA0BU,oBAAA,CAAqBJ,YAAA,EAAcN,KAAK,IAC9DW,gBAAA,CAAiB;QAAET,KAAA;QAAOF,KAAA;QAAOM;MAAA,CAAc,IAC/C;MACJ,oBAAoBM,GAAA,CAAIT,IAAI;MAC5B,sBAAsBC,MAAA,KAAW,SAAY,SAAYS,SAAA,CAAUT,MAAM;MACzE,uBAAuBC,MAAA,aAAAA,MAAA,uBAAAA,MAAA,CAAQS,QAAA;IAAS,GACrCC,oBAAA,CAAqBnB,QAAA,EAAUC,MAAM;EAC1C,CACF;AAAA,CACF;AAEO,MAAMmB,SAAA,GAAYC,OAAA,CAA0B,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAClE,MAAMC,KAAA,GAAQC,QAAA,CAAS,aAAa1B,YAAA,EAAcuB,MAAM;EACxD,MAAM;MACJI,UAAA;MACAC,SAAA;MACAC,KAAA;MACAC,MAAA;MACAC,QAAA;MACAC,IAAA;MACAC,QAAA;MACAhC,QAAA;MACAC,MAAA;MACAgC,MAAA;MACAC,KAAA;MACA1B,MAAA;MACAF,KAAA;MACA6B,UAAA;MACAC,QAAA;MACAC,UAAA;MACA5B,MAAA;MACAC,YAAA;MACA4B,GAAA;MACAC;IACG,CACL,GAAIf,KAAA;IADCgB,MAAA,GAAAC,wBAAA,CACDjB,KAAA,EAAAkB,SAAA;EAEJ,MAAMC,SAAA,GAAYC,SAAA,CAA4B;IAC5CC,IAAA,EAAM;IACNC,OAAA;IACAtB,KAAA;IACAG,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAS,UAAA;IACAR,IAAA;IACA7B;EAAA,CACD;EAED,sBACE6C,IAAA,CAACC,GAAA,EAAApC,aAAA,CAAAA,aAAA,CAAAA,aAAA;IAAIW;EAAA,GAAcoB,SAAA,CAAU,MAAM;IAAGL,GAAA,EAAK,CAAC;MAAEL;IAAA,CAAO,EAAGK,GAAG;EAAA,GAAOE,MAAA;IAC/DR,QAAA,IAACI,QAAA,mBACAa,GAAA,CAACD,GAAA,EAAApC,aAAA,CAAAA,aAAA;MACC0B,GAAA,EAAK;QAAE,cAAc,CAAC,CAACJ,KAAA;QAAO,eAAeC,UAAA;QAAYE;MAAA;IAAW,GAChEM,SAAA,CAAU,WAAW;MAExBX,QAAA,EAAAE;IAAA,GACH,EAEDF,QAAA;EAAA,EACH;AAEJ,CAAC;AAEDZ,SAAA,CAAU0B,OAAA,GAAUA,OAAA;AACpB1B,SAAA,CAAU8B,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}