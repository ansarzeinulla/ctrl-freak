{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useEffect } from 'react';\nimport { randomId } from '../utils/random-id/random-id.mjs';\nfunction getHeadingsData(headings, getDepth, getValue) {\n  const result = [];\n  for (let i = 0; i < headings.length; i += 1) {\n    const heading = headings[i];\n    result.push({\n      depth: getDepth(heading),\n      value: getValue(heading),\n      id: heading.id || randomId(),\n      getNode: () => heading.id ? document.getElementById(heading.id) : heading\n    });\n  }\n  return result;\n}\nfunction getActiveElement(rects, offset = 0) {\n  if (rects.length === 0) {\n    return -1;\n  }\n  const closest = rects.reduce((acc, item, index) => {\n    if (Math.abs(acc.position - offset) < Math.abs(item.y - offset)) {\n      return acc;\n    }\n    return {\n      index,\n      position: item.y\n    };\n  }, {\n    index: 0,\n    position: rects[0].y\n  });\n  return closest.index;\n}\nfunction getDefaultDepth(element) {\n  return Number(element.tagName[1]);\n}\nfunction getDefaultValue(element) {\n  return element.textContent || \"\";\n}\nfunction useScrollSpy({\n  selector = \"h1, h2, h3, h4, h5, h6\",\n  getDepth = getDefaultDepth,\n  getValue = getDefaultValue,\n  offset = 0,\n  scrollHost\n} = {}) {\n  const [active, setActive] = useState(-1);\n  const [initialized, setInitialized] = useState(false);\n  const [data, setData] = useState([]);\n  const headingsRef = useRef([]);\n  const handleScroll = () => {\n    setActive(getActiveElement(headingsRef.current.map(d => d.getNode().getBoundingClientRect()), offset));\n  };\n  const initialize = () => {\n    const headings = getHeadingsData(Array.from(document.querySelectorAll(selector)), getDepth, getValue);\n    headingsRef.current = headings;\n    setInitialized(true);\n    setData(headings);\n    setActive(getActiveElement(headings.map(d => d.getNode().getBoundingClientRect()), offset));\n  };\n  useEffect(() => {\n    initialize();\n    const _scrollHost = scrollHost || window;\n    _scrollHost.addEventListener(\"scroll\", handleScroll);\n    return () => _scrollHost.removeEventListener(\"scroll\", handleScroll);\n  }, [scrollHost]);\n  return {\n    reinitialize: initialize,\n    active,\n    initialized,\n    data\n  };\n}\nexport { useScrollSpy };","map":{"version":3,"names":["getHeadingsData","headings","getDepth","getValue","result","i","length","heading","push","depth","value","id","randomId","getNode","document","getElementById","getActiveElement","rects","offset","closest","reduce","acc","item","index","Math","abs","position","y","getDefaultDepth","element","Number","tagName","getDefaultValue","textContent","useScrollSpy","selector","scrollHost","active","setActive","useState","initialized","setInitialized","data","setData","headingsRef","useRef","handleScroll","current","map","d","getBoundingClientRect","initialize","Array","from","querySelectorAll","useEffect","_scrollHost","window","addEventListener","removeEventListener","reinitialize"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-scroll-spy/use-scroll-spy.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { randomId } from '../utils';\n\nfunction getHeadingsData(\n  headings: HTMLElement[],\n  getDepth: (element: HTMLElement) => number,\n  getValue: (element: HTMLElement) => string\n): UseScrollSpyHeadingData[] {\n  const result: UseScrollSpyHeadingData[] = [];\n\n  for (let i = 0; i < headings.length; i += 1) {\n    const heading = headings[i];\n    result.push({\n      depth: getDepth(heading),\n      value: getValue(heading),\n      id: heading.id || randomId(),\n      getNode: () => (heading.id ? document.getElementById(heading.id)! : heading),\n    });\n  }\n\n  return result;\n}\n\nfunction getActiveElement(rects: DOMRect[], offset: number = 0) {\n  if (rects.length === 0) {\n    return -1;\n  }\n\n  const closest = rects.reduce(\n    (acc, item, index) => {\n      if (Math.abs(acc.position - offset) < Math.abs(item.y - offset)) {\n        return acc;\n      }\n\n      return {\n        index,\n        position: item.y,\n      };\n    },\n    { index: 0, position: rects[0].y }\n  );\n\n  return closest.index;\n}\n\nfunction getDefaultDepth(element: HTMLElement) {\n  return Number(element.tagName[1]);\n}\n\nfunction getDefaultValue(element: HTMLElement) {\n  return element.textContent || '';\n}\n\nexport interface UseScrollSpyHeadingData {\n  /** Heading depth, 1-6 */\n  depth: number;\n\n  /** Heading text content value */\n  value: string;\n\n  /** Heading id */\n  id: string;\n\n  /** Function to get heading node */\n  getNode: () => HTMLElement;\n}\n\nexport interface UseScrollSpyOptions {\n  /** Selector to get headings, `'h1, h2, h3, h4, h5, h6'` by default */\n  selector?: string;\n\n  /** A function to retrieve depth of heading, by default depth is calculated based on tag name */\n  getDepth?: (element: HTMLElement) => number;\n\n  /** A function to retrieve heading value, by default `element.textContent` is used */\n  getValue?: (element: HTMLElement) => string;\n\n  /** Host element to attach scroll event listener, if not provided, `window` is used */\n  scrollHost?: HTMLElement;\n\n  /** Offset from the top of the viewport to use when determining the active heading, `0` by default */\n  offset?: number;\n}\n\nexport interface UseScrollSpyReturnType {\n  /** Index of the active heading in the `data` array */\n  active: number;\n\n  /** Headings data. If not initialize, data is represented by an empty array. */\n  data: UseScrollSpyHeadingData[];\n\n  /** True if headings value have been retrieved from the DOM. */\n  initialized: boolean;\n\n  /** Function to update headings values after the parent component has mounted. */\n  reinitialize: () => void;\n}\n\nexport function useScrollSpy({\n  selector = 'h1, h2, h3, h4, h5, h6',\n  getDepth = getDefaultDepth,\n  getValue = getDefaultValue,\n  offset = 0,\n  scrollHost,\n}: UseScrollSpyOptions = {}): UseScrollSpyReturnType {\n  const [active, setActive] = useState(-1);\n  const [initialized, setInitialized] = useState(false);\n  const [data, setData] = useState<UseScrollSpyHeadingData[]>([]);\n  const headingsRef = useRef<UseScrollSpyHeadingData[]>([]);\n\n  const handleScroll = () => {\n    setActive(\n      getActiveElement(\n        headingsRef.current.map((d) => d.getNode().getBoundingClientRect()),\n        offset\n      )\n    );\n  };\n\n  const initialize = () => {\n    const headings = getHeadingsData(\n      Array.from(document.querySelectorAll(selector)),\n      getDepth,\n      getValue\n    );\n    headingsRef.current = headings;\n    setInitialized(true);\n    setData(headings);\n    setActive(\n      getActiveElement(\n        headings.map((d) => d.getNode().getBoundingClientRect()),\n        offset\n      )\n    );\n  };\n\n  useEffect(() => {\n    initialize();\n    const _scrollHost = scrollHost || window;\n    _scrollHost.addEventListener('scroll', handleScroll);\n    return () => _scrollHost.removeEventListener('scroll', handleScroll);\n  }, [scrollHost]);\n\n  return {\n    reinitialize: initialize,\n    active,\n    initialized,\n    data,\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}