{"ast":null,"code":"'use client';\n\nimport { jsxs, Fragment, jsx } from 'react/jsx-runtime';\nimport { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport '../../../core/utils/units-converters/rem.mjs';\nimport { isElement } from '../../../core/utils/is-element/is-element.mjs';\nimport { getDefaultZIndex } from '../../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport { getRadius } from '../../../core/utils/get-size/get-size.mjs';\nimport { getRefProp } from '../../../core/utils/get-ref-prop/get-ref-prop.mjs';\nimport { createVarsResolver } from '../../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport '../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../core/MantineProvider/default-theme.mjs';\nimport '../../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../../core/styles-api/use-styles/use-styles.mjs';\nimport { getStyleObject } from '../../../core/Box/get-style-object/get-style-object.mjs';\nimport { Box } from '../../../core/Box/Box.mjs';\nimport { factory } from '../../../core/factory/factory.mjs';\nimport '../../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../../Portal/Portal.mjs';\nimport { OptionalPortal } from '../../Portal/OptionalPortal.mjs';\nimport { useFloatingTooltip } from './use-floating-tooltip.mjs';\nimport classes from '../Tooltip.module.css.mjs';\nconst defaultProps = {\n  refProp: \"ref\",\n  withinPortal: true,\n  offset: 10,\n  position: \"right\",\n  zIndex: getDefaultZIndex(\"popover\")\n};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color\n}) => ({\n  tooltip: {\n    \"--tooltip-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--tooltip-bg\": color ? getThemeColor(color, theme) : void 0,\n    \"--tooltip-color\": color ? \"var(--mantine-color-white)\" : void 0\n  }\n}));\nconst TooltipFloating = factory((_props, ref) => {\n  const props = useProps(\"TooltipFloating\", defaultProps, _props);\n  const {\n    children,\n    refProp,\n    withinPortal,\n    style,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    radius,\n    color,\n    label,\n    offset,\n    position,\n    multiline,\n    zIndex,\n    disabled,\n    defaultOpened,\n    variant,\n    vars,\n    portalProps,\n    attributes,\n    ...others\n  } = props;\n  const theme = useMantineTheme();\n  const getStyles = useStyles({\n    name: \"TooltipFloating\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    rootSelector: \"tooltip\",\n    vars,\n    varsResolver\n  });\n  const {\n    handleMouseMove,\n    x,\n    y,\n    opened,\n    boundaryRef,\n    floating,\n    setOpened\n  } = useFloatingTooltip({\n    offset,\n    position,\n    defaultOpened\n  });\n  if (!isElement(children)) {\n    throw new Error(\"[@mantine/core] Tooltip.Floating component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported\");\n  }\n  const targetRef = useMergedRef(boundaryRef, getRefProp(children), ref);\n  const _childrenProps = children.props;\n  const onMouseEnter = event => {\n    _childrenProps.onMouseEnter?.(event);\n    handleMouseMove(event);\n    setOpened(true);\n  };\n  const onMouseLeave = event => {\n    _childrenProps.onMouseLeave?.(event);\n    setOpened(false);\n  };\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(OptionalPortal, {\n      ...portalProps,\n      withinPortal,\n      children: /* @__PURE__ */jsx(Box, {\n        ...others,\n        ...getStyles(\"tooltip\", {\n          style: {\n            ...getStyleObject(style, theme),\n            zIndex,\n            display: !disabled && opened ? \"block\" : \"none\",\n            top: (y && Math.round(y)) ?? \"\",\n            left: (x && Math.round(x)) ?? \"\"\n          }\n        }),\n        variant,\n        ref: floating,\n        mod: {\n          multiline\n        },\n        children: label\n      })\n    }), cloneElement(children, {\n      ..._childrenProps,\n      [refProp]: targetRef,\n      onMouseEnter,\n      onMouseLeave\n    })]\n  });\n});\nTooltipFloating.classes = classes;\nTooltipFloating.displayName = \"@mantine/core/TooltipFloating\";\nexport { TooltipFloating };","map":{"version":3,"names":["defaultProps","refProp","withinPortal","offset","position","zIndex","getDefaultZIndex","varsResolver","createVarsResolver","theme","radius","color","tooltip","getRadius","getThemeColor","TooltipFloating","factory","_props","ref","props","useProps","children","style","className","classNames","styles","unstyled","label","multiline","disabled","defaultOpened","variant","vars","portalProps","attributes","others","useMantineTheme","getStyles","useStyles","name","classes","rootSelector","handleMouseMove","x","y","opened","boundaryRef","floating","setOpened","useFloatingTooltip","isElement","Error","targetRef","useMergedRef","getRefProp","_childrenProps","onMouseEnter","event","onMouseLeave","jsxs","Fragment","jsx","OptionalPortal","Box","getStyleObject","display","top","Math","round","left","mod","cloneElement","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Tooltip/TooltipFloating/TooltipFloating.tsx"],"sourcesContent":["import { cloneElement } from 'react';\nimport { useMergedRef } from '@mantine/hooks';\nimport {\n  Box,\n  createVarsResolver,\n  factory,\n  Factory,\n  getDefaultZIndex,\n  getRadius,\n  getRefProp,\n  getStyleObject,\n  getThemeColor,\n  isElement,\n  useMantineTheme,\n  useProps,\n  useStyles,\n} from '../../../core';\nimport { OptionalPortal } from '../../Portal';\nimport { TooltipBaseProps, TooltipCssVariables, TooltipStylesNames } from '../Tooltip.types';\nimport { useFloatingTooltip } from './use-floating-tooltip';\nimport classes from '../Tooltip.module.css';\n\nexport interface TooltipFloatingProps extends TooltipBaseProps {\n  /** Offset from mouse in px @default `10` */\n  offset?: number;\n\n  /** Uncontrolled tooltip initial opened state */\n  defaultOpened?: boolean;\n}\n\nexport type TooltipFloatingFactory = Factory<{\n  props: TooltipFloatingProps;\n  ref: HTMLDivElement;\n  stylesNames: TooltipStylesNames;\n  vars: TooltipCssVariables;\n}>;\n\nconst defaultProps = {\n  refProp: 'ref',\n  withinPortal: true,\n  offset: 10,\n  position: 'right',\n  zIndex: getDefaultZIndex('popover'),\n} satisfies Partial<TooltipFloatingProps>;\n\nconst varsResolver = createVarsResolver<TooltipFloatingFactory>((theme, { radius, color }) => ({\n  tooltip: {\n    '--tooltip-radius': radius === undefined ? undefined : getRadius(radius),\n    '--tooltip-bg': color ? getThemeColor(color, theme) : undefined,\n    '--tooltip-color': color ? 'var(--mantine-color-white)' : undefined,\n  },\n}));\n\nexport const TooltipFloating = factory<TooltipFloatingFactory>((_props, ref) => {\n  const props = useProps('TooltipFloating', defaultProps, _props);\n  const {\n    children,\n    refProp,\n    withinPortal,\n    style,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    radius,\n    color,\n    label,\n    offset,\n    position,\n    multiline,\n    zIndex,\n    disabled,\n    defaultOpened,\n    variant,\n    vars,\n    portalProps,\n    attributes,\n    ...others\n  } = props;\n\n  const theme = useMantineTheme();\n  const getStyles = useStyles<TooltipFloatingFactory>({\n    name: 'TooltipFloating',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    rootSelector: 'tooltip',\n    vars,\n    varsResolver,\n  });\n\n  const { handleMouseMove, x, y, opened, boundaryRef, floating, setOpened } = useFloatingTooltip({\n    offset,\n    position,\n    defaultOpened,\n  });\n\n  if (!isElement(children)) {\n    throw new Error(\n      '[@mantine/core] Tooltip.Floating component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported'\n    );\n  }\n\n  const targetRef = useMergedRef(boundaryRef, getRefProp(children), ref);\n  const _childrenProps = children.props as any;\n\n  const onMouseEnter = (event: React.MouseEvent<unknown, MouseEvent>) => {\n    _childrenProps.onMouseEnter?.(event);\n    handleMouseMove(event);\n    setOpened(true);\n  };\n\n  const onMouseLeave = (event: React.MouseEvent<unknown, MouseEvent>) => {\n    _childrenProps.onMouseLeave?.(event);\n    setOpened(false);\n  };\n\n  return (\n    <>\n      <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n        <Box\n          {...others}\n          {...getStyles('tooltip', {\n            style: {\n              ...getStyleObject(style, theme),\n              zIndex: zIndex as React.CSSProperties['zIndex'],\n              display: !disabled && opened ? 'block' : 'none',\n              top: (y && Math.round(y)) ?? '',\n              left: (x && Math.round(x)) ?? '',\n            },\n          })}\n          variant={variant}\n          ref={floating}\n          mod={{ multiline }}\n        >\n          {label}\n        </Box>\n      </OptionalPortal>\n\n      {cloneElement(children, {\n        ..._childrenProps,\n        [refProp]: targetRef,\n        onMouseEnter,\n        onMouseLeave,\n      })}\n    </>\n  );\n});\n\nTooltipFloating.classes = classes;\nTooltipFloating.displayName = '@mantine/core/TooltipFloating';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}