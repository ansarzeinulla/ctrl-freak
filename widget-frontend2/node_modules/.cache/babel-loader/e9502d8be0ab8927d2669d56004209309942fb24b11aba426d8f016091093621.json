{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport cx from 'clsx';\nimport '../../core/utils/units-converters/rem.mjs';\nimport '@mantine/hooks';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { useModalBaseContext } from './ModalBase.context.mjs';\nimport { useModalTitle } from './use-modal-title-id.mjs';\nimport classes from './ModalBase.module.css.mjs';\nconst ModalBaseTitle = forwardRef(({\n  className,\n  ...others\n}, ref) => {\n  const id = useModalTitle();\n  const ctx = useModalBaseContext();\n  return /* @__PURE__ */jsx(Box, {\n    component: \"h2\",\n    ref,\n    className: cx({\n      [classes.title]: !ctx.unstyled\n    }, className),\n    ...others,\n    id\n  });\n});\nModalBaseTitle.displayName = \"@mantine/core/ModalBaseTitle\";\nexport { ModalBaseTitle };","map":{"version":3,"names":["ModalBaseTitle","forwardRef","className","others","ref","id","useModalTitle","ctx","useModalBaseContext","jsx","Box","component","cx","classes","title","unstyled","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/ModalBase/ModalBaseTitle.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport cx from 'clsx';\nimport { Box, BoxProps, ElementProps } from '../../core';\nimport { useModalBaseContext } from './ModalBase.context';\nimport { useModalTitle } from './use-modal-title-id';\nimport classes from './ModalBase.module.css';\n\nexport interface ModalBaseTitleProps extends BoxProps, ElementProps<'h2'> {}\n\nexport const ModalBaseTitle = forwardRef<HTMLHeadingElement, ModalBaseTitleProps>(\n  ({ className, ...others }, ref) => {\n    const id = useModalTitle();\n    const ctx = useModalBaseContext();\n    return (\n      <Box\n        component=\"h2\"\n        ref={ref}\n        className={cx({ [classes.title]: !ctx.unstyled }, className)}\n        {...others}\n        id={id}\n      />\n    );\n  }\n);\n\nModalBaseTitle.displayName = '@mantine/core/ModalBaseTitle';\n"],"mappings":";;;;;;;;;;;;;;;;;AASO,MAAMA,cAAA,GAAiBC,UAAA,CAC5B,CAAC;EAAEC,SAAA;EAAW,GAAGC;AAAA,GAAUC,GAAA,KAAQ;EACjC,MAAMC,EAAA,GAAKC,aAAA,EAAc;EACzB,MAAMC,GAAA,GAAMC,mBAAA,EAAoB;EAChC,sBACEC,GAAA,CAACC,GAAA;IACCC,SAAA,EAAU;IACVP,GAAA;IACAF,SAAA,EAAWU,EAAA,CAAG;MAAE,CAACC,OAAA,CAAQC,KAAK,GAAG,CAACP,GAAA,CAAIQ;IAAA,CAAS,EAAGb,SAAS;IAC1D,GAAGC,MAAA;IACJE;EAAA,EACF;AAEJ,CACF;AAEAL,cAAA,CAAegB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}