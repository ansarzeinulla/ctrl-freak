{"ast":null,"code":"'use client';\n\nimport { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update.mjs';\nfunction useFocusReturn({\n  opened,\n  shouldReturnFocus = true\n}) {\n  const lastActiveElement = useRef(null);\n  const returnFocus = () => {\n    if (lastActiveElement.current && \"focus\" in lastActiveElement.current && typeof lastActiveElement.current.focus === \"function\") {\n      lastActiveElement.current?.focus({\n        preventScroll: true\n      });\n    }\n  };\n  useDidUpdate(() => {\n    let timeout = -1;\n    const clearFocusTimeout = event => {\n      if (event.key === \"Tab\") {\n        window.clearTimeout(timeout);\n      }\n    };\n    document.addEventListener(\"keydown\", clearFocusTimeout);\n    if (opened) {\n      lastActiveElement.current = document.activeElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, 10);\n    }\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener(\"keydown\", clearFocusTimeout);\n    };\n  }, [opened, shouldReturnFocus]);\n  return returnFocus;\n}\nexport { useFocusReturn };","map":{"version":3,"names":["useFocusReturn","opened","shouldReturnFocus","lastActiveElement","useRef","returnFocus","current","focus","preventScroll","useDidUpdate","timeout","clearFocusTimeout","event","key","window","clearTimeout","document","addEventListener","activeElement","setTimeout","removeEventListener"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-focus-return/use-focus-return.ts"],"sourcesContent":["import { useRef } from 'react';\nimport { useDidUpdate } from '../use-did-update/use-did-update';\n\nexport interface UseFocusReturnOptions {\n  opened: boolean;\n  shouldReturnFocus?: boolean;\n}\n\nexport type UseFocusReturnReturnValue = () => void;\n\nexport function useFocusReturn({\n  opened,\n  shouldReturnFocus = true,\n}: UseFocusReturnOptions): UseFocusReturnReturnValue {\n  const lastActiveElement = useRef<HTMLElement>(null);\n  const returnFocus = () => {\n    if (\n      lastActiveElement.current &&\n      'focus' in lastActiveElement.current &&\n      typeof lastActiveElement.current.focus === 'function'\n    ) {\n      lastActiveElement.current?.focus({ preventScroll: true });\n    }\n  };\n\n  useDidUpdate(() => {\n    let timeout = -1;\n\n    const clearFocusTimeout = (event: KeyboardEvent) => {\n      if (event.key === 'Tab') {\n        window.clearTimeout(timeout);\n      }\n    };\n\n    document.addEventListener('keydown', clearFocusTimeout);\n\n    if (opened) {\n      lastActiveElement.current = document.activeElement as HTMLElement;\n    } else if (shouldReturnFocus) {\n      timeout = window.setTimeout(returnFocus, 10);\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      document.removeEventListener('keydown', clearFocusTimeout);\n    };\n  }, [opened, shouldReturnFocus]);\n\n  return returnFocus;\n}\n"],"mappings":";;;;AAUO,SAASA,eAAe;EAC7BC,MAAA;EACAC,iBAAA,GAAoB;AACtB,GAAqD;EACnD,MAAMC,iBAAA,GAAoBC,MAAA,CAAoB,IAAI;EAClD,MAAMC,WAAA,GAAcA,CAAA,KAAM;IACxB,IACEF,iBAAA,CAAkBG,OAAA,IAClB,WAAWH,iBAAA,CAAkBG,OAAA,IAC7B,OAAOH,iBAAA,CAAkBG,OAAA,CAAQC,KAAA,KAAU,YAC3C;MACAJ,iBAAA,CAAkBG,OAAA,EAASC,KAAA,CAAM;QAAEC,aAAA,EAAe;MAAA,CAAM;IAC1D;EACF;EAEAC,YAAA,CAAa,MAAM;IACjB,IAAIC,OAAA,GAAU;IAEd,MAAMC,iBAAA,GAAqBC,KAAA,IAAyB;MAClD,IAAIA,KAAA,CAAMC,GAAA,KAAQ,OAAO;QACvBC,MAAA,CAAOC,YAAA,CAAaL,OAAO;MAC7B;IACF;IAEAM,QAAA,CAASC,gBAAA,CAAiB,WAAWN,iBAAiB;IAEtD,IAAIV,MAAA,EAAQ;MACVE,iBAAA,CAAkBG,OAAA,GAAUU,QAAA,CAASE,aAAA;IACvC,WAAWhB,iBAAA,EAAmB;MAC5BQ,OAAA,GAAUI,MAAA,CAAOK,UAAA,CAAWd,WAAA,EAAa,EAAE;IAC7C;IAEA,OAAO,MAAM;MACXS,MAAA,CAAOC,YAAA,CAAaL,OAAO;MAC3BM,QAAA,CAASI,mBAAA,CAAoB,WAAWT,iBAAiB;IAC3D;EACF,GAAG,CAACV,MAAA,EAAQC,iBAAiB,CAAC;EAE9B,OAAOG,WAAA;AACT","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}