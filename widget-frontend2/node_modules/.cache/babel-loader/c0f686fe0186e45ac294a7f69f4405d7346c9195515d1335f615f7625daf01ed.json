{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport { getSpacing } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport classes from './Stack.module.css.mjs';\nconst defaultProps = {\n  gap: \"md\",\n  align: \"stretch\",\n  justify: \"flex-start\"\n};\nconst varsResolver = createVarsResolver((_, {\n  gap,\n  align,\n  justify\n}) => ({\n  root: {\n    \"--stack-gap\": getSpacing(gap),\n    \"--stack-align\": align,\n    \"--stack-justify\": justify\n  }\n}));\nconst Stack = factory((_props, ref) => {\n  const props = useProps(\"Stack\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    align,\n    justify,\n    gap,\n    variant,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"Stack\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  return /* @__PURE__ */jsx(Box, {\n    ref,\n    ...getStyles(\"root\"),\n    variant,\n    ...others\n  });\n});\nStack.classes = classes;\nStack.displayName = \"@mantine/core/Stack\";\nexport { Stack };","map":{"version":3,"names":["defaultProps","gap","align","justify","varsResolver","createVarsResolver","_","root","getSpacing","Stack","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","variant","attributes","others","getStyles","useStyles","name","classes","jsx","Box","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/Stack/Stack.tsx"],"sourcesContent":["import {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  factory,\n  Factory,\n  getSpacing,\n  MantineSpacing,\n  StylesApiProps,\n  useProps,\n  useStyles,\n} from '../../core';\nimport classes from './Stack.module.css';\n\nexport type StackStylesNames = 'root';\nexport type StackCssVariables = {\n  root: '--stack-gap' | '--stack-align' | '--stack-justify';\n};\n\nexport interface StackProps extends BoxProps, StylesApiProps<StackFactory>, ElementProps<'div'> {\n  /** Key of `theme.spacing` or any valid CSS value to set `gap` property, numbers are converted to rem @default `'md'` */\n  gap?: MantineSpacing;\n\n  /** Controls `align-items` CSS property @default `'stretch'` */\n  align?: React.CSSProperties['alignItems'];\n\n  /** Controls `justify-content` CSS property @default `'flex-start'` */\n  justify?: React.CSSProperties['justifyContent'];\n}\n\nexport type StackFactory = Factory<{\n  props: StackProps;\n  ref: HTMLDivElement;\n  stylesNames: StackStylesNames;\n  vars: StackCssVariables;\n}>;\n\nconst defaultProps = {\n  gap: 'md',\n  align: 'stretch',\n  justify: 'flex-start',\n} satisfies Partial<StackProps>;\n\nconst varsResolver = createVarsResolver<StackFactory>((_, { gap, align, justify }) => ({\n  root: {\n    '--stack-gap': getSpacing(gap),\n    '--stack-align': align,\n    '--stack-justify': justify,\n  },\n}));\n\nexport const Stack = factory<StackFactory>((_props, ref) => {\n  const props = useProps('Stack', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    align,\n    justify,\n    gap,\n    variant,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<StackFactory>({\n    name: 'Stack',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  return <Box ref={ref} {...getStyles('root')} variant={variant} {...others} />;\n});\n\nStack.classes = classes;\nStack.displayName = '@mantine/core/Stack';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;AAsCA,MAAMA,YAAA,GAAe;EACnBC,GAAA,EAAK;EACLC,KAAA,EAAO;EACPC,OAAA,EAAS;AACX;AAEA,MAAMC,YAAA,GAAeC,kBAAA,CAAiC,CAACC,CAAA,EAAG;EAAEL,GAAA;EAAKC,KAAA;EAAOC;AAAA,CAAQ,MAAO;EACrFI,IAAA,EAAM;IACJ,eAAeC,UAAA,CAAWP,GAAG;IAC7B,iBAAiBC,KAAA;IACjB,mBAAmBC;EAAA;AAEvB,EAAE;AAEK,MAAMM,KAAA,GAAQC,OAAA,CAAsB,CAACC,MAAA,EAAQC,GAAA,KAAQ;EAC1D,MAAMC,KAAA,GAAQC,QAAA,CAAS,SAASd,YAAA,EAAcW,MAAM;EACpD,MAAM;IACJI,UAAA;IACAC,SAAA;IACAC,KAAA;IACAC,MAAA;IACAC,QAAA;IACAC,IAAA;IACAlB,KAAA;IACAC,OAAA;IACAF,GAAA;IACAoB,OAAA;IACAC,UAAA;IACA,GAAGC;EAAA,CACL,GAAIV,KAAA;EAEJ,MAAMW,SAAA,GAAYC,SAAA,CAAwB;IACxCC,IAAA,EAAM;IACNb,KAAA;IACAc,OAAA;IACAX,SAAA;IACAC,KAAA;IACAF,UAAA;IACAG,MAAA;IACAC,QAAA;IACAG,UAAA;IACAF,IAAA;IACAhB;EAAA,CACD;EAED,sBAAOwB,GAAA,CAACC,GAAA;IAAIjB,GAAA;IAAW,GAAGY,SAAA,CAAU,MAAM;IAAGH,OAAA;IAAmB,GAAGE;EAAA,CAAQ;AAC7E,CAAC;AAEDd,KAAA,CAAMkB,OAAA,GAAUA,OAAA;AAChBlB,KAAA,CAAMqB,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}