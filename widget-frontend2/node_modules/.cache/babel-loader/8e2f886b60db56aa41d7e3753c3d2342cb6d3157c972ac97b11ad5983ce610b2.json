{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { forwardRef } from 'react';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport '../../core/utils/units-converters/rem.mjs';\nimport { getDefaultZIndex } from '../../core/utils/get-default-z-index/get-default-z-index.mjs';\nimport { getSpacing, getShadow } from '../../core/utils/get-size/get-size.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport '../Portal/Portal.mjs';\nimport { OptionalPortal } from '../Portal/OptionalPortal.mjs';\nimport { ModalBaseProvider } from './ModalBase.context.mjs';\nimport { useModal } from './use-modal.mjs';\nconst ModalBase = forwardRef(({\n  keepMounted,\n  opened,\n  onClose,\n  id,\n  transitionProps,\n  onExitTransitionEnd,\n  onEnterTransitionEnd,\n  trapFocus,\n  closeOnEscape,\n  returnFocus,\n  closeOnClickOutside,\n  withinPortal,\n  portalProps,\n  lockScroll,\n  children,\n  zIndex,\n  shadow,\n  padding,\n  __vars,\n  unstyled,\n  removeScrollProps,\n  ...others\n}, ref) => {\n  const {\n    _id,\n    titleMounted,\n    bodyMounted,\n    shouldLockScroll,\n    setTitleMounted,\n    setBodyMounted\n  } = useModal({\n    id,\n    transitionProps,\n    opened,\n    trapFocus,\n    closeOnEscape,\n    onClose,\n    returnFocus\n  });\n  const {\n    key: removeScrollKey,\n    ...otherRemoveScrollProps\n  } = removeScrollProps || {};\n  return /* @__PURE__ */jsx(OptionalPortal, {\n    ...portalProps,\n    withinPortal,\n    children: /* @__PURE__ */jsx(ModalBaseProvider, {\n      value: {\n        opened,\n        onClose,\n        closeOnClickOutside,\n        onExitTransitionEnd,\n        onEnterTransitionEnd,\n        transitionProps: {\n          ...transitionProps,\n          keepMounted\n        },\n        getTitleId: () => `${_id}-title`,\n        getBodyId: () => `${_id}-body`,\n        titleMounted,\n        bodyMounted,\n        setTitleMounted,\n        setBodyMounted,\n        trapFocus,\n        closeOnEscape,\n        zIndex,\n        unstyled\n      },\n      children: /* @__PURE__ */jsx(RemoveScroll, {\n        enabled: shouldLockScroll && lockScroll,\n        ...otherRemoveScrollProps,\n        children: /* @__PURE__ */jsx(Box, {\n          ref,\n          ...others,\n          __vars: {\n            ...__vars,\n            \"--mb-z-index\": (zIndex || getDefaultZIndex(\"modal\")).toString(),\n            \"--mb-shadow\": getShadow(shadow),\n            \"--mb-padding\": getSpacing(padding)\n          },\n          children\n        })\n      }, removeScrollKey)\n    })\n  });\n});\nModalBase.displayName = \"@mantine/core/ModalBase\";\nexport { ModalBase };","map":{"version":3,"names":["ModalBase","forwardRef","keepMounted","opened","onClose","id","transitionProps","onExitTransitionEnd","onEnterTransitionEnd","trapFocus","closeOnEscape","returnFocus","closeOnClickOutside","withinPortal","portalProps","lockScroll","children","zIndex","shadow","padding","__vars","unstyled","removeScrollProps","others","ref","_id","titleMounted","bodyMounted","shouldLockScroll","setTitleMounted","setBodyMounted","useModal","key","removeScrollKey","otherRemoveScrollProps","jsx","OptionalPortal","ModalBaseProvider","value","getTitleId","getBodyId","RemoveScroll","enabled","Box","getDefaultZIndex","toString","getShadow","getSpacing","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/ModalBase/ModalBase.tsx"],"sourcesContent":["import { forwardRef } from 'react';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport {\n  Box,\n  BoxProps,\n  ElementProps,\n  getDefaultZIndex,\n  getShadow,\n  getSpacing,\n  MantineShadow,\n  MantineSize,\n  MantineSpacing,\n} from '../../core';\nimport { BasePortalProps, OptionalPortal } from '../Portal';\nimport { TransitionOverride } from '../Transition';\nimport { ModalBaseProvider } from './ModalBase.context';\nimport { useModal } from './use-modal';\n\ntype RemoveScrollProps = Omit<React.ComponentProps<typeof RemoveScroll>, 'children'>;\n\nexport interface ModalBaseProps extends BoxProps, ElementProps<'div', 'title'> {\n  unstyled?: boolean;\n\n  /** If set modal/drawer is not unmounted from the DOM when hidden. `display: none` styles are applied instead. @default `false` */\n  keepMounted?: boolean;\n\n  /** Controls opened state */\n  opened: boolean;\n\n  /** Called when modal/drawer is closed */\n  onClose: () => void;\n\n  /** Id used to connect modal/drawer with body and title */\n  id?: string;\n\n  /** If set, scroll is locked when `opened={true}` @default `true` */\n  lockScroll?: boolean;\n\n  /** If set, focus is trapped within the modal/drawer @default `true` */\n  trapFocus?: boolean;\n\n  /** If set, the component is rendered inside `Portal` @default `true` */\n  withinPortal?: boolean;\n\n  /** Props passed down to the Portal component when `withinPortal` is set */\n  portalProps?: BasePortalProps;\n\n  /** Modal/drawer content */\n  children?: React.ReactNode;\n\n  /** If set, the modal/drawer is closed when user clicks on the overlay @default `true` */\n  closeOnClickOutside?: boolean;\n\n  /** Props added to the `Transition` component that used to animate overlay and body, use to configure duration and animation type, `{ duration: 200, transition: 'fade-down' }` by default */\n  transitionProps?: TransitionOverride;\n\n  /** Called when exit transition ends */\n  onExitTransitionEnd?: () => void;\n\n  /** Called when enter transition ends */\n  onEnterTransitionEnd?: () => void;\n\n  /** If set, `onClose` is called when user presses the escape key @default `true` */\n  closeOnEscape?: boolean;\n\n  /** If set, focus is returned to the last active element when `onClose` is called @default `true` */\n  returnFocus?: boolean;\n\n  /** `z-index` CSS property of the root element @default `200` */\n  zIndex?: string | number;\n\n  /** Key of `theme.shadows` or any valid CSS box-shadow value @default `'xl'` */\n  shadow?: MantineShadow;\n\n  /** Key of `theme.spacing` or any valid CSS value to set content, header and footer padding @default `'md'` */\n  padding?: MantineSpacing;\n\n  /** Controls width of the content area @default `'md'` */\n  size?: MantineSize | (string & {}) | number;\n\n  /** Props passed down to react-remove-scroll, can be used to customize scroll lock behavior */\n  removeScrollProps?: RemoveScrollProps;\n}\n\nexport const ModalBase = forwardRef<HTMLDivElement, ModalBaseProps>(\n  (\n    {\n      keepMounted,\n      opened,\n      onClose,\n      id,\n      transitionProps,\n      onExitTransitionEnd,\n      onEnterTransitionEnd,\n      trapFocus,\n      closeOnEscape,\n      returnFocus,\n      closeOnClickOutside,\n      withinPortal,\n      portalProps,\n      lockScroll,\n      children,\n      zIndex,\n      shadow,\n      padding,\n      __vars,\n      unstyled,\n      removeScrollProps,\n      ...others\n    },\n    ref\n  ) => {\n    const { _id, titleMounted, bodyMounted, shouldLockScroll, setTitleMounted, setBodyMounted } =\n      useModal({ id, transitionProps, opened, trapFocus, closeOnEscape, onClose, returnFocus });\n\n    const { key: removeScrollKey, ...otherRemoveScrollProps } = removeScrollProps || {};\n\n    return (\n      <OptionalPortal {...portalProps} withinPortal={withinPortal}>\n        <ModalBaseProvider\n          value={{\n            opened,\n            onClose,\n            closeOnClickOutside,\n            onExitTransitionEnd,\n            onEnterTransitionEnd,\n            transitionProps: { ...transitionProps, keepMounted },\n            getTitleId: () => `${_id}-title`,\n            getBodyId: () => `${_id}-body`,\n            titleMounted,\n            bodyMounted,\n            setTitleMounted,\n            setBodyMounted,\n            trapFocus,\n            closeOnEscape,\n            zIndex,\n            unstyled,\n          }}\n        >\n          <RemoveScroll\n            enabled={shouldLockScroll && lockScroll}\n            key={removeScrollKey}\n            {...otherRemoveScrollProps}\n          >\n            <Box\n              ref={ref}\n              {...others}\n              __vars={{\n                ...__vars,\n                '--mb-z-index': (zIndex || getDefaultZIndex('modal')).toString(),\n                '--mb-shadow': getShadow(shadow),\n                '--mb-padding': getSpacing(padding),\n              }}\n            >\n              {children}\n            </Box>\n          </RemoveScroll>\n        </ModalBaseProvider>\n      </OptionalPortal>\n    );\n  }\n);\n\nModalBase.displayName = '@mantine/core/ModalBase';\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAoFO,MAAMA,SAAA,GAAYC,UAAA,CACvB,CACE;EACEC,WAAA;EACAC,MAAA;EACAC,OAAA;EACAC,EAAA;EACAC,eAAA;EACAC,mBAAA;EACAC,oBAAA;EACAC,SAAA;EACAC,aAAA;EACAC,WAAA;EACAC,mBAAA;EACAC,YAAA;EACAC,WAAA;EACAC,UAAA;EACAC,QAAA;EACAC,MAAA;EACAC,MAAA;EACAC,OAAA;EACAC,MAAA;EACAC,QAAA;EACAC,iBAAA;EACA,GAAGC;AAAA,GAELC,GAAA,KACG;EACH,MAAM;IAAEC,GAAA;IAAKC,YAAA;IAAcC,WAAA;IAAaC,gBAAA;IAAkBC,eAAA;IAAiBC;EAAA,CAAe,GACxFC,QAAA,CAAS;IAAE1B,EAAA;IAAIC,eAAA;IAAiBH,MAAA;IAAQM,SAAA;IAAWC,aAAA;IAAeN,OAAA;IAASO;EAAA,CAAa;EAE1F,MAAM;IAAEqB,GAAA,EAAKC,eAAA;IAAiB,GAAGC;EAAA,CAAuB,GAAIZ,iBAAA,IAAqB,EAAC;EAElF,sBACEa,GAAA,CAACC,cAAA;IAAgB,GAAGtB,WAAA;IAAaD,YAAA;IAC/BG,QAAA,iBAAAmB,GAAA,CAACE,iBAAA;MACCC,KAAA,EAAO;QACLnC,MAAA;QACAC,OAAA;QACAQ,mBAAA;QACAL,mBAAA;QACAC,oBAAA;QACAF,eAAA,EAAiB;UAAE,GAAGA,eAAA;UAAiBJ;QAAA,CAAY;QACnDqC,UAAA,EAAYA,CAAA,KAAM,GAAGd,GAAG;QACxBe,SAAA,EAAWA,CAAA,KAAM,GAAGf,GAAG;QACvBC,YAAA;QACAC,WAAA;QACAE,eAAA;QACAC,cAAA;QACArB,SAAA;QACAC,aAAA;QACAO,MAAA;QACAI;MAAA,CACF;MAEAL,QAAA,iBAAAmB,GAAA,CAACM,YAAA;QACCC,OAAA,EAASd,gBAAA,IAAoBb,UAAA;QAE5B,GAAGmB,sBAAA;QAEJlB,QAAA,iBAAAmB,GAAA,CAACQ,GAAA;UACCnB,GAAA;UACC,GAAGD,MAAA;UACJH,MAAA,EAAQ;YACN,GAAGA,MAAA;YACH,iBAAiBH,MAAA,IAAU2B,gBAAA,CAAiB,OAAO,GAAGC,QAAA,EAAS;YAC/D,eAAeC,SAAA,CAAU5B,MAAM;YAC/B,gBAAgB6B,UAAA,CAAW5B,OAAO;UAAA,CACpC;UAECH;QAAA;MACH,GAdKiB,eAAA;IAeP;EACF,CACF;AAEJ,CACF;AAEAjC,SAAA,CAAUgD,WAAA,GAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}