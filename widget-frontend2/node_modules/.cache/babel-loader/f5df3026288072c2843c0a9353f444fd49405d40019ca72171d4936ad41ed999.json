{"ast":null,"code":"'use client';\n\nimport { keys } from '../../../../core/utils/keys/keys.mjs';\nimport { rem } from '../../../../core/utils/units-converters/rem.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport { getBreakpointValue } from '../../../../core/utils/get-breakpoint-value/get-breakpoint-value.mjs';\nimport '@mantine/hooks';\nimport 'clsx';\nimport '../../../../core/MantineProvider/Mantine.context.mjs';\nimport '../../../../core/MantineProvider/default-theme.mjs';\nimport '../../../../core/MantineProvider/MantineProvider.mjs';\nimport '../../../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../../../core/Box/Box.mjs';\nimport '../../../../core/DirectionProvider/DirectionProvider.mjs';\nimport { getBaseSize } from '../get-base-size/get-base-size.mjs';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size.mjs';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size.mjs';\nfunction assignAsideVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  aside,\n  theme\n}) {\n  const asideWidth = aside?.width;\n  const collapsedAsideTransform = \"translateX(var(--app-shell-aside-width))\";\n  const collapsedAsideTransformRtl = \"translateX(calc(var(--app-shell-aside-width) * -1))\";\n  if (aside?.breakpoint && !aside?.collapsed?.mobile) {\n    maxMediaStyles[aside?.breakpoint] = maxMediaStyles[aside?.breakpoint] || {};\n    maxMediaStyles[aside?.breakpoint][\"--app-shell-aside-width\"] = \"100%\";\n    maxMediaStyles[aside?.breakpoint][\"--app-shell-aside-offset\"] = \"0px\";\n  }\n  if (isPrimitiveSize(asideWidth)) {\n    const baseSize = rem(getBaseSize(asideWidth));\n    baseStyles[\"--app-shell-aside-width\"] = baseSize;\n    baseStyles[\"--app-shell-aside-offset\"] = baseSize;\n  }\n  if (isResponsiveSize(asideWidth)) {\n    if (typeof asideWidth.base !== \"undefined\") {\n      baseStyles[\"--app-shell-aside-width\"] = rem(asideWidth.base);\n      baseStyles[\"--app-shell-aside-offset\"] = rem(asideWidth.base);\n    }\n    keys(asideWidth).forEach(key => {\n      if (key !== \"base\") {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key][\"--app-shell-aside-width\"] = rem(asideWidth[key]);\n        minMediaStyles[key][\"--app-shell-aside-offset\"] = rem(asideWidth[key]);\n      }\n    });\n  }\n  if (aside?.collapsed?.desktop) {\n    const breakpointValue = aside.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue][\"--app-shell-aside-transform\"] = collapsedAsideTransform;\n    minMediaStyles[breakpointValue][\"--app-shell-aside-transform-rtl\"] = collapsedAsideTransformRtl;\n    minMediaStyles[breakpointValue][\"--app-shell-aside-offset\"] = \"0px !important\";\n  }\n  if (aside?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(aside.breakpoint, theme.breakpoints) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-width\"] = \"100%\";\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-offset\"] = \"0px\";\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-transform\"] = collapsedAsideTransform;\n    maxMediaStyles[breakpointValue][\"--app-shell-aside-transform-rtl\"] = collapsedAsideTransformRtl;\n  }\n}\nexport { assignAsideVariables };","map":{"version":3,"names":["assignAsideVariables","baseStyles","minMediaStyles","maxMediaStyles","aside","theme","asideWidth","width","collapsedAsideTransform","collapsedAsideTransformRtl","breakpoint","collapsed","mobile","isPrimitiveSize","baseSize","rem","getBaseSize","isResponsiveSize","base","keys","forEach","key","desktop","breakpointValue","getBreakpointValue","breakpoints"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/AppShell/AppShellMediaStyles/assign-aside-variables/assign-aside-variables.ts"],"sourcesContent":["import { getBreakpointValue, keys, MantineTheme, rem } from '../../../../core';\nimport type { AppShellProps } from '../../AppShell';\nimport { getBaseSize } from '../get-base-size/get-base-size';\nimport type { CSSVariables, MediaQueryVariables } from '../get-variables/get-variables';\nimport { isPrimitiveSize } from '../is-primitive-size/is-primitive-size';\nimport { isResponsiveSize } from '../is-responsive-size/is-responsive-size';\n\ninterface AssignAsideVariablesInput {\n  baseStyles: CSSVariables;\n  minMediaStyles: MediaQueryVariables;\n  maxMediaStyles: MediaQueryVariables;\n  aside: AppShellProps['aside'] | undefined;\n  theme: MantineTheme;\n}\n\nexport function assignAsideVariables({\n  baseStyles,\n  minMediaStyles,\n  maxMediaStyles,\n  aside,\n  theme,\n}: AssignAsideVariablesInput) {\n  const asideWidth = aside?.width;\n  const collapsedAsideTransform = 'translateX(var(--app-shell-aside-width))';\n  const collapsedAsideTransformRtl = 'translateX(calc(var(--app-shell-aside-width) * -1))';\n\n  if (aside?.breakpoint && !aside?.collapsed?.mobile) {\n    maxMediaStyles[aside?.breakpoint] = maxMediaStyles[aside?.breakpoint] || {};\n    maxMediaStyles[aside?.breakpoint]['--app-shell-aside-width'] = '100%';\n    maxMediaStyles[aside?.breakpoint]['--app-shell-aside-offset'] = '0px';\n  }\n\n  if (isPrimitiveSize(asideWidth)) {\n    const baseSize = rem(getBaseSize(asideWidth));\n    baseStyles['--app-shell-aside-width'] = baseSize;\n    baseStyles['--app-shell-aside-offset'] = baseSize;\n  }\n\n  if (isResponsiveSize(asideWidth)) {\n    if (typeof asideWidth.base !== 'undefined') {\n      baseStyles['--app-shell-aside-width'] = rem(asideWidth.base);\n      baseStyles['--app-shell-aside-offset'] = rem(asideWidth.base);\n    }\n\n    keys(asideWidth).forEach((key) => {\n      if (key !== 'base') {\n        minMediaStyles[key] = minMediaStyles[key] || {};\n        minMediaStyles[key]['--app-shell-aside-width'] = rem(asideWidth![key]);\n        minMediaStyles[key]['--app-shell-aside-offset'] = rem(asideWidth![key]);\n      }\n    });\n  }\n\n  if (aside?.collapsed?.desktop) {\n    const breakpointValue = aside!.breakpoint;\n    minMediaStyles[breakpointValue] = minMediaStyles[breakpointValue] || {};\n    minMediaStyles[breakpointValue]['--app-shell-aside-transform'] = collapsedAsideTransform;\n    minMediaStyles[breakpointValue]['--app-shell-aside-transform-rtl'] = collapsedAsideTransformRtl;\n    minMediaStyles[breakpointValue]['--app-shell-aside-offset'] = '0px !important';\n  }\n\n  if (aside?.collapsed?.mobile) {\n    const breakpointValue = getBreakpointValue(aside!.breakpoint, theme.breakpoints) - 0.1;\n    maxMediaStyles[breakpointValue] = maxMediaStyles[breakpointValue] || {};\n    maxMediaStyles[breakpointValue]['--app-shell-aside-width'] = '100%';\n    maxMediaStyles[breakpointValue]['--app-shell-aside-offset'] = '0px';\n    maxMediaStyles[breakpointValue]['--app-shell-aside-transform'] = collapsedAsideTransform;\n    maxMediaStyles[breakpointValue]['--app-shell-aside-transform-rtl'] = collapsedAsideTransformRtl;\n  }\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAeO,SAASA,qBAAqB;EACnCC,UAAA;EACAC,cAAA;EACAC,cAAA;EACAC,KAAA;EACAC;AACF,GAA8B;EAC5B,MAAMC,UAAA,GAAaF,KAAA,EAAOG,KAAA;EAC1B,MAAMC,uBAAA,GAA0B;EAChC,MAAMC,0BAAA,GAA6B;EAEnC,IAAIL,KAAA,EAAOM,UAAA,IAAc,CAACN,KAAA,EAAOO,SAAA,EAAWC,MAAA,EAAQ;IAClDT,cAAA,CAAeC,KAAA,EAAOM,UAAU,IAAIP,cAAA,CAAeC,KAAA,EAAOM,UAAU,KAAK,EAAC;IAC1EP,cAAA,CAAeC,KAAA,EAAOM,UAAU,EAAE,yBAAyB,IAAI;IAC/DP,cAAA,CAAeC,KAAA,EAAOM,UAAU,EAAE,0BAA0B,IAAI;EAClE;EAEA,IAAIG,eAAA,CAAgBP,UAAU,GAAG;IAC/B,MAAMQ,QAAA,GAAWC,GAAA,CAAIC,WAAA,CAAYV,UAAU,CAAC;IAC5CL,UAAA,CAAW,yBAAyB,IAAIa,QAAA;IACxCb,UAAA,CAAW,0BAA0B,IAAIa,QAAA;EAC3C;EAEA,IAAIG,gBAAA,CAAiBX,UAAU,GAAG;IAChC,IAAI,OAAOA,UAAA,CAAWY,IAAA,KAAS,aAAa;MAC1CjB,UAAA,CAAW,yBAAyB,IAAIc,GAAA,CAAIT,UAAA,CAAWY,IAAI;MAC3DjB,UAAA,CAAW,0BAA0B,IAAIc,GAAA,CAAIT,UAAA,CAAWY,IAAI;IAC9D;IAEAC,IAAA,CAAKb,UAAU,EAAEc,OAAA,CAASC,GAAA,IAAQ;MAChC,IAAIA,GAAA,KAAQ,QAAQ;QAClBnB,cAAA,CAAemB,GAAG,IAAInB,cAAA,CAAemB,GAAG,KAAK,EAAC;QAC9CnB,cAAA,CAAemB,GAAG,EAAE,yBAAyB,IAAIN,GAAA,CAAIT,UAAA,CAAYe,GAAG,CAAC;QACrEnB,cAAA,CAAemB,GAAG,EAAE,0BAA0B,IAAIN,GAAA,CAAIT,UAAA,CAAYe,GAAG,CAAC;MACxE;IACF,CAAC;EACH;EAEA,IAAIjB,KAAA,EAAOO,SAAA,EAAWW,OAAA,EAAS;IAC7B,MAAMC,eAAA,GAAkBnB,KAAA,CAAOM,UAAA;IAC/BR,cAAA,CAAeqB,eAAe,IAAIrB,cAAA,CAAeqB,eAAe,KAAK,EAAC;IACtErB,cAAA,CAAeqB,eAAe,EAAE,6BAA6B,IAAIf,uBAAA;IACjEN,cAAA,CAAeqB,eAAe,EAAE,iCAAiC,IAAId,0BAAA;IACrEP,cAAA,CAAeqB,eAAe,EAAE,0BAA0B,IAAI;EAChE;EAEA,IAAInB,KAAA,EAAOO,SAAA,EAAWC,MAAA,EAAQ;IAC5B,MAAMW,eAAA,GAAkBC,kBAAA,CAAmBpB,KAAA,CAAOM,UAAA,EAAYL,KAAA,CAAMoB,WAAW,IAAI;IACnFtB,cAAA,CAAeoB,eAAe,IAAIpB,cAAA,CAAeoB,eAAe,KAAK,EAAC;IACtEpB,cAAA,CAAeoB,eAAe,EAAE,yBAAyB,IAAI;IAC7DpB,cAAA,CAAeoB,eAAe,EAAE,0BAA0B,IAAI;IAC9DpB,cAAA,CAAeoB,eAAe,EAAE,6BAA6B,IAAIf,uBAAA;IACjEL,cAAA,CAAeoB,eAAe,EAAE,iCAAiC,IAAId,0BAAA;EACvE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}