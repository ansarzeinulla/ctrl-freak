{"ast":null,"code":"'use client';\n\nimport { useState } from 'react';\nfunction useUncontrolled({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {}\n}) {\n  const [uncontrolledValue, setUncontrolledValue] = useState(defaultValue !== void 0 ? defaultValue : finalValue);\n  const handleUncontrolledChange = (val, ...payload) => {\n    setUncontrolledValue(val);\n    onChange?.(val, ...payload);\n  };\n  if (value !== void 0) {\n    return [value, onChange, true];\n  }\n  return [uncontrolledValue, handleUncontrolledChange, false];\n}\nexport { useUncontrolled };","map":{"version":3,"names":["useUncontrolled","value","defaultValue","finalValue","onChange","uncontrolledValue","setUncontrolledValue","useState","handleUncontrolledChange","val","payload"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-uncontrolled/use-uncontrolled.ts"],"sourcesContent":["import { useState } from 'react';\n\nexport interface UseUncontrolledOptions<T> {\n  /** Value for controlled state */\n  value?: T;\n\n  /** Initial value for uncontrolled state */\n  defaultValue?: T;\n\n  /** Final value for uncontrolled state when value and defaultValue are not provided */\n  finalValue?: T;\n\n  /** Controlled state onChange handler */\n  onChange?: (value: T, ...payload: any[]) => void;\n}\n\nexport type UseUncontrolledReturnValue<T> = [\n  /** Current value */\n  T,\n\n  /** Handler to update the state, passes `value` and `payload` to `onChange` */\n  (value: T, ...payload: any[]) => void,\n\n  /** True if the state is controlled, false if uncontrolled */\n  boolean,\n];\n\nexport function useUncontrolled<T>({\n  value,\n  defaultValue,\n  finalValue,\n  onChange = () => {},\n}: UseUncontrolledOptions<T>): UseUncontrolledReturnValue<T> {\n  const [uncontrolledValue, setUncontrolledValue] = useState(\n    defaultValue !== undefined ? defaultValue : finalValue\n  );\n\n  const handleUncontrolledChange = (val: T, ...payload: any[]) => {\n    setUncontrolledValue(val);\n    onChange?.(val, ...payload);\n  };\n\n  if (value !== undefined) {\n    return [value as T, onChange, true];\n  }\n\n  return [uncontrolledValue as T, handleUncontrolledChange, false];\n}\n"],"mappings":";;;AA2BO,SAASA,gBAAmB;EACjCC,KAAA;EACAC,YAAA;EACAC,UAAA;EACAC,QAAA,GAAWA,CAAA,KAAM,CAAC;AACpB,GAA6D;EAC3D,MAAM,CAACC,iBAAA,EAAmBC,oBAAoB,IAAIC,QAAA,CAChDL,YAAA,KAAiB,SAAYA,YAAA,GAAeC,UAAA,CAC9C;EAEA,MAAMK,wBAAA,GAA2BA,CAACC,GAAA,KAAWC,OAAA,KAAmB;IAC9DJ,oBAAA,CAAqBG,GAAG;IACxBL,QAAA,GAAWK,GAAA,EAAK,GAAGC,OAAO;EAC5B;EAEA,IAAIT,KAAA,KAAU,QAAW;IACvB,OAAO,CAACA,KAAA,EAAYG,QAAA,EAAU,IAAI;EACpC;EAEA,OAAO,CAACC,iBAAA,EAAwBG,wBAAA,EAA0B,KAAK;AACjE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}