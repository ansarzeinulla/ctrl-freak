{"ast":null,"code":"'use client';\n\nimport _objectSpread from \"/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { keys } from '../../../utils/keys/keys.mjs';\nimport '../../../utils/units-converters/rem.mjs';\nimport 'react';\nimport 'react/jsx-runtime';\nimport '@mantine/hooks';\nimport { resolvers } from '../resolvers/index.mjs';\nimport { sortMediaQueries } from './sort-media-queries.mjs';\nfunction hasResponsiveStyles(styleProp) {\n  if (typeof styleProp !== \"object\" || styleProp === null) {\n    return false;\n  }\n  const breakpoints = Object.keys(styleProp);\n  if (breakpoints.length === 1 && breakpoints[0] === \"base\") {\n    return false;\n  }\n  return true;\n}\nfunction getBaseValue(value) {\n  if (typeof value === \"object\" && value !== null) {\n    if (\"base\" in value) {\n      return value.base;\n    }\n    return void 0;\n  }\n  return value;\n}\nfunction getBreakpointKeys(value) {\n  if (typeof value === \"object\" && value !== null) {\n    return keys(value).filter(key => key !== \"base\");\n  }\n  return [];\n}\nfunction getBreakpointValue(value, breakpoint) {\n  if (typeof value === \"object\" && value !== null && breakpoint in value) {\n    return value[breakpoint];\n  }\n  return value;\n}\nfunction parseStyleProps(_ref) {\n  let {\n    styleProps,\n    data,\n    theme\n  } = _ref;\n  return sortMediaQueries(keys(styleProps).reduce((acc, styleProp) => {\n    if (styleProp === \"hiddenFrom\" || styleProp === \"visibleFrom\" || styleProp === \"sx\") {\n      return acc;\n    }\n    const propertyData = data[styleProp];\n    const properties = Array.isArray(propertyData.property) ? propertyData.property : [propertyData.property];\n    const baseValue = getBaseValue(styleProps[styleProp]);\n    if (!hasResponsiveStyles(styleProps[styleProp])) {\n      properties.forEach(property => {\n        acc.inlineStyles[property] = resolvers[propertyData.type](baseValue, theme);\n      });\n      return acc;\n    }\n    acc.hasResponsiveStyles = true;\n    const breakpoints = getBreakpointKeys(styleProps[styleProp]);\n    properties.forEach(property => {\n      if (baseValue != null) {\n        acc.styles[property] = resolvers[propertyData.type](baseValue, theme);\n      }\n      breakpoints.forEach(breakpoint => {\n        const bp = \"(min-width: \".concat(theme.breakpoints[breakpoint], \")\");\n        acc.media[bp] = _objectSpread(_objectSpread({}, acc.media[bp]), {}, {\n          [property]: resolvers[propertyData.type](getBreakpointValue(styleProps[styleProp], breakpoint), theme)\n        });\n      });\n    });\n    return acc;\n  }, {\n    hasResponsiveStyles: false,\n    styles: {},\n    inlineStyles: {},\n    media: {}\n  }));\n}\nexport { parseStyleProps };","map":{"version":3,"names":["hasResponsiveStyles","styleProp","breakpoints","Object","keys","length","getBaseValue","value","base","getBreakpointKeys","filter","key","getBreakpointValue","breakpoint","parseStyleProps","_ref","styleProps","data","theme","sortMediaQueries","reduce","acc","propertyData","properties","Array","isArray","property","baseValue","forEach","inlineStyles","resolvers","type","styles","bp","concat","media","_objectSpread"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/core/Box/style-props/parse-style-props/parse-style-props.ts"],"sourcesContent":["import { MantineTheme } from '../../../MantineProvider';\nimport { keys } from '../../../utils';\nimport { resolvers } from '../resolvers';\nimport type { SystemPropData } from '../style-props-data';\nimport type { StyleProp } from '../style-props.types';\nimport { sortMediaQueries, SortMediaQueriesResult } from './sort-media-queries';\n\nfunction hasResponsiveStyles(styleProp: StyleProp<unknown>) {\n  if (typeof styleProp !== 'object' || styleProp === null) {\n    return false;\n  }\n\n  const breakpoints = Object.keys(styleProp);\n\n  if (breakpoints.length === 1 && breakpoints[0] === 'base') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction getBaseValue(value: StyleProp<unknown>) {\n  if (typeof value === 'object' && value !== null) {\n    if ('base' in value) {\n      return value.base;\n    }\n\n    return undefined;\n  }\n\n  return value;\n}\n\nfunction getBreakpointKeys(value: StyleProp<unknown>) {\n  if (typeof value === 'object' && value !== null) {\n    return keys(value).filter((key) => key !== 'base');\n  }\n\n  return [];\n}\n\nfunction getBreakpointValue(value: StyleProp<unknown>, breakpoint: string) {\n  if (typeof value === 'object' && value !== null && breakpoint in value) {\n    return value[breakpoint as keyof typeof value];\n  }\n\n  return value;\n}\n\ninterface ParseStylePropsOptions {\n  styleProps: Record<string, StyleProp<any>>;\n  theme: MantineTheme;\n  data: Record<string, SystemPropData>;\n}\n\nexport interface ParseStylePropsResult {\n  hasResponsiveStyles: boolean;\n  inlineStyles: React.CSSProperties;\n  styles: React.CSSProperties;\n  media: Record<string, React.CSSProperties>;\n}\n\nexport function parseStyleProps({\n  styleProps,\n  data,\n  theme,\n}: ParseStylePropsOptions): SortMediaQueriesResult {\n  return sortMediaQueries(\n    keys(styleProps).reduce<{\n      hasResponsiveStyles: boolean;\n      inlineStyles: Record<string, unknown>;\n      styles: Record<string, unknown>;\n      media: Record<string, Record<string, unknown>>;\n    }>(\n      (acc, styleProp) => {\n        if (\n          (styleProp as string) === 'hiddenFrom' ||\n          (styleProp as string) === 'visibleFrom' ||\n          (styleProp as string) === 'sx'\n        ) {\n          return acc;\n        }\n\n        const propertyData = data[styleProp];\n        const properties = Array.isArray(propertyData.property)\n          ? propertyData.property\n          : [propertyData.property];\n        const baseValue = getBaseValue(styleProps[styleProp]);\n\n        if (!hasResponsiveStyles(styleProps[styleProp])) {\n          properties.forEach((property) => {\n            acc.inlineStyles[property] = resolvers[propertyData.type](baseValue, theme);\n          });\n\n          return acc;\n        }\n\n        acc.hasResponsiveStyles = true;\n\n        const breakpoints = getBreakpointKeys(styleProps[styleProp]);\n\n        properties.forEach((property) => {\n          if (baseValue != null) {\n            acc.styles[property] = resolvers[propertyData.type](baseValue, theme);\n          }\n\n          breakpoints.forEach((breakpoint) => {\n            const bp = `(min-width: ${theme.breakpoints[breakpoint]})`;\n            acc.media[bp] = {\n              ...acc.media[bp],\n              [property]: resolvers[propertyData.type](\n                getBreakpointValue(styleProps[styleProp], breakpoint),\n                theme\n              ),\n            };\n          });\n        });\n\n        return acc;\n      },\n      {\n        hasResponsiveStyles: false,\n        styles: {},\n        inlineStyles: {},\n        media: {},\n      }\n    )\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}