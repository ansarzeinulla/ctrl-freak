{"ast":null,"code":"import { toRgba } from '../to-rgba/to-rgba.mjs';\nfunction gammaCorrect(c) {\n  return c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4;\n}\nfunction getLightnessFromOklch(oklchColor) {\n  const match = oklchColor.match(/oklch\\((.*?)%\\s/);\n  return match ? parseFloat(match[1]) : null;\n}\nfunction luminance(color) {\n  if (color.startsWith(\"oklch(\")) {\n    return (getLightnessFromOklch(color) || 0) / 100;\n  }\n  const {\n    r,\n    g,\n    b\n  } = toRgba(color);\n  const sR = r / 255;\n  const sG = g / 255;\n  const sB = b / 255;\n  const rLinear = gammaCorrect(sR);\n  const gLinear = gammaCorrect(sG);\n  const bLinear = gammaCorrect(sB);\n  return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear;\n}\nfunction isLightColor(color, luminanceThreshold = 0.179) {\n  if (color.startsWith(\"var(\")) {\n    return false;\n  }\n  return luminance(color) > luminanceThreshold;\n}\nexport { isLightColor, luminance };","map":{"version":3,"names":["gammaCorrect","c","getLightnessFromOklch","oklchColor","match","parseFloat","luminance","color","startsWith","r","g","b","toRgba","sR","sG","sB","rLinear","gLinear","bLinear","isLightColor","luminanceThreshold"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/core/MantineProvider/color-functions/luminance/luminance.ts"],"sourcesContent":["import { toRgba } from '../to-rgba/to-rgba';\n\nfunction gammaCorrect(c: number) {\n  return c <= 0.03928 ? c / 12.92 : ((c + 0.055) / 1.055) ** 2.4;\n}\n\nfunction getLightnessFromOklch(oklchColor: string) {\n  const match = oklchColor.match(/oklch\\((.*?)%\\s/);\n  return match ? parseFloat(match[1]) : null;\n}\n\nexport function luminance(color: string): number {\n  if (color.startsWith('oklch(')) {\n    return (getLightnessFromOklch(color) || 0) / 100;\n  }\n\n  const { r, g, b } = toRgba(color);\n\n  const sR = r / 255;\n  const sG = g / 255;\n  const sB = b / 255;\n\n  const rLinear = gammaCorrect(sR);\n  const gLinear = gammaCorrect(sG);\n  const bLinear = gammaCorrect(sB);\n\n  return 0.2126 * rLinear + 0.7152 * gLinear + 0.0722 * bLinear;\n}\n\nexport function isLightColor(color: string, luminanceThreshold = 0.179) {\n  if (color.startsWith('var(')) {\n    return false;\n  }\n\n  return luminance(color) > luminanceThreshold;\n}\n"],"mappings":";AAEA,SAASA,aAAaC,CAAA,EAAW;EAC/B,OAAOA,CAAA,IAAK,UAAUA,CAAA,GAAI,UAAUA,CAAA,GAAI,SAAS,UAAU;AAC7D;AAEA,SAASC,sBAAsBC,UAAA,EAAoB;EACjD,MAAMC,KAAA,GAAQD,UAAA,CAAWC,KAAA,CAAM,iBAAiB;EAChD,OAAOA,KAAA,GAAQC,UAAA,CAAWD,KAAA,CAAM,CAAC,CAAC,IAAI;AACxC;AAEO,SAASE,UAAUC,KAAA,EAAuB;EAC/C,IAAIA,KAAA,CAAMC,UAAA,CAAW,QAAQ,GAAG;IAC9B,QAAQN,qBAAA,CAAsBK,KAAK,KAAK,KAAK;EAC/C;EAEA,MAAM;IAAEE,CAAA;IAAGC,CAAA;IAAGC;EAAA,CAAE,GAAIC,MAAA,CAAOL,KAAK;EAEhC,MAAMM,EAAA,GAAKJ,CAAA,GAAI;EACf,MAAMK,EAAA,GAAKJ,CAAA,GAAI;EACf,MAAMK,EAAA,GAAKJ,CAAA,GAAI;EAEf,MAAMK,OAAA,GAAUhB,YAAA,CAAaa,EAAE;EAC/B,MAAMI,OAAA,GAAUjB,YAAA,CAAac,EAAE;EAC/B,MAAMI,OAAA,GAAUlB,YAAA,CAAae,EAAE;EAE/B,OAAO,SAASC,OAAA,GAAU,SAASC,OAAA,GAAU,SAASC,OAAA;AACxD;AAEO,SAASC,aAAaZ,KAAA,EAAea,kBAAA,GAAqB,OAAO;EACtE,IAAIb,KAAA,CAAMC,UAAA,CAAW,MAAM,GAAG;IAC5B,OAAO;EACT;EAEA,OAAOF,SAAA,CAAUC,KAAK,IAAIa,kBAAA;AAC5B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}