{"ast":null,"code":"'use client';\n\nimport { useState, useRef, useCallback, useEffect } from 'react';\nfunction useFetch(url, {\n  autoInvoke = true,\n  ...options\n} = {}) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const controller = useRef(null);\n  const refetch = useCallback(() => {\n    if (controller.current) {\n      controller.current.abort();\n    }\n    controller.current = new AbortController();\n    setLoading(true);\n    return fetch(url, {\n      signal: controller.current.signal,\n      ...options\n    }).then(res => res.json()).then(res => {\n      setData(res);\n      setLoading(false);\n      return res;\n    }).catch(err => {\n      setLoading(false);\n      if (err.name !== \"AbortError\") {\n        setError(err);\n      }\n      return err;\n    });\n  }, [url]);\n  const abort = useCallback(() => {\n    if (controller.current) {\n      controller.current?.abort(\"\");\n    }\n  }, []);\n  useEffect(() => {\n    if (autoInvoke) {\n      refetch();\n    }\n    return () => {\n      if (controller.current) {\n        controller.current.abort(\"\");\n      }\n    };\n  }, [refetch, autoInvoke]);\n  return {\n    data,\n    loading,\n    error,\n    refetch,\n    abort\n  };\n}\nexport { useFetch };","map":{"version":3,"names":["useFetch","url","autoInvoke","options","data","setData","useState","loading","setLoading","error","setError","controller","useRef","refetch","useCallback","current","abort","AbortController","fetch","signal","then","res","json","catch","err","name","useEffect"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/hooks/src/use-fetch/use-fetch.ts"],"sourcesContent":["import { useCallback, useEffect, useRef, useState } from 'react';\n\nexport interface UseFetchOptions extends RequestInit {\n  autoInvoke?: boolean;\n}\n\nexport interface UseFetchReturnValue<T> {\n  data: T | null;\n  loading: boolean;\n  error: Error | null;\n  refetch: () => Promise<any>;\n  abort: () => void;\n}\n\nexport function useFetch<T>(\n  url: string,\n  { autoInvoke = true, ...options }: UseFetchOptions = {}\n): UseFetchReturnValue<T> {\n  const [data, setData] = useState<T | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<Error | null>(null);\n  const controller = useRef<AbortController | null>(null);\n\n  const refetch = useCallback(() => {\n    if (controller.current) {\n      controller.current.abort();\n    }\n\n    controller.current = new AbortController();\n\n    setLoading(true);\n\n    return fetch(url, { signal: controller.current.signal, ...options })\n      .then((res) => res.json())\n      .then((res) => {\n        setData(res);\n        setLoading(false);\n        return res as T;\n      })\n      .catch((err) => {\n        setLoading(false);\n\n        if (err.name !== 'AbortError') {\n          setError(err);\n        }\n\n        return err;\n      });\n  }, [url]);\n\n  const abort = useCallback(() => {\n    if (controller.current) {\n      controller.current?.abort('');\n    }\n  }, []);\n\n  useEffect(() => {\n    if (autoInvoke) {\n      refetch();\n    }\n\n    return () => {\n      if (controller.current) {\n        controller.current.abort('');\n      }\n    };\n  }, [refetch, autoInvoke]);\n\n  return { data, loading, error, refetch, abort };\n}\n"],"mappings":";;;AAcO,SAASA,SACdC,GAAA,EACA;EAAEC,UAAA,GAAa;EAAM,GAAGC;AAAA,CAAQ,GAAqB,EAAC,EAC9B;EACxB,MAAM,CAACC,IAAA,EAAMC,OAAO,IAAIC,QAAA,CAAmB,IAAI;EAC/C,MAAM,CAACC,OAAA,EAASC,UAAU,IAAIF,QAAA,CAAS,KAAK;EAC5C,MAAM,CAACG,KAAA,EAAOC,QAAQ,IAAIJ,QAAA,CAAuB,IAAI;EACrD,MAAMK,UAAA,GAAaC,MAAA,CAA+B,IAAI;EAEtD,MAAMC,OAAA,GAAUC,WAAA,CAAY,MAAM;IAChC,IAAIH,UAAA,CAAWI,OAAA,EAAS;MACtBJ,UAAA,CAAWI,OAAA,CAAQC,KAAA,EAAM;IAC3B;IAEAL,UAAA,CAAWI,OAAA,GAAU,IAAIE,eAAA,EAAgB;IAEzCT,UAAA,CAAW,IAAI;IAEf,OAAOU,KAAA,CAAMjB,GAAA,EAAK;MAAEkB,MAAA,EAAQR,UAAA,CAAWI,OAAA,CAAQI,MAAA;MAAQ,GAAGhB;IAAA,CAAS,EAChEiB,IAAA,CAAMC,GAAA,IAAQA,GAAA,CAAIC,IAAA,EAAM,EACxBF,IAAA,CAAMC,GAAA,IAAQ;MACbhB,OAAA,CAAQgB,GAAG;MACXb,UAAA,CAAW,KAAK;MAChB,OAAOa,GAAA;IACT,CAAC,EACAE,KAAA,CAAOC,GAAA,IAAQ;MACdhB,UAAA,CAAW,KAAK;MAEhB,IAAIgB,GAAA,CAAIC,IAAA,KAAS,cAAc;QAC7Bf,QAAA,CAASc,GAAG;MACd;MAEA,OAAOA,GAAA;IACT,CAAC;EACL,GAAG,CAACvB,GAAG,CAAC;EAER,MAAMe,KAAA,GAAQF,WAAA,CAAY,MAAM;IAC9B,IAAIH,UAAA,CAAWI,OAAA,EAAS;MACtBJ,UAAA,CAAWI,OAAA,EAASC,KAAA,CAAM,EAAE;IAC9B;EACF,GAAG,EAAE;EAELU,SAAA,CAAU,MAAM;IACd,IAAIxB,UAAA,EAAY;MACdW,OAAA,EAAQ;IACV;IAEA,OAAO,MAAM;MACX,IAAIF,UAAA,CAAWI,OAAA,EAAS;QACtBJ,UAAA,CAAWI,OAAA,CAAQC,KAAA,CAAM,EAAE;MAC7B;IACF;EACF,GAAG,CAACH,OAAA,EAASX,UAAU,CAAC;EAExB,OAAO;IAAEE,IAAA;IAAMG,OAAA;IAASE,KAAA;IAAOI,OAAA;IAASG;EAAA,CAAM;AAChD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}