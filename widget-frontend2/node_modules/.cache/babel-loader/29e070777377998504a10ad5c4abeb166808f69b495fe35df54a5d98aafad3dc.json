{"ast":null,"code":"'use client';\n\nimport { jsx, jsxs } from 'react/jsx-runtime';\nimport { useState, createElement } from 'react';\nimport { useMounted, randomId, useUncontrolled, useId, useMergedRef, useShallowEffect } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport { getFontSize, getSize, getRadius } from '../../core/utils/get-size/get-size.mjs';\nimport { createVarsResolver } from '../../core/styles-api/create-vars-resolver/create-vars-resolver.mjs';\nimport 'clsx';\nimport { getThemeColor } from '../../core/MantineProvider/color-functions/get-theme-color/get-theme-color.mjs';\nimport { getContrastColor } from '../../core/MantineProvider/color-functions/get-contrast-color/get-contrast-color.mjs';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport { useMantineTheme } from '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport { useProps } from '../../core/MantineProvider/use-props/use-props.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport { useStyles } from '../../core/styles-api/use-styles/use-styles.mjs';\nimport { Box } from '../../core/Box/Box.mjs';\nimport { factory } from '../../core/factory/factory.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { FloatingIndicator } from '../FloatingIndicator/FloatingIndicator.mjs';\nimport classes from './SegmentedControl.module.css.mjs';\nconst defaultProps = {\n  withItemsBorders: true\n};\nconst varsResolver = createVarsResolver((theme, {\n  radius,\n  color,\n  transitionDuration,\n  size,\n  transitionTimingFunction\n}) => ({\n  root: {\n    \"--sc-radius\": radius === void 0 ? void 0 : getRadius(radius),\n    \"--sc-color\": color ? getThemeColor(color, theme) : void 0,\n    \"--sc-shadow\": color ? void 0 : \"var(--mantine-shadow-xs)\",\n    \"--sc-transition-duration\": transitionDuration === void 0 ? void 0 : `${transitionDuration}ms`,\n    \"--sc-transition-timing-function\": transitionTimingFunction,\n    \"--sc-padding\": getSize(size, \"sc-padding\"),\n    \"--sc-font-size\": getFontSize(size)\n  }\n}));\nconst SegmentedControl = factory((_props, ref) => {\n  const props = useProps(\"SegmentedControl\", defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    data,\n    value,\n    defaultValue,\n    onChange,\n    size,\n    name,\n    disabled,\n    readOnly,\n    fullWidth,\n    orientation,\n    radius,\n    color,\n    transitionDuration,\n    transitionTimingFunction,\n    variant,\n    autoContrast,\n    withItemsBorders,\n    mod,\n    attributes,\n    ...others\n  } = props;\n  const getStyles = useStyles({\n    name: \"SegmentedControl\",\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver\n  });\n  const theme = useMantineTheme();\n  const _data = data.map(item => typeof item === \"string\" ? {\n    label: item,\n    value: item\n  } : item);\n  const initialized = useMounted();\n  const [key, setKey] = useState(randomId());\n  const [parent, setParent] = useState(null);\n  const [refs, setRefs] = useState({});\n  const setElementRef = (element, val) => {\n    refs[val] = element;\n    setRefs(refs);\n  };\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data) ? _data.find(item => !item.disabled)?.value ?? data[0]?.value ?? null : null,\n    onChange\n  });\n  const uuid = useId(name);\n  const controls = _data.map(item => /* @__PURE__ */createElement(Box, {\n    ...getStyles(\"control\"),\n    mod: {\n      active: _value === item.value,\n      orientation\n    },\n    key: item.value\n  }, /* @__PURE__ */createElement(\"input\", {\n    ...getStyles(\"input\"),\n    disabled: disabled || item.disabled,\n    type: \"radio\",\n    name: uuid,\n    value: item.value,\n    id: `${uuid}-${item.value}`,\n    checked: _value === item.value,\n    onChange: () => !readOnly && handleValueChange(item.value),\n    \"data-focus-ring\": theme.focusRing,\n    key: `${item.value}-input`\n  }), /* @__PURE__ */createElement(Box, {\n    component: \"label\",\n    ...getStyles(\"label\"),\n    mod: {\n      active: _value === item.value && !(disabled || item.disabled),\n      disabled: disabled || item.disabled,\n      \"read-only\": readOnly\n    },\n    htmlFor: `${uuid}-${item.value}`,\n    ref: node => setElementRef(node, item.value),\n    __vars: {\n      \"--sc-label-color\": color !== void 0 ? getContrastColor({\n        color,\n        theme,\n        autoContrast\n      }) : void 0\n    },\n    key: `${item.value}-label`\n  }, /* @__PURE__ */jsx(\"span\", {\n    ...getStyles(\"innerLabel\"),\n    children: item.label\n  }))));\n  const mergedRef = useMergedRef(ref, node => setParent(node));\n  useShallowEffect(() => {\n    setKey(randomId());\n  }, [data.length]);\n  if (data.length === 0) {\n    return null;\n  }\n  return /* @__PURE__ */jsxs(Box, {\n    ...getStyles(\"root\"),\n    variant,\n    size,\n    ref: mergedRef,\n    mod: [{\n      \"full-width\": fullWidth,\n      orientation,\n      initialized,\n      \"with-items-borders\": withItemsBorders\n    }, mod],\n    ...others,\n    role: \"radiogroup\",\n    \"data-disabled\": disabled,\n    children: [typeof _value === \"string\" && /* @__PURE__ */jsx(FloatingIndicator, {\n      target: refs[_value],\n      parent,\n      component: \"span\",\n      transitionDuration: \"var(--sc-transition-duration)\",\n      ...getStyles(\"indicator\")\n    }, key), controls]\n  });\n});\nSegmentedControl.classes = classes;\nSegmentedControl.displayName = \"@mantine/core/SegmentedControl\";\nexport { SegmentedControl };","map":{"version":3,"names":["defaultProps","withItemsBorders","varsResolver","createVarsResolver","theme","radius","color","transitionDuration","size","transitionTimingFunction","root","getRadius","getThemeColor","getSize","getFontSize","SegmentedControl","factory","_props","ref","props","useProps","classNames","className","style","styles","unstyled","vars","data","value","defaultValue","onChange","name","disabled","readOnly","fullWidth","orientation","variant","autoContrast","mod","attributes","others","getStyles","useStyles","classes","useMantineTheme","_data","map","item","label","initialized","useMounted","key","setKey","useState","randomId","parent","setParent","refs","setRefs","setElementRef","element","val","_value","handleValueChange","useUncontrolled","finalValue","Array","isArray","find","uuid","useId","controls","createElement","Box","active","type","id","checked","focusRing","component","htmlFor","node","__vars","getContrastColor","jsx","children","mergedRef","useMergedRef","useShallowEffect","length","jsxs","role","FloatingIndicator","target","displayName"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/SegmentedControl/SegmentedControl.tsx"],"sourcesContent":["import { useState } from 'react';\nimport {\n  randomId,\n  useId,\n  useMergedRef,\n  useMounted,\n  useShallowEffect,\n  useUncontrolled,\n} from '@mantine/hooks';\nimport {\n  Box,\n  BoxProps,\n  createVarsResolver,\n  ElementProps,\n  Factory,\n  factory,\n  getContrastColor,\n  getFontSize,\n  getRadius,\n  getSize,\n  getThemeColor,\n  MantineColor,\n  MantineRadius,\n  MantineSize,\n  StylesApiProps,\n  useMantineTheme,\n  useProps,\n  useStyles,\n} from '../../core';\nimport { FloatingIndicator } from '../FloatingIndicator';\nimport classes from './SegmentedControl.module.css';\n\nexport type SegmentedControlStylesNames =\n  | 'root'\n  | 'input'\n  | 'label'\n  | 'control'\n  | 'indicator'\n  | 'innerLabel';\nexport type SegmentedControlCssVariables = {\n  root:\n    | '--sc-radius'\n    | '--sc-color'\n    | '--sc-font-size'\n    | '--sc-padding'\n    | '--sc-shadow'\n    | '--sc-transition-duration'\n    | '--sc-transition-timing-function';\n};\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n  disabled?: boolean;\n}\n\nexport interface SegmentedControlProps\n  extends BoxProps,\n    StylesApiProps<SegmentedControlFactory>,\n    ElementProps<'div', 'onChange'> {\n  /** Data based on which controls are rendered */\n  data: (string | SegmentedControlItem)[];\n\n  /** Controlled component value */\n  value?: string;\n\n  /** Uncontrolled component default value */\n  defaultValue?: string;\n\n  /** Called when value changes */\n  onChange?: (value: string) => void;\n\n  /** Determines whether the component is disabled */\n  disabled?: boolean;\n\n  /** Name of the radio group, by default random name is generated */\n  name?: string;\n\n  /** Determines whether the component should take 100% width of its parent @default `false` */\n  fullWidth?: boolean;\n\n  /** Key of `theme.colors` or any valid CSS color, changes color of indicator, by default color is based on current color scheme */\n  color?: MantineColor;\n\n  /** Controls `font-size`, `padding` and `height` properties @default `'sm'` */\n  size?: MantineSize | (string & {});\n\n  /** Key of `theme.radius` or any valid CSS value to set `border-radius`, numbers are converted to rem @default `theme.defaultRadius` */\n  radius?: MantineRadius;\n\n  /** Indicator `transition-duration` in ms, set `0` to turn off transitions @default `200` */\n  transitionDuration?: number;\n\n  /** Indicator `transition-timing-function` property @default `ease` */\n  transitionTimingFunction?: string;\n\n  /** Component orientation @default `'horizontal'` */\n  orientation?: 'vertical' | 'horizontal';\n\n  /** If set to `false`, prevents changing the value */\n  readOnly?: boolean;\n\n  /** If set, adjusts text color based on background color for `filled` variant */\n  autoContrast?: boolean;\n\n  /** Determines whether there should be borders between items @default `true` */\n  withItemsBorders?: boolean;\n}\n\nexport type SegmentedControlFactory = Factory<{\n  props: SegmentedControlProps;\n  ref: HTMLDivElement;\n  stylesNames: SegmentedControlStylesNames;\n  vars: SegmentedControlCssVariables;\n}>;\n\nconst defaultProps = {\n  withItemsBorders: true,\n} satisfies Partial<SegmentedControlProps>;\n\nconst varsResolver = createVarsResolver<SegmentedControlFactory>(\n  (theme, { radius, color, transitionDuration, size, transitionTimingFunction }) => ({\n    root: {\n      '--sc-radius': radius === undefined ? undefined : getRadius(radius),\n      '--sc-color': color ? getThemeColor(color, theme) : undefined,\n      '--sc-shadow': color ? undefined : 'var(--mantine-shadow-xs)',\n      '--sc-transition-duration':\n        transitionDuration === undefined ? undefined : `${transitionDuration}ms`,\n      '--sc-transition-timing-function': transitionTimingFunction,\n      '--sc-padding': getSize(size, 'sc-padding'),\n      '--sc-font-size': getFontSize(size),\n    },\n  })\n);\n\nexport const SegmentedControl = factory<SegmentedControlFactory>((_props, ref) => {\n  const props = useProps('SegmentedControl', defaultProps, _props);\n  const {\n    classNames,\n    className,\n    style,\n    styles,\n    unstyled,\n    vars,\n    data,\n    value,\n    defaultValue,\n    onChange,\n    size,\n    name,\n    disabled,\n    readOnly,\n    fullWidth,\n    orientation,\n    radius,\n    color,\n    transitionDuration,\n    transitionTimingFunction,\n    variant,\n    autoContrast,\n    withItemsBorders,\n    mod,\n    attributes,\n    ...others\n  } = props;\n\n  const getStyles = useStyles<SegmentedControlFactory>({\n    name: 'SegmentedControl',\n    props,\n    classes,\n    className,\n    style,\n    classNames,\n    styles,\n    unstyled,\n    attributes,\n    vars,\n    varsResolver,\n  });\n\n  const theme = useMantineTheme();\n\n  const _data = data.map((item) =>\n    typeof item === 'string' ? { label: item, value: item } : item\n  );\n\n  const initialized = useMounted();\n  const [key, setKey] = useState(randomId());\n  const [parent, setParent] = useState<HTMLElement | null>(null);\n  const [refs, setRefs] = useState<Record<string, HTMLElement | null>>({});\n  const setElementRef = (element: HTMLElement | null, val: string) => {\n    refs[val] = element;\n    setRefs(refs);\n  };\n\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data)\n      ? (_data.find((item) => !item.disabled)?.value ?? (data[0] as any)?.value ?? null)\n      : null,\n    onChange,\n  });\n\n  const uuid = useId(name);\n\n  const controls = _data.map((item) => (\n    <Box\n      {...getStyles('control')}\n      mod={{ active: _value === item.value, orientation }}\n      key={item.value}\n    >\n      <input\n        {...getStyles('input')}\n        disabled={disabled || item.disabled}\n        type=\"radio\"\n        name={uuid}\n        value={item.value}\n        id={`${uuid}-${item.value}`}\n        checked={_value === item.value}\n        onChange={() => !readOnly && handleValueChange(item.value)}\n        data-focus-ring={theme.focusRing}\n        key={`${item.value}-input`}\n      />\n\n      <Box\n        component=\"label\"\n        {...getStyles('label')}\n        mod={{\n          active: _value === item.value && !(disabled || item.disabled),\n          disabled: disabled || item.disabled,\n          'read-only': readOnly,\n        }}\n        htmlFor={`${uuid}-${item.value}`}\n        ref={(node) => setElementRef(node, item.value)}\n        __vars={{\n          '--sc-label-color':\n            color !== undefined ? getContrastColor({ color, theme, autoContrast }) : undefined,\n        }}\n        key={`${item.value}-label`}\n      >\n        <span {...getStyles('innerLabel')}>{item.label}</span>\n      </Box>\n    </Box>\n  ));\n\n  const mergedRef = useMergedRef(ref, (node) => setParent(node));\n\n  useShallowEffect(() => {\n    setKey(randomId());\n  }, [data.length]);\n\n  if (data.length === 0) {\n    return null;\n  }\n\n  return (\n    <Box\n      {...getStyles('root')}\n      variant={variant}\n      size={size}\n      ref={mergedRef}\n      mod={[\n        {\n          'full-width': fullWidth,\n          orientation,\n          initialized,\n          'with-items-borders': withItemsBorders,\n        },\n        mod,\n      ]}\n      {...others}\n      role=\"radiogroup\"\n      data-disabled={disabled}\n    >\n      {typeof _value === 'string' && (\n        <FloatingIndicator\n          target={refs[_value]}\n          parent={parent}\n          component=\"span\"\n          transitionDuration=\"var(--sc-transition-duration)\"\n          key={key}\n          {...getStyles('indicator')}\n        />\n      )}\n\n      {controls}\n    </Box>\n  );\n});\n\nSegmentedControl.classes = classes;\nSegmentedControl.displayName = '@mantine/core/SegmentedControl';\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}