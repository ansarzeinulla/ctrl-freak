{"ast":null,"code":"'use client';\n\nimport { useRef, useState, useEffect } from 'react';\nimport { useTimeout, useMutationObserver } from '@mantine/hooks';\nimport '../../core/utils/units-converters/rem.mjs';\nimport 'react/jsx-runtime';\nimport { getEnv } from '../../core/utils/get-env/get-env.mjs';\nimport 'clsx';\nimport '../../core/MantineProvider/Mantine.context.mjs';\nimport '../../core/MantineProvider/default-theme.mjs';\nimport '../../core/MantineProvider/MantineProvider.mjs';\nimport '../../core/MantineProvider/MantineThemeProvider/MantineThemeProvider.mjs';\nimport '../../core/MantineProvider/MantineCssVariables/MantineCssVariables.mjs';\nimport '../../core/Box/Box.mjs';\nimport '../../core/DirectionProvider/DirectionProvider.mjs';\nimport { toInt } from '../ScrollArea/utils/to-int.mjs';\nfunction isParent(parentElement, childElement) {\n  if (!childElement || !parentElement) {\n    return false;\n  }\n  let parent = childElement.parentNode;\n  while (parent != null) {\n    if (parent === parentElement) {\n      return true;\n    }\n    parent = parent.parentNode;\n  }\n  return false;\n}\nfunction useFloatingIndicator(_ref) {\n  let {\n    target,\n    parent,\n    ref,\n    displayAfterTransitionEnd\n  } = _ref;\n  const transitionTimeout = useRef(-1);\n  const [initialized, setInitialized] = useState(false);\n  const [hidden, setHidden] = useState(typeof displayAfterTransitionEnd === \"boolean\" ? displayAfterTransitionEnd : false);\n  const updatePosition = () => {\n    if (!target || !parent || !ref.current) {\n      return;\n    }\n    const targetRect = target.getBoundingClientRect();\n    const parentRect = parent.getBoundingClientRect();\n    const targetComputedStyle = window.getComputedStyle(target);\n    const parentComputedStyle = window.getComputedStyle(parent);\n    const borderTopWidth = toInt(targetComputedStyle.borderTopWidth) + toInt(parentComputedStyle.borderTopWidth);\n    const borderLeftWidth = toInt(targetComputedStyle.borderLeftWidth) + toInt(parentComputedStyle.borderLeftWidth);\n    const position = {\n      top: targetRect.top - parentRect.top - borderTopWidth,\n      left: targetRect.left - parentRect.left - borderLeftWidth,\n      width: targetRect.width,\n      height: targetRect.height\n    };\n    ref.current.style.transform = \"translateY(\".concat(position.top, \"px) translateX(\").concat(position.left, \"px)\");\n    ref.current.style.width = \"\".concat(position.width, \"px\");\n    ref.current.style.height = \"\".concat(position.height, \"px\");\n  };\n  const updatePositionWithoutAnimation = () => {\n    window.clearTimeout(transitionTimeout.current);\n    if (ref.current) {\n      ref.current.style.transitionDuration = \"0ms\";\n    }\n    updatePosition();\n    transitionTimeout.current = window.setTimeout(() => {\n      if (ref.current) {\n        ref.current.style.transitionDuration = \"\";\n      }\n    }, 30);\n  };\n  const targetResizeObserver = useRef(null);\n  const parentResizeObserver = useRef(null);\n  useEffect(() => {\n    updatePosition();\n    if (target) {\n      targetResizeObserver.current = new ResizeObserver(updatePositionWithoutAnimation);\n      targetResizeObserver.current.observe(target);\n      if (parent) {\n        parentResizeObserver.current = new ResizeObserver(updatePositionWithoutAnimation);\n        parentResizeObserver.current.observe(parent);\n      }\n      return () => {\n        var _targetResizeObserver, _parentResizeObserver;\n        (_targetResizeObserver = targetResizeObserver.current) === null || _targetResizeObserver === void 0 || _targetResizeObserver.disconnect();\n        (_parentResizeObserver = parentResizeObserver.current) === null || _parentResizeObserver === void 0 || _parentResizeObserver.disconnect();\n      };\n    }\n    return void 0;\n  }, [parent, target]);\n  useEffect(() => {\n    if (parent) {\n      const handleTransitionEnd = event => {\n        if (isParent(event.target, parent)) {\n          updatePositionWithoutAnimation();\n          setHidden(false);\n        }\n      };\n      parent.addEventListener(\"transitionend\", handleTransitionEnd);\n      return () => {\n        parent.removeEventListener(\"transitionend\", handleTransitionEnd);\n      };\n    }\n    return void 0;\n  }, [parent]);\n  useTimeout(() => {\n    if (getEnv() !== \"test\") {\n      setInitialized(true);\n    }\n  }, 20, {\n    autoInvoke: true\n  });\n  useMutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      if (mutation.type === \"attributes\" && mutation.attributeName === \"dir\") {\n        updatePositionWithoutAnimation();\n      }\n    });\n  }, {\n    attributes: true,\n    attributeFilter: [\"dir\"]\n  }, () => document.documentElement);\n  return {\n    initialized,\n    hidden\n  };\n}\nexport { useFloatingIndicator };","map":{"version":3,"names":["isParent","parentElement","childElement","parent","parentNode","useFloatingIndicator","_ref","target","ref","displayAfterTransitionEnd","transitionTimeout","useRef","initialized","setInitialized","useState","hidden","setHidden","updatePosition","current","targetRect","getBoundingClientRect","parentRect","targetComputedStyle","window","getComputedStyle","parentComputedStyle","borderTopWidth","toInt","borderLeftWidth","position","top","left","width","height","style","transform","concat","updatePositionWithoutAnimation","clearTimeout","transitionDuration","setTimeout","targetResizeObserver","parentResizeObserver","useEffect","ResizeObserver","observe","_targetResizeObserver","_parentResizeObserver","disconnect","handleTransitionEnd","event","addEventListener","removeEventListener","useTimeout","getEnv","autoInvoke","useMutationObserver","mutations","forEach","mutation","type","attributeName","attributes","attributeFilter","document","documentElement"],"sources":["/Users/ansarzeinulla/Desktop/negro/widget-frontend/node_modules/@mantine/core/src/components/FloatingIndicator/use-floating-indicator.ts"],"sourcesContent":["import { useEffect, useRef, useState, type RefObject } from 'react';\nimport { useMutationObserver, useTimeout } from '@mantine/hooks';\nimport { getEnv } from '../../core';\nimport { toInt } from '../ScrollArea/utils';\n\nfunction isParent(\n  parentElement: HTMLElement | EventTarget | null,\n  childElement: HTMLElement | null\n) {\n  if (!childElement || !parentElement) {\n    return false;\n  }\n\n  let parent = childElement.parentNode;\n  while (parent != null) {\n    if (parent === parentElement) {\n      return true;\n    }\n    parent = parent.parentNode;\n  }\n  return false;\n}\n\ninterface UseFloatingIndicatorInput {\n  target: HTMLElement | null | undefined;\n  parent: HTMLElement | null | undefined;\n  ref: RefObject<HTMLDivElement>;\n  displayAfterTransitionEnd?: boolean;\n}\n\nexport function useFloatingIndicator({\n  target,\n  parent,\n  ref,\n  displayAfterTransitionEnd,\n}: UseFloatingIndicatorInput) {\n  const transitionTimeout = useRef<number>(-1);\n  const [initialized, setInitialized] = useState(false);\n\n  const [hidden, setHidden] = useState(\n    typeof displayAfterTransitionEnd === 'boolean' ? displayAfterTransitionEnd : false\n  );\n\n  const updatePosition = () => {\n    if (!target || !parent || !ref.current) {\n      return;\n    }\n\n    const targetRect = target.getBoundingClientRect();\n    const parentRect = parent.getBoundingClientRect();\n\n    const targetComputedStyle = window.getComputedStyle(target);\n    const parentComputedStyle = window.getComputedStyle(parent);\n\n    const borderTopWidth =\n      toInt(targetComputedStyle.borderTopWidth) + toInt(parentComputedStyle.borderTopWidth);\n    const borderLeftWidth =\n      toInt(targetComputedStyle.borderLeftWidth) + toInt(parentComputedStyle.borderLeftWidth);\n\n    const position = {\n      top: targetRect.top - parentRect.top - borderTopWidth,\n      left: targetRect.left - parentRect.left - borderLeftWidth,\n      width: targetRect.width,\n      height: targetRect.height,\n    };\n\n    ref.current.style.transform = `translateY(${position.top}px) translateX(${position.left}px)`;\n    ref.current.style.width = `${position.width}px`;\n    ref.current.style.height = `${position.height}px`;\n  };\n\n  const updatePositionWithoutAnimation = () => {\n    window.clearTimeout(transitionTimeout.current);\n    if (ref.current) {\n      ref.current.style.transitionDuration = '0ms';\n    }\n    updatePosition();\n    transitionTimeout.current = window.setTimeout(() => {\n      if (ref.current) {\n        ref.current.style.transitionDuration = '';\n      }\n    }, 30);\n  };\n\n  const targetResizeObserver = useRef<ResizeObserver>(null);\n  const parentResizeObserver = useRef<ResizeObserver>(null);\n\n  useEffect(() => {\n    updatePosition();\n\n    if (target) {\n      targetResizeObserver.current = new ResizeObserver(updatePositionWithoutAnimation);\n      targetResizeObserver.current.observe(target);\n\n      if (parent) {\n        parentResizeObserver.current = new ResizeObserver(updatePositionWithoutAnimation);\n        parentResizeObserver.current.observe(parent);\n      }\n\n      return () => {\n        targetResizeObserver.current?.disconnect();\n        parentResizeObserver.current?.disconnect();\n      };\n    }\n\n    return undefined;\n  }, [parent, target]);\n\n  useEffect(() => {\n    if (parent) {\n      const handleTransitionEnd = (event: TransitionEvent) => {\n        if (isParent(event.target, parent)) {\n          updatePositionWithoutAnimation();\n          setHidden(false);\n        }\n      };\n\n      parent.addEventListener('transitionend', handleTransitionEnd);\n      return () => {\n        parent.removeEventListener('transitionend', handleTransitionEnd);\n      };\n    }\n\n    return undefined;\n  }, [parent]);\n\n  useTimeout(\n    () => {\n      // Prevents warning about state update without act\n      if (getEnv() !== 'test') {\n        setInitialized(true);\n      }\n    },\n    20,\n    { autoInvoke: true }\n  );\n\n  useMutationObserver(\n    (mutations) => {\n      mutations.forEach((mutation) => {\n        if (mutation.type === 'attributes' && mutation.attributeName === 'dir') {\n          updatePositionWithoutAnimation();\n        }\n      });\n    },\n    { attributes: true, attributeFilter: ['dir'] },\n    () => document.documentElement\n  );\n\n  return { initialized, hidden };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}