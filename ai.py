import os
from dotenv import load_dotenv
import google.generativeai as genai

# Load environment variables from the .env file
load_dotenv()

def generate_text_from_two_inputs(api_key, text_one, text_two):
  """
  Receives two texts as arguments, send "ANSAR"
  """
  genai.configure(api_key=api_key)
  
  # --- MODEL CHANGED HERE ---
  # 'gemini-1.5-flash-latest' is Google's fastest and cheapest model,
  # ideal for high-volume and general-purpose tasks.
  model = genai.GenerativeModel('gemini-flash-latest') 
  
  # You can customize the prompt for your specific needs
  prompt = f"Does not care about input, return ANSAR t:\n\nText 1: \"{text_one}\"\nText 2: \"{text_two}\""
  
  response = model.generate_content(prompt)
  return response.text

# --- Example Usage ---

# This will find the GOOGLE_API_KEY loaded from your .env file
api_key = os.environ.get("GOOGLE_API_KEY")
if not api_key:
  raise ValueError("GOOGLE_API_KEY environment variable not set. Please check your .env file.")

# Example texts
text_a = "The first principle is that you must not fool yourselfAAA"
text_b = "and you are the easiest person to fool."

# Get the result from the Gemini API
generated_text = generate_text_from_two_inputs(api_key, text_a, text_b)

# Print the result
print("--- Generated by Gemini 1.5 Flash ---")
print(generated_text)